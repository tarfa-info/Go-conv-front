{"version":3,"sources":["null","ng://ngx-soap/lib/soap/nscontext.ts","ng://ngx-soap/lib/soap/utils.ts","ng://ngx-soap/lib/soap/wsdl.ts","ng://ngx-soap/lib/soap/security/BasicAuthSecurity.ts","ng://ngx-soap/lib/soap/security/WSSecurity.ts","ng://ngx-soap/lib/soap/security/BearerSecurity.ts","ng://ngx-soap/lib/soap/security/NTLMSecurity.ts","ng://ngx-soap/lib/soap/security/index.ts","ng://ngx-soap/lib/soap/client.ts","ng://ngx-soap/lib/soap/soap.ts","ng://ngx-soap/lib/ngx-soap.service.ts","ng://ngx-soap/lib/ngx-soap.module.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","NamespaceScope","parent","prefix","localOnly","nsUri","namespaces","uri","getNamespaceURI","declared","mapping","getNamespaceMapping","p","getPrefix","NamespaceContext","currentScope","scope","scopes","prefixCount","addNamespace","pushContext","passwordDigest","nonce","created","password","rawNonce","Buffer","toString","Base64","stringify","sha1","TNS_PREFIX","findPrefix","xmlnsMapping","nsURI","utils.TNS_PREFIX","utils.findPrefix","Primitives","string","boolean","decimal","float","double","anyType","byte","int","long","short","negativeInteger","nonNegativeInteger","positiveInteger","nonPositiveInteger","unsignedByte","unsignedInt","unsignedLong","unsignedShort","duration","dateTime","time","date","gYearMonth","gYear","gMonthDay","gDay","gMonth","hexBinary","base64Binary","anyURI","QName","NOTATION","splitQName","nsName","i","indexOf","name","substring","xmlEscape","obj","substr","replace","trimLeft","trimRight","trim","text","Element","attrs","options","parts","key","children","xmlns","_initializeOptions","match","exec","valueKey","$targetNamespace","undefined","prototype","xmlKey","ignoredNamespaces","deleteFixedAttrs","Object","keys","allowedChildren","startElement","stack","ChildClass","unexpected","endElement","parent_1","_.defaultsDeep","addChild","child","Error","description","definitions","$name","init","createSubClass","root","subElement","arguments","__proto__","ElementElement","AnyElement","InputElement","OutputElement","SimpleTypeElement","RestrictionElement","ExtensionElement","ChoiceElement","EnumerationElement","ComplexTypeElement","ComplexContentElement","SimpleContentElement","SequenceElement","AllElement","MessageElement","DocumentationElement","SchemaElement","TypesElement","OperationElement","PortTypeElement","BindingElement","PortElement","ServiceElement","DefinitionsElement","ElementTypeMap","types","schema","element","any","simpleType","restriction","extension","choice","enumeration","complexType","complexContent","simpleContent","sequence","all","service","port","binding","portType","message","operation","input","output","fault","documentation","mapElementTypes","rtn","split","forEach","type","complexTypes","elements","includes","schemas","inputSoap","outputSoap","style","soapAction","methods","transport","location","ports","messages","portTypes","bindings","services","merge","source","assert","_.merge","location_1","$schemaLocation","$location","namespace","$namespace","targetNamespace","hasOwnProperty","console","error","use","$use","encodingStyle","$encodingStyle","$soapAction","$style","$transport","self","postProcess","part","ns","$element","elementChildren","lookupTypes","targetNSAlias","$lookupType","_getNestedLookupTypeString","join","filter","schemaXmlns","_createLookupTypeObject","$lookupTypes","$type","typeNs","ctype","method","splice","schemaDefinition","nsString","splittedNSString","nsAlias","splittedName","lookupTypeObj","resolvedType","excluded","concat","self_1","resolvedChildType","tag","messageName","$message","$binding","desc","$base","typeName","schema_1","typeElement_1","getBase","map","typeElement","base","isMany","$maxOccurs","isNaN","$minOccurs","$ref","descriptions","elem_1","description_1","name_1","inputDesc","outputDesc","name_2","name_3","WSDL","definition","fromFunc","x","callback","_includesWsdl","WSDL_CACHE","charCodeAt","slice","_fromXML","_fromServices","processIncludes","name_4","name_5","bindingName","topEls","topElements","methodName","inputName","outputName","xmlnsInEnvelope","_xmlnsMap","catch","err","appendColon","charAt","noColonNameSpace","open_wsdl","wsdl_headers","wsdl_options","log","httpClient","get","responseType","toPromise","wsdlDef","_a","wsdl","onReady","wsdlObj","BasicAuthSecurity","username","defaults","_username","_password","ignoreBaseNameSpaces","_originalIgnoredNamespaces","Array","isArray","override","escapeXML","returnFault","handleNilAsNull","namespaceArrayElements","request","forceSoap12Headers","customDeserializer","overrideRootElement","useEmptyTag","_processNextInclude","include","shift","test","includePath","url.resolve","_.assign","fromCache","open_wsdl_recursive","_.mergeWith","a","b","destination","_.isArray","describeServices","name_6","toXML","xml","xmlToObject","id","sax.parser","objectName","object","Envelope","Header","Security","UsernameToken","Username","Password","Body","Fault","faultcode","faultstring","detail","refs","onopentag","node","attributeName","xsiTypeSchema","attributes","top","topSchema","elementAttributes","hasNonXmlnsAttribute","hasNilAttribute","originalName","isInput","onerror","href","hrefs","par","res","toLowerCase","attributesKey","xsiType","typeURI","typeDef","findSchemaObject","nil","onclosetag","cur","topObject","_.isPlainObject","oncdata","originalText","top_1","ontext","resume","statusCode","parseInt","Date","preserveWhitespace","saxStream","sax.createStream","on","pipe","r","finish","write","close","ref","code","$value","qname","def","objectToDocumentXML","params","nsPrefix","_xml","args","parameterTypeObj","objectToXML","objectToRpcXML","isParts","defs","prefixedKey","isIgnoredNameSpace","filterOutIgnoredNameSpace","isFirst","xmlnsAttr","schemaObject","nsContext","parentNsPrefix","current","soapHeader","qualified","$elementFormDefault","prefixNamespace","xmlnsAttrib","xmlnsAttributes","attribute","declareNamespace","item","arrayAttr","processAttributes","correctOuterNsPrefix","openingTagParts","popContext","attr","nonSubNameSpace","emptyNonSubNameSpace","nameWithNsRegex","childSchemaObject","findChildSchemaObject","childNsPrefix","childName","childNsURI","childXmlnsAttrib","elementQName","registerNamespace","unqualified","$form","resolvedChildSchemaObject","typeQName","typePrefix","findSchemaType","$baseNameSpace","xsi_type","attrObj","attrKey","attrValue","backtrace","found","typeObj","typeInfo","baseQName","childNameSpace","foundBase","_parse","strict","str","alias","addHeaders","headers","Authorization","addOptions","validPasswordTypes","WSSecurity","_passwordType","passwordType","_hasTimeStamp","hasTimeStamp","hasNonce","_hasNonce","_hasTokenCreated","hasTokenCreated","actor","_actor","mustUnderstand","_mustUnderstand","BearerSecurity","token","_token","NTLMSecurity","domain","workstation","ntlm","getDate","d","pad","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","now","timeStampXml","getTime","Math","random","Connection","security","nonIdentifierChars","Client","endpoint","_initializeServices","overridePromiseSuffix","addSoapHeader","soapHeaders","changeSoapHeader","index","getSoapHeaders","clearSoapHeaders","addHttpHeader","httpHeaders","getHttpHeaders","clearHttpHeaders","addBodyAttribute","bodyAttribute","bodyAttributes","composition_1","getOwnPropertyNames","prop","idx","array","getBodyAttributes","clearBodyAttributes","setEndpoint","describe","setSecurity","setSOAPAction","SOAPAction","_defineService","streamAllowed","stream","normalizeNames","envelopeKey","_definePort","_defineMethod","extraHeaders","_invoke","encoding","Content-Type","xmlnsSoap","header","lastIndexOf","assert.ok","lastMessage","lastRequest","lastEndpoint","exchangeId","uuid4","tryJSONparse","JSON","parse","post","observe","response","lastResponse","lastResponseHeaders","json","_.isObject","responseBody","html","term","parseSync","throwError","_this","cache","getFromCache","url","wsdl.open_wsdl","createClient","disableCache","NgxSoapService","http","wsdlUrl","Injectable","providedIn","HttpClient","NgxSoapModule","NgModule","imports","HttpClientModule","exports"],"mappings":"wtBAcA,SAAAA,EAmD0BC,EAASC,EAAYC,EAAGC,GAC9C,OAAO,IAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GAC/C,SAAAC,EAAmBC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAAAC,EAAkBJ,GAAS,IAAMC,EAAKN,EAAiB,SAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAAAF,EAAcI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOL,OAAS,IAAIN,EAAE,SAAUG,GAAWA,EAAQQ,EAAOL,SAAWO,KAAKR,EAAWK,GACnIH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,UAItE,SAAAO,EAA4BjB,EAASkB,GACjC,IAAsGC,EAAGC,EAAGC,EAAGC,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPJ,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOK,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEZ,KAAMkB,EAAK,GAAIC,QAASD,EAAK,GAAIE,SAAUF,EAAK,IAAwB,mBAAXG,SAA0BT,EAAES,OAAOC,UAAY,WAAa,OAAOC,OAAUX,EACvJ,SAAAM,EAAcM,GAAK,OAAO,SAAUC,GAAK,OACzC,SAAcC,GACV,GAAIjB,EAAG,MAAM,IAAIkB,UAAU,mCAC3B,KAAOd,GAAG,IACN,GAAIJ,EAAI,EAAGC,IAAMC,EAAY,EAARe,EAAG,GAAShB,EAAU,UAAIgB,EAAG,GAAKhB,EAAS,YAAOC,EAAID,EAAU,YAAMC,EAAEiB,KAAKlB,GAAI,GAAKA,EAAEV,SAAWW,EAAIA,EAAEiB,KAAKlB,EAAGgB,EAAG,KAAKtB,KAAM,OAAOO,EAE3J,OADID,EAAI,EAAGC,IAAGe,EAAK,CAAS,EAARA,EAAG,GAAQf,EAAEb,QACzB4B,EAAG,IACP,KAAK,EAAG,KAAK,EAAGf,EAAIe,EAAI,MACxB,KAAK,EAAc,OAAXb,EAAEC,QAAgB,CAAEhB,MAAO4B,EAAG,GAAItB,MAAM,GAChD,KAAK,EAAGS,EAAEC,QAASJ,EAAIgB,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKb,EAAEI,IAAIY,MAAOhB,EAAEG,KAAKa,MAAO,SACxC,QACI,KAAkBlB,EAAe,GAA3BA,EAAIE,EAAEG,MAAYc,QAAcnB,EAAEA,EAAEmB,OAAS,MAAkB,IAAVJ,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEb,EAAI,EAAG,SACjG,GAAc,IAAVa,EAAG,MAAcf,GAAMe,EAAG,GAAKf,EAAE,IAAMe,EAAG,GAAKf,EAAE,IAAM,CAAEE,EAAEC,MAAQY,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYb,EAAEC,MAAQH,EAAE,GAAI,CAAEE,EAAEC,MAAQH,EAAE,GAAIA,EAAIe,EAAI,MAC7D,GAAIf,GAAKE,EAAEC,MAAQH,EAAE,GAAI,CAAEE,EAAEC,MAAQH,EAAE,GAAIE,EAAEI,IAAIc,KAAKL,GAAK,MACvDf,EAAE,IAAIE,EAAEI,IAAIY,MAChBhB,EAAEG,KAAKa,MAAO,SAEtBH,EAAKlB,EAAKoB,KAAKtC,EAASuB,GAC1B,MAAOZ,GAAKyB,EAAK,CAAC,EAAGzB,GAAIS,EAAI,UAAeD,EAAIE,EAAI,EACtD,GAAY,EAARe,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAE5B,MAAO4B,EAAG,GAAKA,EAAG,QAAK,EAAQtB,MAAM,GArB9BL,CAAK,CAACyB,EAAGC,sJC3E7D,IAAAO,EAGE,SAAAA,EAAYC,GACV,wBAOgB,SAASC,EAAQC,GACjC,OAAQD,GACN,IAAK,MACH,MAAO,uCACT,IAAK,QACH,MAAO,gCACT,QACE,IAAIE,EAAQb,KAAKc,WAAWH,GAE5B,OAAa,MAATE,EACKA,EAAME,KACHH,GAAaZ,KAAKU,OACrBV,KAAKU,OAAOM,gBAAgBL,GAE5B,gCAKO,SAASA,GAC7B,OAAQA,GACN,IAAK,MACH,MAAO,CACLI,IAAK,uCACLJ,OAAQ,MACRM,UAAU,GAEd,IAAK,QACH,MAAO,CACLF,IAAK,gCACLJ,OAAQ,QACRM,UAAU,GAEd,QACE,IAAIC,EAAUlB,KAAKc,WAAWH,GAE9B,OAAe,MAAXO,EACKA,EACElB,KAAKU,OACPV,KAAKU,OAAOS,oBAAoBR,GAEhC,sBAKH,SAASE,EAAOD,GAC1B,OAAQC,GACN,IAAK,uCACH,MAAO,MACT,IAAK,gCACH,MAAO,QACT,QACE,IAAK,IAAIO,KAAKpB,KAAKc,WACjB,GAAId,KAAKc,WAAWM,GAAGL,MAAQF,EAC7B,OAAOO,EAGX,OAAKR,GAAaZ,KAAKU,OACdV,KAAKU,OAAOW,UAAUR,GAEtB,SApEPb,gBAAgBS,GACpB,OAAO,IAAIA,EAAeC,GAE5BV,KAAKU,OAASA,EACdV,KAAKc,WAAa,IAsEtBQ,EAIE,SAAAA,IACE,qBAQa,SAASX,EAAQE,EAAOD,GACrC,OAAIZ,KAAKgB,gBAAgBL,EAAQC,KAAeC,KAG5Cb,KAAKuB,eACPvB,KAAKuB,aAAaT,WAAWH,GAAU,CACrCI,IAAKF,EACLF,OAAQA,EACRM,UAAU,IAEL,qBAKG,WACZ,IAAIO,EAAQ,IAAIf,EAAeT,KAAKuB,cAGpC,OAFAvB,KAAKyB,OAAOjB,KAAKgB,GACjBxB,KAAKuB,aAAeC,mBAIT,WACX,IAAIA,EAAQxB,KAAKyB,OAAOnB,MAMxB,OAJEN,KAAKuB,aADHC,EACkBA,EAAMd,OAEN,KAEfc,wBAGS,SAASb,EAAQC,GACjC,OAAOZ,KAAKuB,cAAgBvB,KAAKuB,aAAaP,gBAAgBL,EAAQC,mBAG5D,SAASC,EAAOD,GAC1B,OAAOZ,KAAKuB,cAAgBvB,KAAKuB,aAAaF,UAAUR,EAAOD,2BAG7C,SAASC,GAC3B,IAAIF,EAASX,KAAKqB,UAAUR,GAC5B,GAAIF,EAEF,OAAOA,EAGP,KACEA,EAAS,QAAUX,KAAK0B,YACnB1B,KAAKgB,gBAAgBL,KAO9B,OADAX,KAAK2B,aAAahB,EAAQE,GAAO,GAC1BF,yBAGU,SAASA,EAAQE,GAClC,GAAIb,KAAKuB,aAAc,CACrB,IAAIL,EAAUlB,KAAKuB,aAAaJ,oBAAoBR,GACpD,QAAIO,GAAWA,EAAQH,MAAQF,GAASK,EAAQD,WAGhDjB,KAAKuB,aAAaT,WAAWH,GAAU,CACrCI,IAAKF,EACLF,OAAQA,EACRM,UAAU,GAEL,IAET,OAAO,KAhFDjB,gBAAgBsB,GACpB,OAAO,IAAIA,EAEbtB,KAAKyB,OAAS,GACdzB,KAAK4B,cACL5B,KAAK0B,YAAc,GCtFVG,EAAiB,SAAwBC,EAAOC,EAASC,GACpE,IAAMC,EAAW,IAAIC,EAAAA,OAAOJ,GAAS,GAAI,UAAUK,SAAS,UAC5D,OAAOC,EAAOC,UAAUC,EAAKL,EAAWF,EAAUC,EAAU,MAGjDO,EAAa,UAQbC,EAAa,SAASC,EAAcC,GAC/C,IAAK,IAAMzC,KAAKwC,EACd,GAAIxC,IAAMsC,GACNE,EAAaxC,KAAOyC,EACtB,OAAOzC,GCUTsC,EAAaI,EACbH,EAAaI,EAEbC,EAAa,CACfC,OAAQ,EACRC,UAAS,EACTC,QAAS,EACTC,QAAO,EACPC,SAAQ,EACRC,QAAS,EACTC,OAAM,EACNC,MAAK,EACLC,OAAM,EACNC,QAAO,EACPC,gBAAiB,EACjBC,mBAAoB,EACpBC,gBAAiB,EACjBC,mBAAoB,EACpBC,aAAc,EACdC,YAAa,EACbC,aAAc,EACdC,cAAe,EACfC,SAAU,EACVC,SAAU,EACVC,KAAM,EACNC,KAAM,EACNC,WAAY,EACZC,MAAO,EACPC,UAAW,EACXC,KAAM,EACNC,OAAQ,EACRC,UAAW,EACXC,aAAc,EACdC,OAAQ,EACRC,MAAO,EACPC,SAAU,GAGZ,SAAAC,EAAoBC,GAClB,IAAIC,EAAsB,iBAAXD,EAAsBA,EAAOE,QAAQ,MAAQ,EAC5D,OAAOD,EAAI,EAAI,CAAErE,OAAQ4B,EAAY2C,KAAMH,GACzC,CAAEpE,OAAQoE,EAAOI,UAAU,EAAGH,GAAIE,KAAMH,EAAOI,UAAUH,EAAI,IAGjE,SAAAI,EAAmBC,GACjB,MAAqB,iBAAjB,EACuB,cAArBA,EAAIC,OAAO,EAAG,IAAyC,QAAnBD,EAAIC,QAAQ,GAC3CD,EAEFA,EACJE,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UAGZF,EAGT,IAAIG,EAAW,aACXC,EAAY,aAEhB,SAAAC,EAAcC,GACZ,OAAOA,EAAKJ,QAAQC,EAAU,IAAID,QAAQE,EAAW,IASvD,IAAIG,EAAe,SAAUb,EAAQc,EAAOC,GAC1C,IAAIC,EAAQjB,EAAWC,GAUvB,IAAK,IAAIiB,KARThG,KAAK+E,OAASA,EACd/E,KAAKW,OAASoF,EAAMpF,OACpBX,KAAKkF,KAAOa,EAAMb,KAClBlF,KAAKiG,SAAW,GAChBjG,KAAKkG,MAAQ,GAEblG,KAAKmG,mBAAmBL,GAERD,EAAO,CACrB,IAAIO,EAAQ,gBAAgBC,KAAKL,GAC7BI,EACFpG,KAAKkG,MAAME,EAAM,GAAKA,EAAM,GAAK7D,GAAcsD,EAAMG,GAGzC,UAARA,EACFhG,KAAKA,KAAKsG,UAAYT,EAAMG,GAE5BhG,KAAK,IAAMgG,GAAOH,EAAMG,GAI1BhG,KAAKuG,mBAAqBC,YAE5BxG,KAAKkG,MAAM3D,GAAcvC,KAAKuG,mBAIlCX,EAAQa,UAAUN,mBAAqB,SAAUL,GAC3CA,GACF9F,KAAKsG,SAAWR,EAAQQ,UAAY,SACpCtG,KAAK0G,OAASZ,EAAQY,QAAU,OAChC1G,KAAK2G,kBAAoBb,EAAQa,mBAAqB,KAEtD3G,KAAKsG,SAAW,SAChBtG,KAAK0G,OAAS,OACd1G,KAAK2G,kBAAoB,KAI7Bf,EAAQa,UAAUG,iBAAmB,WACnC5G,KAAKiG,UAAqC,IAAzBjG,KAAKiG,SAAS1F,eAAuBP,KAAKiG,SAC3DjG,KAAKkG,OAA4C,IAAnCW,OAAOC,KAAK9G,KAAKkG,OAAO3F,eAAuBP,KAAKkG,aAC3DlG,KAAK+E,cACL/E,KAAKW,cACLX,KAAKkF,MAGdU,EAAQa,UAAUM,gBAAkB,GAEpCnB,EAAQa,UAAUO,aAAe,SAAUC,EAAOlC,EAAQc,EAAOC,GAC/D,GAAK9F,KAAK+G,gBAAV,CAIA,IAAIG,EAAalH,KAAK+G,gBAAgBjC,EAAWC,GAAQG,MAGrDgC,EACFD,EAAMzG,KAAK,IAAI0G,EAAWnC,EAAQc,EAAOC,IAGzC9F,KAAKmH,WAAWpC,KAKpBa,EAAQa,UAAUW,WAAa,SAAUH,EAAOlC,GAC9C,GAAI/E,KAAK+E,SAAWA,EAAQ,CAC1B,GAAIkC,EAAM1G,OAAS,EACjB,OACF,IAAI8G,EAASJ,EAAMA,EAAM1G,OAAS,GAC9BP,OAASiH,EAAM,KACjBK,EAAAA,aAAeL,EAAM,GAAGf,MAAOlG,KAAKkG,OAEpCmB,EAAOpB,SAASzF,KAAKR,MACrBqH,EAAOE,SAASvH,OAElBiH,EAAM3G,QAIVsF,EAAQa,UAAUc,SAAW,SAAUC,KAIvC5B,EAAQa,UAAUU,WAAa,SAAUjC,GACvC,MAAM,IAAIuC,MAAM,6BAA+BvC,EAAO,YAAclF,KAAK+E,SAG3Ea,EAAQa,UAAUiB,YAAc,SAAUC,GACxC,OAAO3H,KAAK4H,OAAS5H,KAAKkF,MAG5BU,EAAQa,UAAUoB,KAAO,aAGzBjC,EAAQkC,eAAiB,WACvB,IAAIC,EAAO/H,KACPgI,EAAa,WACfD,EAAKhJ,MAAMiB,KAAMiI,WACjBjI,KAAK6H,QAIP,OADAG,EAAWvB,UAAUyB,UAAYH,EAAKtB,UAC/BuB,GAIT,IAAIG,EAAiBvC,EAAQkC,iBACzBM,EAAaxC,EAAQkC,iBACrBO,EAAezC,EAAQkC,iBACvBQ,EAAgB1C,EAAQkC,iBACxBS,EAAoB3C,EAAQkC,iBAC5BU,EAAqB5C,EAAQkC,iBAC7BW,EAAmB7C,EAAQkC,iBAC3BY,EAAgB9C,EAAQkC,iBACxBa,EAAqB/C,EAAQkC,iBAC7Bc,EAAqBhD,EAAQkC,iBAC7Be,EAAwBjD,EAAQkC,iBAChCgB,EAAuBlD,EAAQkC,iBAC/BiB,EAAkBnD,EAAQkC,iBAC1BkB,EAAapD,EAAQkC,iBACrBmB,EAAiBrD,EAAQkC,iBACzBoB,EAAuBtD,EAAQkC,iBAE/BqB,EAAgBvD,EAAQkC,iBACxBsB,EAAexD,EAAQkC,iBACvBuB,EAAmBzD,EAAQkC,iBAC3BwB,EAAkB1D,EAAQkC,iBAC1ByB,EAAiB3D,EAAQkC,iBACzB0B,EAAc5D,EAAQkC,iBACtB2B,EAAiB7D,EAAQkC,iBACzB4B,GAAqB9D,EAAQkC,iBAE7B6B,GAAiB,CACnBC,MAAO,CAACR,EAAc,wBACtBS,OAAQ,CAACV,EAAe,iDACxBW,QAAS,CAAC3B,EAAgB,0BAC1B4B,IAAK,CAAC3B,EAAY,IAClB4B,WAAY,CAACzB,EAAmB,eAChC0B,YAAa,CAACzB,EAAoB,mCAClC0B,UAAW,CAACzB,EAAkB,uBAC9B0B,OAAQ,CAACzB,EAAe,+BAExB0B,YAAa,CAACzB,EAAoB,IAClC0B,YAAa,CAACzB,EAAoB,+DAClC0B,eAAgB,CAACzB,EAAuB,aACxC0B,cAAe,CAACzB,EAAsB,aACtC0B,SAAU,CAACzB,EAAiB,+BAC5B0B,IAAK,CAACzB,EAAY,kBAElB0B,QAAS,CAACjB,EAAgB,sBAC1BkB,KAAM,CAACnB,EAAa,yBACpBoB,QAAS,CAACrB,EAAgB,iDAC1BsB,SAAU,CAACvB,EAAiB,2BAC5BwB,QAAS,CAAC7B,EAAgB,sBAC1B8B,UAAW,CAAC1B,EAAkB,+CAC9B2B,MAAO,CAAC3C,EAAc,6CACtB4C,OAAQ,CAAC3C,EAAe,6CACxB4C,MAAO,CAACtF,EAAS,wBACjB+B,YAAa,CAAC+B,GAAoB,+DAClCyB,cAAe,CAACjC,EAAsB,KAGxC,SAAAkC,GAAyBxB,GACvB,IAAIyB,EAAM,GAKV,OAJAzB,EAAQA,EAAM0B,MAAM,MACdC,QAAQ,SAAUC,GACtBH,EAAIG,EAAKjG,QAAQ,KAAM,MAAQoE,GAAe6B,IAAS,CAAC5F,IAAU,KAE7DyF,EAGT,IAAK,IAAIpL,MAAK0J,GAAgB,CAC5B,IAAIzJ,GAAIyJ,GAAe1J,IACvBC,GAAE,GAAGuG,UAAUM,gBAAkBqE,GAAgBlL,GAAE,IAGrD+I,EAAexC,UAAUoB,KAAO,WAC9B7H,KAAK8J,QAAU,KACf9J,KAAK+F,MAAQ,MAGfoD,EAAc1C,UAAUoB,KAAO,WAC7B7H,KAAKyL,aAAe,GACpBzL,KAAK4J,MAAQ,GACb5J,KAAK0L,SAAW,GAChB1L,KAAK2L,SAAW,IAGlBvC,EAAa3C,UAAUoB,KAAO,WAC5B7H,KAAK4L,QAAU,IAGjBvC,EAAiB5C,UAAUoB,KAAO,WAChC7H,KAAKgL,MAAQ,KACbhL,KAAKiL,OAAS,KACdjL,KAAK6L,UAAY,KACjB7L,KAAK8L,WAAa,KAClB9L,KAAK+L,MAAQ,GACb/L,KAAKgM,WAAa,IAGpB1C,EAAgB7C,UAAUoB,KAAO,WAC/B7H,KAAKiM,QAAU,IAGjB1C,EAAe9C,UAAUoB,KAAO,WAC9B7H,KAAKkM,UAAY,GACjBlM,KAAK+L,MAAQ,GACb/L,KAAKiM,QAAU,IAGjBzC,EAAY/C,UAAUoB,KAAO,WAC3B7H,KAAKmM,SAAW,MAGlB1C,EAAehD,UAAUoB,KAAO,WAC9B7H,KAAKoM,MAAQ,IAGf1C,GAAmBjD,UAAUoB,KAAO,WAChB,gBAAd7H,KAAKkF,MAAwBlF,KAAKmH,WAAWnH,KAAK+E,QACtD/E,KAAKqM,SAAW,GAChBrM,KAAKsM,UAAY,GACjBtM,KAAKuM,SAAW,GAChBvM,KAAKwM,SAAW,GAChBxM,KAAK4L,QAAU,IAGjB1C,EAAqBzC,UAAUoB,KAAO,aAGtCsB,EAAc1C,UAAUgG,MAAQ,SAAUC,GAQxC,OAPAC,EAAAA,GAAOD,aAAkBvD,GACrBnJ,KAAKuG,mBAAqBmG,EAAOnG,mBACnCqG,EAAAA,MAAQ5M,KAAKyL,aAAciB,EAAOjB,cAClCmB,EAAAA,MAAQ5M,KAAK4J,MAAO8C,EAAO9C,OAC3BgD,EAAAA,MAAQ5M,KAAK0L,SAAUgB,EAAOhB,UAC9BkB,EAAAA,MAAQ5M,KAAKkG,MAAOwG,EAAOxG,QAEtBlG,MAITmJ,EAAc1C,UAAUc,SAAW,SAAUC,GAC3C,KAAIA,EAAMI,SAAS/E,GAAnB,CAEA,GAAmB,YAAf2E,EAAMtC,MAAqC,WAAfsC,EAAMtC,KAAmB,CACvD,IAAI2H,EAAWrF,EAAMsF,iBAAmBtF,EAAMuF,UAC1CF,GACF7M,KAAK2L,SAASnL,KAAK,CACjBwM,UAAWxF,EAAMyF,YAAczF,EAAMjB,kBAAoBvG,KAAKuG,iBAC9D4F,SAAUU,QAIQ,gBAAfrF,EAAMtC,KACblF,KAAKyL,aAAajE,EAAMI,OAASJ,EAEX,YAAfA,EAAMtC,KACblF,KAAK0L,SAASlE,EAAMI,OAASJ,EAEtBA,EAAMI,QACb5H,KAAK4J,MAAMpC,EAAMI,OAASJ,GAE5BxH,KAAKiG,SAAS3F,QAIhB8I,EAAa3C,UAAUc,SAAW,SAAUC,GAC1CmF,EAAAA,GAAOnF,aAAiB2B,GAExB,IAAI+D,EAAkB1F,EAAMjB,iBAEvBvG,KAAK4L,QAAQuB,eAAeD,GAG/BE,QAAQC,MAAM,qBAAuBH,EAAkB,uCAFvDlN,KAAK4L,QAAQsB,GAAmB1F,GAMpCa,EAAa5B,UAAUc,SAAW,SAAUC,GACvB,SAAfA,EAAMtC,OACRlF,KAAKsN,IAAM9F,EAAM+F,KACA,YAAbvN,KAAKsN,MACPtN,KAAKwN,cAAgBhG,EAAMiG,gBAE7BzN,KAAKiG,SAAS3F,QAIlBgI,EAAc7B,UAAUc,SAAW,SAAUC,GACxB,SAAfA,EAAMtC,OACRlF,KAAKsN,IAAM9F,EAAM+F,KACA,YAAbvN,KAAKsN,MACPtN,KAAKwN,cAAgBhG,EAAMiG,gBAE7BzN,KAAKiG,SAAS3F,QAIlB+I,EAAiB5C,UAAUc,SAAW,SAAUC,GAC3B,cAAfA,EAAMtC,OACRlF,KAAKgM,WAAaxE,EAAMkG,aAAe,GACvC1N,KAAK+L,MAAQvE,EAAMmG,QAAU,GAC7B3N,KAAKiG,SAAS3F,QAIlBiJ,EAAe9C,UAAUc,SAAW,SAAUC,GACzB,YAAfA,EAAMtC,OACRlF,KAAKkM,UAAY1E,EAAMoG,WACvB5N,KAAK+L,MAAQvE,EAAMmG,OACnB3N,KAAKiG,SAAS3F,QAIlBkJ,EAAY/C,UAAUc,SAAW,SAAUC,GACtB,YAAfA,EAAMtC,MAAmD,oBAArBsC,EAAe,YACrDxH,KAAKmM,SAAW3E,EAAMuF,YAI1BrD,GAAmBjD,UAAUc,SAAW,SAAUC,GAChD,IAAIqG,EAAO7N,KACPwH,aAAiB4B,EAEnBwD,EAAAA,MAAQiB,EAAKjC,QAASpE,EAAMoE,SAErBpE,aAAiByB,EACxB4E,EAAKxB,SAAS7E,EAAMI,OAASJ,EAEP,WAAfA,EAAMtC,MACb2I,EAAKjC,QAAQpE,EAAMyF,YAAc,IAAI9D,EAAc3B,EAAMyF,WAAY,IACrEY,EAAKjC,QAAQpE,EAAMyF,YAAY1F,SAASC,IAEjCA,aAAiB8B,EACxBuE,EAAKvB,UAAU9E,EAAMI,OAASJ,EAEvBA,aAAiB+B,EACA,yCAApB/B,EAAM0E,WACY,kDAApB1E,EAAM0E,YACN2B,EAAKtB,SAAS/E,EAAMI,OAASJ,GAExBA,aAAiBiC,IACxBoE,EAAKrB,SAAShF,EAAMI,OAASJ,GAI/BxH,KAAKiG,SAAS3F,OAGhB2I,EAAexC,UAAUqH,YAAc,SAAUnG,GAC/C,IAAIoG,EAAO,KACPvG,EAAQhB,UACRP,EAAWjG,KAAKiG,UAAY,GAC5B+H,EAAKxH,UACLzB,EAASyB,UACTxB,EAAIwB,UACJgF,EAAOhF,UAEX,IAAKxB,KAAKiB,EACR,GAAmC,UAA9BuB,EAAQvB,EAASjB,IAAIE,KAAiB,CACzC6I,EAAOvG,EACP,MAIJ,GAAKuG,EAAL,CAIA,GAAIA,EAAKE,SAAU,CACjB,IACEC,EADEC,EAAc,UAGXnO,KAAK+F,MAGZiI,GADAjJ,EAASD,EAAWiJ,EAAKE,WACbtN,OACZ,IAAIkJ,EAASlC,EAAYiE,QAAQjE,EAAYzB,MAAM8H,IAEnD,GADAhO,KAAK8J,QAAUD,EAAO6B,SAAS3G,EAAOG,OACjClF,KAAK8J,QAER,OAYF,GAVA9J,KAAK8J,QAAQsE,cAAgBJ,EAC7BhO,KAAK8J,QAAQoD,gBAAkBvF,EAAYzB,MAAM8H,GAIjDhO,KAAK8J,QAAQuE,YAAcN,EAAKE,SAKH,GAH7BC,EAAkBlO,KAAK8J,QAAQ7D,UAGX1F,OAClB,IAAKyE,EAAI,EAAGA,EAAIkJ,EAAgB3N,OAAQyE,IACtCmJ,EAAY3N,KAAKR,KAAKsO,2BAA2BJ,EAAgBlJ,KAKrE,GAAyB,EAArBmJ,EAAY5N,OAAY,CAC1B4N,EAAcA,EACZI,KAAK,KACLjD,MAAM,KACNkD,OAAO,SAAgChD,GACrC,MAAgB,MAATA,IAGX,IAAIiD,EAAc9G,EAAYiE,QAAQ5L,KAAK8J,QAAQoD,iBAAiBhH,MAEpE,IAAKlB,EAAI,EAAGA,EAAImJ,EAAY5N,OAAQyE,IAClCmJ,EAAYnJ,GAAKhF,KAAK0O,wBAAwBP,EAAYnJ,GAAIyJ,GAMlE,GAFAzO,KAAK8J,QAAQ6E,aAAeR,EAExBnO,KAAK8J,QAAQ8E,MAAO,CACtBpD,EAAO1G,EAAW9E,KAAK8J,QAAQ8E,OAC/B,IAAIC,EAAShF,EAAO3D,OAAS2D,EAAO3D,MAAMsF,EAAK7K,SAAWgH,EAAYzB,MAAMsF,EAAK7K,QAEjF,GAAIkO,EACF,GAAIrD,EAAKtG,QAAQrC,OAGZ,CAGH,IAAIiM,GADJjF,EAASlC,EAAYiE,QAAQiD,IACVpD,aAAaD,EAAKtG,OAAS2E,EAAOD,MAAM4B,EAAKtG,OAAS2E,EAAO6B,SAASF,EAAKtG,MAG1F4J,IACF9O,KAAK+F,MAAQ+I,EAAMpH,YAAYC,EAAakC,EAAO3D,aAKtD,CACH,IAAI6I,EAAS/O,KAAK8J,QAAQpC,YAAYC,EAAakC,EAAO3D,OAC1DlG,KAAK+F,MAAQgJ,EAAOhK,EAAOG,MAI7BlF,KAAKiG,SAAS+I,OAAO,EAAG,QAKxB,IAFAhP,KAAK+F,MAAQ,UACN/F,KAAK8J,QACP9E,EAAI,EAAG+I,EAAO/N,KAAKiG,SAASjB,GAAIA,IACnC,GAAkB,kBAAd+I,EAAK7I,KAAT,CAIAyH,EAAAA,GAAqB,SAAdoB,EAAK7I,KAAiB,yBAC7BH,EAASD,EAAWiJ,EAAKa,OACzBZ,EAAKrG,EAAYzB,MAAMnB,EAAOpE,QAC9B6K,EAAOzG,EAAOG,KACd,IAAI+J,EAAmBtH,EAAYiE,QAAQoC,GAEzChO,KAAK+F,MAAMgI,EAAKnG,YADc,IAArBqH,EACgBtH,EAAYiE,QAAQoC,GAAIpE,MAAM4B,IAAS7D,EAAYiE,QAAQoC,GAAIvC,aAAaD,GAE5EuC,EAAKa,MAGM,iBAA3B5O,KAAK+F,MAAMgI,EAAKnG,SACzB5H,KAAK+F,MAAMgI,EAAKnG,OAAOjH,OAASoE,EAAOpE,OACvCX,KAAK+F,MAAMgI,EAAKnG,OAAO1B,MAAQ8H,GAGjChO,KAAKiG,SAAS+I,OAAOhK,IAAK,GAG9BhF,KAAK4G,qBAcPqC,EAAexC,UAAUiI,wBAA0B,SAAUQ,EAAUhJ,GACrE,IAAIiJ,EAAmBrK,EAAWoK,GAChCE,EAAUD,EAAiBxO,OAC3B0O,EAAeF,EAAiBjK,KAAKoG,MAAM,KAC3CE,EAAO6D,EAAa,GACpBnK,EAAOmK,EAAa,GACpBC,EAAqB,GAMvB,OAJAA,EAAcrC,WAAa/G,EAAMkJ,GACjCE,EAAcV,MAAQQ,EAAU,IAAM5D,EACtC8D,EAAc1H,MAAQ1C,EAEfoK,GAaTrG,EAAexC,UAAU6H,2BAA6B,SAAUxE,GAC9D,IAAIyF,EAAe,IACjBC,EAAWxP,KAAK2G,kBAAkB8I,OAAO,MAQ3C,GANI3F,EAAQqD,eAAe,UAAqC,iBAAlBrD,EAAQ8E,QACG,IAAnDY,EAASvK,QAAQ6E,EAAQ8E,MAAMtD,MAAM,KAAK,MAC5CiE,GAAiB,IAAMzF,EAAQ8E,MAAQ,IAAM9E,EAAQlC,OAI3B,EAA1BkC,EAAQ7D,SAAS1F,OAAY,CAC/B,IAAImP,EAAO1P,KAEX8J,EAAQ7D,SAASsF,QAAQ,SAAU/D,GACjC,IAAImI,EAAoBD,EAAKpB,2BAA2B9G,GAAOjC,QAAQ,MAAO,IAE1EoK,GAAkD,iBAAtBA,IAC9BJ,GAAiB,IAAMI,KAK7B,OAAOJ,GAGTlG,EAAiB5C,UAAUqH,YAAc,SAAUnG,EAAaiI,GAE9D,IADA,IAAI3J,EAAWjG,KAAKiG,SACXjB,EAAI,EAAGwC,OAAK,EAAEA,EAAQvB,EAASjB,GAAIA,IAC1C,GAAmB,UAAfwC,EAAMtC,MAAmC,WAAfsC,EAAMtC,KAEpC,GAAY,YAAR0K,EAAJ,CAKA,IAAIC,EAAc/K,EAAW0C,EAAMsI,UAAU5K,KACzC4F,EAAUnD,EAAY0E,SAASwD,GACnC/E,EAAQgD,YAAYnG,GAChBmD,EAAQhB,SACVnC,EAAY0E,SAASvB,EAAQhB,QAAQlC,OAASkD,EAC9C9K,KAAKwH,EAAMtC,MAAQ4F,EAAQhB,SAG3B9J,KAAKwH,EAAMtC,MAAQ4F,EAErB7E,EAAS+I,OAAOhK,IAAK,QAdnBhF,KAAKwH,EAAMtC,MAAQsC,EACnBvB,EAAS+I,OAAOhK,IAAK,GAezBhF,KAAK4G,oBAGP0C,EAAgB7C,UAAUqH,YAAc,SAAUnG,GAChD,IAAI1B,EAAWjG,KAAKiG,SACpB,QAAwB,IAAbA,EAAX,CAEA,IAAK,IAAIjB,EAAI,EAAGwC,OAAK,EAAEA,EAAQvB,EAASjB,GAAIA,IACvB,cAAfwC,EAAMtC,OAEVsC,EAAMsG,YAAYnG,EAAa,YAC/B3H,KAAKiM,QAAQzE,EAAMI,OAASJ,EAC5BvB,EAAS+I,OAAOhK,IAAK,WAEhBhF,KAAK4H,MACZ5H,KAAK4G,qBAGP2C,EAAe9C,UAAUqH,YAAc,SAAUnG,GAC/C,IAAI6D,EAAO1G,EAAW9E,KAAK4O,OAAO1J,KAChC2F,EAAWlD,EAAY2E,UAAUd,GACjCO,EAAQ/L,KAAK+L,MACb9F,EAAWjG,KAAKiG,SAClB,GAAI4E,EAAU,CACZA,EAASiD,YAAYnG,GACrB3H,KAAKiM,QAAUpB,EAASoB,QAExB,IAAK,IAAIjH,EAAI,EAAGwC,OAAK,EAAEA,EAAQvB,EAASjB,GAAIA,IAC1C,GAAmB,cAAfwC,EAAMtC,KAAV,CAEAsC,EAAMsG,YAAYnG,EAAa,WAC/B1B,EAAS+I,OAAOhK,IAAK,GACrBwC,EAAMuE,QAAUvE,EAAMuE,MAAQA,GAC9B,IAAIgD,EAAS/O,KAAKiM,QAAQzE,EAAMI,OAE5BmH,IACFA,EAAOhD,MAAQvE,EAAMuE,MACrBgD,EAAO/C,WAAaxE,EAAMwE,WAC1B+C,EAAOlD,UAAYrE,EAAMwD,OAAS,KAClC+D,EAAOjD,WAAatE,EAAMyD,QAAU,KACpC8D,EAAOlD,WAAakD,EAAOlD,UAAUjF,mBACrCmI,EAAOjD,YAAciD,EAAOjD,WAAWlF,4BAItC5G,KAAK4H,aACL5H,KAAK4O,MACZ5O,KAAK4G,oBAGP6C,EAAehD,UAAUqH,YAAc,SAAUnG,GAC/C,IAAI1B,EAAWjG,KAAKiG,SAClBsG,EAAW5E,EAAY4E,SACzB,GAAItG,GAA8B,EAAlBA,EAAS1F,OACvB,IAAK,IAAIyE,EAAI,EAAGwC,OAAK,EAAEA,EAAQvB,EAASjB,GAAIA,IAC1C,GAAmB,SAAfwC,EAAMtC,KAAV,CAEA,IACI0F,EAAU2B,EADIzH,EAAW0C,EAAMuI,UAAU7K,MAEzC0F,IACFA,EAAQkD,YAAYnG,GACpB3H,KAAKoM,MAAM5E,EAAMI,OAAS,CACxBuE,SAAU3E,EAAM2E,SAChBvB,QAASA,GAEX3E,EAAS+I,OAAOhK,IAAK,WAIpBhF,KAAK4H,MACZ5H,KAAK4G,oBAIP2B,EAAkB9B,UAAUiB,YAAc,SAAUC,GAElD,IADA,IAAI1B,EAAWjG,KAAKiG,SACXjB,EAAI,EAAGwC,OAAK,EAAEA,EAAQvB,EAASjB,GAAIA,IAC1C,GAAIwC,aAAiBgB,EACnB,OAAOxI,KAAK4H,MAAQ,IAAMJ,EAAME,cAEpC,MAAO,IAGTc,EAAmB/B,UAAUiB,YAAc,SAAUC,EAAazB,GAGhE,IAFA,IACI8J,EADA/J,EAAWjG,KAAKiG,SAEXjB,EAAI,EAAGwC,OAAK,EAAEA,EAAQvB,EAASjB,GAAIA,IAC1C,GAAIwC,aAAiBuB,GACnBvB,aAAiBkB,EAAe,CAChCsH,EAAOxI,EAAME,YAAYC,EAAazB,GACtC,MAGJ,GAAI8J,GAAQhQ,KAAKiQ,MAAO,CACtB,IAAIzE,EAAO1G,EAAW9E,KAAKiQ,OACzBC,EAAW1E,EAAKtG,KAChB8I,EAAK9H,GAASA,EAAMsF,EAAK7K,SAAWgH,EAAYzB,MAAMsF,EAAK7K,QAC3DwP,EAASxI,EAAYiE,QAAQoC,GAC7BoC,EAAcD,IAAWA,EAAO1E,aAAayE,IAAaC,EAAOvG,MAAMsG,IAAaC,EAAOzE,SAASwE,IAKtG,OAHAF,EAAKK,QAAU,WACb,OAAOD,EAAY1I,YAAYC,EAAawI,EAAOjK,QAE9C8J,EAKT,OADWhQ,KAAKiQ,MAAQjQ,KAAKiQ,MAAQ,IAAM,IAC7BjQ,KAAKiG,SAASqK,IAAI,SAAU9I,GACxC,OAAOA,EAAME,gBACZ6G,KAAK,MAGV9F,EAAiBhC,UAAUiB,YAAc,SAAUC,EAAazB,GAG9D,IAFA,IAAID,EAAWjG,KAAKiG,SAChB+J,EAAO,GACFhL,EAAI,EAAGwC,OAAK,EAAEA,EAAQvB,EAASjB,GAAIA,KACtCwC,aAAiBuB,GACnBvB,aAAiBkB,KACjBsH,EAAOxI,EAAME,YAAYC,EAAazB,IAG1C,GAAIlG,KAAKiQ,MAAO,CACd,IAAIzE,EAAO1G,EAAW9E,KAAKiQ,OACzBC,EAAW1E,EAAKtG,KAChB8I,EAAK9H,GAASA,EAAMsF,EAAK7K,SAAWgH,EAAYzB,MAAMsF,EAAK7K,QAC3DkJ,EAASlC,EAAYiE,QAAQoC,GAE/B,GAAIkC,KAAYrN,EACd,OAAO7C,KAAKiQ,MAGZ,IAAIM,EAAc1G,IAAWA,EAAO4B,aAAayE,IAC/CrG,EAAOD,MAAMsG,IAAarG,EAAO6B,SAASwE,IAE5C,GAAIK,EAAa,CACf,IAAIC,EAAOD,EAAY7I,YAAYC,EAAakC,EAAO3D,OACvD8J,EAAO1I,EAAAA,aAAekJ,EAAMR,IAIlC,OAAOA,GAGTrH,EAAmBlC,UAAUiB,YAAc,WACzC,OAAO1H,KAAKA,KAAKsG,WAGnBsC,EAAmBnC,UAAUiB,YAAc,SAAUC,EAAazB,GAEhE,IADA,IAAID,EAAWjG,KAAKiG,UAAY,GACvBjB,EAAI,EAAGwC,OAAK,EAAEA,EAAQvB,EAASjB,GAAIA,IAC1C,GAAIwC,aAAiBkB,GACnBlB,aAAiBuB,GACjBvB,aAAiBwB,GACjBxB,aAAiBsB,GACjBtB,aAAiBqB,EAEjB,OAAOrB,EAAME,YAAYC,EAAazB,GAG1C,MAAO,IAGT2C,EAAsBpC,UAAUiB,YAAc,SAAUC,EAAazB,GAEnE,IADA,IAAID,EAAWjG,KAAKiG,SACXjB,EAAI,EAAGwC,OAAK,EAAEA,EAAQvB,EAASjB,GAAIA,IAC1C,GAAIwC,aAAiBiB,EACnB,OAAOjB,EAAME,YAAYC,EAAazB,GAG1C,MAAO,IAGT4C,EAAqBrC,UAAUiB,YAAc,SAAUC,EAAazB,GAElE,IADA,IAAID,EAAWjG,KAAKiG,SACXjB,EAAI,EAAGwC,OAAK,EAAEA,EAAQvB,EAASjB,GAAIA,IAC1C,GAAIwC,aAAiBiB,EACnB,OAAOjB,EAAME,YAAYC,EAAazB,GAG1C,MAAO,IAGTiC,EAAe1B,UAAUiB,YAAc,SAAUC,EAAazB,GAC5D,IAAI4D,EAAU,GACZ5E,EAAOlF,KAAK4H,MACV6I,IAAUzQ,KAAK0Q,aAAsBC,MAAM3Q,KAAK0Q,YAAmC,cAApB1Q,KAAK0Q,WAAiD,EAAlB1Q,KAAK0Q,YACxG1Q,KAAK4Q,aAAe5Q,KAAK0Q,YAAcD,IACzCvL,GAAQ,MAGNgB,GAASA,EAAM3D,KACjBvC,KAAKuG,iBAAmBL,EAAM3D,IAEhC,IAAIiJ,EAAOxL,KAAK4O,OAAS5O,KAAK6Q,KAC9B,GAAIrF,EAAM,CAER,IAAI0E,GADJ1E,EAAO1G,EAAW0G,IACEtG,KAClB8I,EAAK9H,GAASA,EAAMsF,EAAK7K,SAAWgH,EAAYzB,MAAMsF,EAAK7K,QAC3DkJ,EAASlC,EAAYiE,QAAQoC,GAC7BuC,EAAc1G,IAAW7J,KAAK4O,MAAQ/E,EAAO4B,aAAayE,IAAarG,EAAOD,MAAMsG,GAAYrG,EAAO6B,SAASwE,IAMlH,GAJIlC,GAAMrG,EAAYiE,QAAQoC,KAC5B9H,EAAQyB,EAAYiE,QAAQoC,GAAI9H,QAG9BqK,GAAiBL,KAAYrN,EAyC/BiH,EAAQ5E,GAAQlF,KAAK4O,WAvCrB,GAAMsB,KAAYvI,EAAYmJ,aAAalH,MA6BrC5J,KAAK6Q,KACP/G,EAAUnC,EAAYmJ,aAAalH,MAAMsG,GAGzCpG,EAAQ5E,GAAQyC,EAAYmJ,aAAalH,MAAMsG,OAjCA,CAEjD,IAAIa,EAAY,GAChBpJ,EAAYmJ,aAAalH,MAAMsG,GAAYa,EAC3C,IAAIC,EAAcT,EAAY7I,YAAYC,EAAazB,GAC5B,iBAAhB8K,EACTD,EAAOC,EAGPnK,OAAOC,KAAKkK,GAAazF,QAAQ,SAAUvF,GACzC+K,EAAK/K,GAAOgL,EAAYhL,KAIxBhG,KAAK6Q,KACP/G,EAAUiH,EAGVjH,EAAQ5E,GAAQ6L,EAGE,iBAATA,IACTA,EAAK3C,cAAgB5C,EAAK7K,OAC1BoQ,EAAK7D,gBAAkBc,GAGzBrG,EAAYmJ,aAAalH,MAAMsG,GAAYa,OAgB5C,CACH,IAAI9K,EAAWjG,KAAKiG,SACpB6D,EAAQ5E,GAAQ,GAChB,IAAK,IAAIF,EAAI,EAAGwC,OAAK,EAAEA,EAAQvB,EAASjB,GAAIA,IACtCwC,aAAiBoB,IACnBkB,EAAQ5E,GAAQsC,EAAME,YAAYC,EAAazB,IAIrD,OAAO4D,GAGTd,EAAWvC,UAAUiB,YACnBqB,EAAgBtC,UAAUiB,YAAc,SAAUC,EAAazB,GAG7D,IAFA,IAAID,EAAWjG,KAAKiG,SAChBuE,EAAW,GACNxF,EAAI,EAAGwC,OAAK,EAAEA,EAAQvB,EAASjB,GAAIA,IAC1C,KAAIwC,aAAiBY,GAArB,CAGA,IAAIV,EAAcF,EAAME,YAAYC,EAAazB,GACjD,IAAK,IAAIF,KAAO0B,EACd8C,EAASxE,GAAO0B,EAAY1B,GAGhC,OAAOwE,GAGX9B,EAAcjC,UAAUiB,YAAc,SAAUC,EAAazB,GAG3D,IAFA,IAAID,EAAWjG,KAAKiG,SAChBkE,EAAS,GACJnF,EAAI,EAAGwC,OAAK,EAAEA,EAAQvB,EAASjB,GAAIA,IAAK,CAC/C,IAAI0C,EAAcF,EAAME,YAAYC,EAAazB,GACjD,IAAK,IAAIF,KAAO0B,EACdyC,EAAOnE,GAAO0B,EAAY1B,GAG9B,OAAOmE,GAGTlB,EAAexC,UAAUiB,YAAc,SAAUC,GAC/C,GAAI3H,KAAK8J,QACP,OAAO9J,KAAK8J,SAAW9J,KAAK8J,QAAQpC,YAAYC,GAElD,IAAIqI,EAAO,GAEX,OADAA,EAAKhQ,KAAK4H,OAAS5H,KAAK+F,MACjBiK,GAGT1G,EAAgB7C,UAAUiB,YAAc,SAAUC,GAChD,IAAIsE,EAAU,GACd,IAAK,IAAIgF,KAAQjR,KAAKiM,QAAS,CAC7B,IAAI8C,EAAS/O,KAAKiM,QAAQgF,GAC1BhF,EAAQgF,GAAQlC,EAAOrH,YAAYC,GAErC,OAAOsE,GAGT5C,EAAiB5C,UAAUiB,YAAc,SAAUC,GACjD,IAAIuJ,EAAYlR,KAAKgL,MAAQhL,KAAKgL,MAAMtD,YAAYC,GAAe,KAC/DwJ,EAAanR,KAAKiL,OAASjL,KAAKiL,OAAOvD,YAAYC,GAAe,KACtE,MAAO,CACLqD,MAAOkG,GAAaA,EAAUrK,OAAOC,KAAKoK,GAAW,IACrDjG,OAAQkG,GAAcA,EAAWtK,OAAOC,KAAKqK,GAAY,MAI7D5H,EAAe9C,UAAUiB,YAAc,SAAUC,GAC/C,IAAIsE,EAAU,GACd,IAAK,IAAImF,KAAQpR,KAAKiM,QAAS,CAC7B,IAAI8C,EAAS/O,KAAKiM,QAAQmF,GAC1BnF,EAAQmF,GAAQrC,EAAOrH,YAAYC,GAErC,OAAOsE,GAGTxC,EAAehD,UAAUiB,YAAc,SAAUC,GAC/C,IAAIyE,EAAQ,GACZ,IAAK,IAAIiF,KAAQrR,KAAKoM,MAAO,CAC3B,IAAIzB,EAAO3K,KAAKoM,MAAMiF,GACtBjF,EAAMiF,GAAQ1G,EAAKC,QAAQlD,YAAYC,GAEzC,OAAOyE,GAGF,IAAIkF,GAAO,SAAUC,EAAYxQ,EAAK+E,GAC3C,IACE0L,EA79BcC,EA49BZ5D,EAAO7N,KAaX,GAVAA,KAAKe,IAAMA,EACXf,KAAK0R,SAAW,aAEhB1R,KAAK2R,cAAgB,GAGrB3R,KAAK4R,YAAc9L,GAAW,IAAI8L,YAAc,GAEhD5R,KAAKmG,mBAAmBL,GAEE,iBAAfyL,EACTA,EAv+BsB,SAHRE,EA0+BQF,GAv+BlBM,WAAW,GACRJ,EAAEK,MAAM,GAGVL,EAo+BLD,EAAWxR,KAAK+R,aAEb,CAAA,GAA0B,iBAAfR,EAId,MAAM,IAAI9J,MAAM,mEAHhB+J,EAAWxR,KAAKgS,cAMlB7T,QAAQC,SAAQ,GAAMU,KAAK,WACzB,IACE0S,EAASnR,KAAKwN,EAAM0D,GACpB,MAAO7S,GACP,OAAOmP,EAAK6D,SAAShT,EAAEoM,SAGzB+C,EAAKoE,kBAAkBnT,KAAK,WAC1B+O,EAAKlG,YAAYf,mBACjB,IAAI4F,EAAWqB,EAAKrB,SAAWqB,EAAKlG,YAAY6E,SAChD,GAAIA,EACF,IAAK,IAAM0F,KAAQ1F,EACjBA,EAAS0F,GAAMpE,YAAYD,EAAKlG,aAGpC,IAAI8D,EAAeoC,EAAKlG,YAAY8D,aACpC,GAAIA,EACF,IAAK,IAAM0G,KAAQ1G,EACjBA,EAAa0G,GAAMvL,mBAKvB,IAAI2F,EAAWsB,EAAKlG,YAAY4E,SAChC,IAAK,IAAI6F,KAAe7F,EAAU,CAChC,IAAI3B,EAAU2B,EAAS6F,GAIvB,GAH6B,oBAAlBxH,EAAQmB,QACjBnB,EAAQmB,MAAQ,YAEI,aAAlBnB,EAAQmB,MAAZ,CAEA,IAAIE,EAAUrB,EAAQqB,QAClBoG,EAASzH,EAAQ0H,YAAc,GACnC,IAAK,IAAIC,KAActG,EACrB,GAAIA,EAAQsG,GAAYvH,MAAO,CAC7B,IAAIwH,EAAYvG,EAAQsG,GAAYvH,MAAMpD,MACtC6K,EAAa,GACbxG,EAAQsG,GAAYtH,SACtBwH,EAAaxG,EAAQsG,GAAYtH,OAAOrD,OAC1CyK,EAAOG,GAAa,CAAED,WAAcA,EAAYE,WAAcA,KAMpE5E,EAAK6E,gBAAkB7E,EAAK8E,YAC5B9E,EAAK6D,SAAS,KAAM7D,KACnB+E,SAAM,SAAAC,GAAO,OAAAhF,EAAK6D,SAASmB,QA2nBlC,SAAAC,GAAqB9E,GACnB,OAAQA,GAAmC,MAA7BA,EAAG+E,OAAO/E,EAAGzN,OAAS,GAAcyN,EAAK,IAAMA,EAG/D,SAAAgF,GAA0BhF,GACxB,OAAQA,GAAmC,MAA7BA,EAAG+E,OAAO/E,EAAGzN,OAAS,GAAcyN,EAAG7I,UAAU,EAAG6I,EAAGzN,OAAS,GAAKyN,EAwlBrF,SAAAiF,GAAgClS,EAAK+E,qGA8CnB,OAvCZ8L,EAAa9L,EAAQ8L,YAAc,GACjB9L,EAAQoN,aACRpN,EAAQqN,aAmC9B/F,QAAQgG,IAAI,kBAAmBrS,GAEf,CAAA,EADe+E,EAAQuN,WACNC,IAAIvS,EAAK,CAAEwS,aAAc,SAAUC,oBACpD,OADVC,EAAUC,EAAAlU,OACA,CAAA,EAAM,IAAIrB,QAAQ,SAACC,GACjC,IAAMuV,EAAO,IAAIrC,GAAKmC,EAAS1S,EAAK+E,IACpC8L,EAAW7Q,GAAO4S,GACb/B,WAAaA,EAClB+B,EAAKC,QAAQxV,EAAQuV,cAGvB,OAPME,EAAUH,EAAAlU,OAMhB4N,QAAQgG,IAAI,OAAQS,GACpB,CAAA,EAAOA,QC/zET,SAAAC,GAAkCC,EAAU/R,EAAUgS,GACpDhU,KAAKiU,UAAYF,EACjB/T,KAAKkU,UAAYlS,EACjBhC,KAAKgU,SAAW,GAChBpH,EAAAA,MAAQ5M,KAAKgU,SAAUA,GD2mCzB1C,GAAK7K,UAAUE,kBAAoB,CAAC,MAAO,kBAAmB,kBAE9D2K,GAAK7K,UAAU0N,sBAAuB,EAEtC7C,GAAK7K,UAAUH,SAAW,SAC1BgL,GAAK7K,UAAUC,OAAS,OAExB4K,GAAK7K,UAAUN,mBAAqB,SAAUL,GAC5C9F,KAAKoU,4BAA8BtO,GAAW,IAAIa,kBAClD3G,KAAK8F,QAAU,GAEf,IAAIa,EAAoBb,EAAUA,EAAQa,kBAAoB,KAE1DA,IACD0N,MAAMC,QAAQ3N,EAAkB7F,aAAuD,iBAAjC6F,EAAkB7F,YACrE6F,EAAkB4N,SACpBvU,KAAK8F,QAAQa,kBAAoBA,EAAkB7F,WAEnDd,KAAK8F,QAAQa,kBAAoB3G,KAAK2G,kBAAkB8I,OAAO9I,EAAkB7F,YAGnFd,KAAK8F,QAAQa,kBAAoB3G,KAAK2G,kBAGxC3G,KAAK8F,QAAQQ,SAAWR,EAAQQ,UAAYtG,KAAKsG,SACjDtG,KAAK8F,QAAQY,OAASZ,EAAQY,QAAU1G,KAAK0G,OACzCZ,EAAQ0O,YAAchO,UACxBxG,KAAK8F,QAAQ0O,UAAY1O,EAAQ0O,UAEjCxU,KAAK8F,QAAQ0O,WAAY,EAEvB1O,EAAQ2O,cAAgBjO,UAC1BxG,KAAK8F,QAAQ2O,YAAc3O,EAAQ2O,YAEnCzU,KAAK8F,QAAQ2O,aAAc,EAE7BzU,KAAK8F,QAAQ4O,kBAAoB5O,EAAQ4O,gBAErC5O,EAAQ6O,yBAA2BnO,UACrCxG,KAAK8F,QAAQ6O,uBAAyB7O,EAAQ6O,uBAE9C3U,KAAK8F,QAAQ6O,wBAAyB,EAIxC3U,KAAK8F,QAAQoN,aAAepN,EAAQoN,aACpClT,KAAK8F,QAAQqN,aAAerN,EAAQqN,aAChCrN,EAAQuN,aACVrT,KAAK8F,QAAQuN,WAAavN,EAAQuN,YAIhCvN,EAAQ8O,UACV5U,KAAK8F,QAAQ8O,QAAU9O,EAAQ8O,SAGjC,IAAIT,EAAuBrO,EAAUA,EAAQqO,qBAAuB,KAElEnU,KAAK8F,QAAQqO,qBADXA,MAAAA,EACkCA,EAEAnU,KAAKmU,qBAI3CnU,KAAK8F,QAAQ+O,mBAAqB/O,EAAQ+O,mBAC1C7U,KAAK8F,QAAQgP,mBAAqBhP,EAAQgP,mBAEtChP,EAAQiP,sBAAwBvO,YAClCxG,KAAK8F,QAAQiP,oBAAsBjP,EAAQiP,qBAG7C/U,KAAK8F,QAAQkP,cAAgBlP,EAAQkP,aAGvC1D,GAAK7K,UAAUmN,QAAU,SAAUlC,GAC7BA,IACF1R,KAAK0R,SAAWA,IAGpBJ,GAAK7K,UAAUwO,oBAAsB,SAAgBtJ,yGAKnD,OAJIkC,EAAO7N,MACTkV,EAAUvJ,EAASwJ,WAOhB,WAAWC,KAAKvH,EAAK9M,MAAS,WAAWqU,KAAKF,EAAQ/I,aAGzDkJ,EAAcC,EAAAA,QAAYzH,EAAK9M,KAAO,GAAImU,EAAQ/I,YAGpDrG,EAAUyP,EAAAA,OAAS,GAAIvV,KAAK8F,UAEpBa,kBAAoB3G,KAAKoU,4BAA8BpU,KAAK8F,QAAQa,kBAC5Eb,EAAQ8L,WAAa5R,KAAK4R,WAEb,CAAA,EAoiCf,SAA6B7Q,EAAK+E,GAChC,IAAI0P,EACF5D,EASF,GAFAA,EAAa9L,EAAQ8L,WAEjB4D,EAAY5D,EAAW7Q,GAEzB,OAAOyU,EAGT,OAAOvC,GAAUlS,EAAK+E,GApjCH2P,CAAoBJ,EAAavP,KAdlD,CAAA,UAyBF,OAXM6N,EAAOD,EAAAlU,OACbqO,EAAK8D,cAAcnR,KAAKmT,GAEpBA,EAAKhM,uBAAuB+B,GAC9BgM,EAAAA,UAAY7H,EAAKlG,YAAagM,EAAKhM,YAAa,SAAUgO,EAAGC,GAC3D,OAAQD,aAAaxM,EAAiBwM,EAAElJ,MAAMmJ,GAAKpP,YAGrDqH,EAAKlG,YAAYiE,QAAQsJ,EAAQlI,WAAa2G,EAAKhM,YAAYpB,mBA3nChDsP,EA2nC8EhI,EAAKlG,YAAYiE,QAAQsJ,EAAQlI,WAAa2G,EAAKhM,YAAYpB,kBA3nChImG,EA2nCmJiH,EAAKhM,YA1nC/K+N,EAAAA,UAAYG,GAAe,GAAInJ,EAAQ,SAAUiJ,EAAGC,GACzD,OAAOE,EAAAA,QAAUH,GAAKA,EAAElG,OAAOmG,GAAKpP,aA4nCtC,CAAA,EAAOqH,EAAKoH,oBAAoBtJ,IA9nClC,IAAmBkK,EAAanJ,OAopChC4E,GAAK7K,UAAUwL,gBAAkB,wFAI/B,IAASjE,KAHLpC,EAAU5L,KAAK2H,YAAYiE,QAC7BD,EAAW,GAEEC,EACT/B,EAAS+B,EAAQoC,GACrBrC,EAAWA,EAAS8D,OAAO5F,EAAO8B,UAAY,IAGhD,MAAA,CAAA,EAAO3L,KAAKiV,oBAAoBtJ,SAGlC2F,GAAK7K,UAAUsP,iBAAmB,WAChC,IAAIvJ,EAAW,GACf,IAAK,IAAIwJ,KAAQhW,KAAKwM,SAAU,CAC9B,IAAI9B,EAAU1K,KAAKwM,SAASwJ,GAC5BxJ,EAASwJ,GAAQtL,EAAQhD,YAAY1H,KAAK2H,aAE5C,OAAO6E,GAGT8E,GAAK7K,UAAUwP,MAAQ,WACrB,OAAOjW,KAAKkW,KAAO,IAGrB5E,GAAK7K,UAAU0P,YAAc,SAAUD,EAAKxE,GAC1C,IA0Be0E,EA1BXvI,EAAO7N,KACPoB,EAAwB,mBAAbsQ,EAA0B,GAAK2E,EAAAA,QAAW,GACrDC,EAAa,KACbvO,EAAY,GAoBZd,EAAe,CAAC,CAAE/B,KAAM,KAAMqR,OAAQxO,EAAM8B,OAnBnC,CACX2M,SAAU,CACRC,OAAQ,CACNC,SAAU,CACRC,cAAe,CACbC,SAAU,SACVC,SAAU,YAIhBC,KAAM,CACJC,MAAO,CACLC,UAAW,SACXC,YAAa,SACbC,OAAQ,eAMZhR,EAAa,GAEbiR,EAAO,GAgPX,GA9OA/V,EAAEgW,UAAY,SAAUC,GACtB,IAGEC,EA0FEC,EA7FAxS,EAASsS,EAAKnS,KACdW,EAAawR,EAAKG,WAClBtS,EAAOJ,EAAWC,GAAQG,KAE5BuS,EAAMxQ,EAAMA,EAAM1G,OAAS,GAC3BmX,EAAYD,EAAI5N,OAChB8N,EAAoB,GACpBC,GAAuB,EACvBC,GAAkB,EAClBxS,EAAM,GACJyS,EAAe5S,EAEnB,IAAKoR,GAA2B,SAAbmB,EAAIvS,MAA4B,UAATA,EAAkB,CAC1D,IAAI4F,EAAU+C,EAAKlG,YAAY0E,SAASnH,GAGxC,IAAK4F,EACH,IAEE,IAAIiN,GAAU,EAEV,YAAc3C,KAAKlQ,GAErBA,EAAOA,EAAKK,QAAQ,YAAa,IACxB,WAAa6P,KAAKlQ,IAC3B6S,GAAU,EACV7S,EAAOA,EAAKK,QAAQ,WAAY,KACvB,WAAa6P,KAAKlQ,KAC3B6S,GAAU,EACV7S,EAAOA,EAAKK,QAAQ,WAAY,KAGlC,IAAI+G,EAAYuB,EAAKlG,YAAY2E,UAG7BzB,EAAWyB,EAFKzF,OAAOC,KAAKwF,GAEO,IAErCpH,EADE6S,EACKlN,EAASoB,QAAQ/G,GAAM8F,MAAMpD,MAE7BiD,EAASoB,QAAQ/G,GAAM+F,OAAOrD,MAEvCkD,EAAU+C,EAAKlG,YAAY0E,SAASnH,GAEpC2I,EAAKlG,YAAY0E,SAASyL,GAAgBjK,EAAKlG,YAAY0E,SAASnH,GACpE,MAAOxG,GACHmP,EAAK/H,QAAQ2O,aACfrT,EAAE4W,QAAQtZ,GAKhBgZ,EAAY5M,EAAQpD,YAAYmG,EAAKlG,aACrC2O,EAAawB,EAiBf,IAAKR,KAdDzR,EAAMoS,OACR7B,EAAKvQ,EAAMoS,KAAK3S,OAAO,GAClB6R,EAAKf,KACRe,EAAKf,GAAM,CAAE8B,MAAO,GAAI7S,IAAK,OAE/B8R,EAAKf,GAAI8B,MAAM1X,KAAK,CAAE2X,IAAKV,EAAIlB,OAAQvQ,IAAKd,EAAMG,IAAKA,MAErD+Q,EAAKvQ,EAAMuQ,MACRe,EAAKf,KACRe,EAAKf,GAAM,CAAE8B,MAAO,GAAI7S,IAAK,QAKXQ,EAChB,kBAAkBuP,KAAKkC,GACzBpR,EAAMpB,EAAWwS,GAAepS,MAAQW,EAAMyR,IAGhDM,GAAuB,EACvBD,EAAkBL,GAAiBzR,EAAMyR,IAG3C,IAAKA,KAAiBK,EAAmB,CACvC,IAAIS,EAAMtT,EAAWwS,GACrB,GAAiB,QAAbc,EAAIlT,MAAwC,8CAAtBgB,EAAMkS,EAAIzX,SAA2DgX,EAAkBL,KAC3D,SAAnDK,EAAkBL,GAAee,eAAiE,MAArCV,EAAkBL,IAChF,CACAO,GAAkB,EAClB,OAIAD,IACFvS,EAAIwI,EAAK/H,QAAQwS,eAAiBX,GAKpC,IAAIY,EAAUZ,EAAkB,YAChC,GAAIY,EAAS,CACX,IAAI/M,EAAO1G,EAAWyT,GAClBC,OAAO,EAGTA,EAFEhN,EAAK7K,SAAW4B,EAER2D,EAAMsF,EAAK7K,SAAWuF,EAAMA,MAE5BA,EAAMsF,EAAK7K,QAEvB,IAAI8X,EAAU5K,EAAK6K,iBAAiBF,EAAShN,EAAKtG,MAC9CuT,IACFlB,EAAgBkB,EAAQ/Q,YAAYmG,EAAKlG,cAIzC+P,GAAaA,EAAUxS,EAAO,QAChCA,GAAc,MAEhB+B,EAAMzG,KAAK,CACT0E,KAAM4S,EACNvB,OAAQlR,EACRwE,OAAS0N,GAAkBG,GAAaA,EAAUxS,GAClDkR,GAAIvQ,EAAMuQ,GACVuC,IAAKd,KAITzW,EAAEwX,WAAa,SAAU7T,GACvB,IAAI8T,EAAW5R,EAAM3G,MACnB+E,EAAMwT,EAAItC,OACVkB,EAAMxQ,EAAMA,EAAM1G,OAAS,GAC3BuY,EAAYrB,EAAIlB,OAChBmB,EAAYD,EAAI5N,OAChB3E,EAAOJ,EAAWC,GAAQG,KAM5B,GAJ0B,iBAAf2T,EAAIhP,QAAuC,WAAfgP,EAAIhP,QAA8D,WAA9BgP,EAAU,OAAEvN,MAAM,KAAK,IAC7E,iBAARjG,GAAgD,IAA5BwB,OAAOC,KAAKzB,GAAK9E,SAAc8E,EAAMwT,EAAItC,OAAS,KAGnE,IAAZsC,EAAIF,IAAc,CACpB,IAAI9K,EAAK/H,QAAQ4O,gBAGf,OAFArP,EAAM,KAMN0T,EAAAA,cAAgB1T,KAASwB,OAAOC,KAAKzB,GAAK9E,SAC5C8E,EAAM,MAGJqS,GAAaA,EAAUxS,EAAO,OAC3B4T,EAAU5T,KACb4T,EAAU5T,GAAQ,IAEpB4T,EAAU5T,GAAM1E,KAAK6E,IACZH,KAAQ4T,GACZzE,MAAMC,QAAQwE,EAAU5T,MAC3B4T,EAAU5T,GAAQ,CAAC4T,EAAU5T,KAE/B4T,EAAU5T,GAAM1E,KAAK6E,IAErByT,EAAU5T,GAAQG,EAGhBwT,EAAIzC,KACNe,EAAK0B,EAAIzC,IAAI/Q,IAAMA,IAIvBjE,EAAE4X,QAAU,SAAUrT,GACpB,IAAIsT,EAAetT,EAEnB,IADAA,EAAOD,EAAKC,IACFpF,OAIV,GAAI,mBAAmB6U,KAAKzP,GAAO,CACjC,IAAIuT,EAAMjS,EAAMA,EAAM1G,OAAS,GAC3BhC,EAAQsP,EAAKsI,YAAYxQ,GACzBuT,EAAI3C,OAAO1I,EAAK/H,QAAQwS,eAC1BY,EAAI3C,OAAO1I,EAAK/H,QAAQQ,UAAY/H,EAEpC2a,EAAI3C,OAAShY,OAGf6C,EAAE+X,OAAOF,IAIb7X,EAAE4W,QAAU,SAAUtZ,GAEpB,MADA0C,EAAEgY,SACI,CACJrC,MAAO,CACLC,UAAW,IACXC,YAAa,cACbC,OAAQ,IAAIzP,MAAM/I,GAAGoM,QACrBuO,WAAY,OAKlBjY,EAAE+X,OAAS,SAAUxT,GACnB,IAAIsT,EAAetT,EAEnB,IADAA,EAAOD,EAAKC,IACFpF,OAAV,CAIA,IAEEhC,EAFEkZ,EAAMxQ,EAAMA,EAAM1G,OAAS,GAC3B2E,EAAOJ,EAAW2S,EAAI5N,QAAQ3E,KAE9B2I,EAAK/H,SAAW+H,EAAK/H,QAAQgP,oBAAsBjH,EAAK/H,QAAQgP,mBAAmB5P,GACrF3G,EAAQsP,EAAK/H,QAAQgP,mBAAmB5P,GAAMS,EAAM8R,GAGvC,QAATvS,GAA2B,YAATA,EACpB3G,EAAQ+a,SAAS3T,EAAM,IACL,SAATT,GAA4B,YAATA,EAC5B3G,EAA+B,SAAvBoH,EAAK0S,eAAqC,MAAT1S,EACvB,aAATT,GAAgC,SAATA,EAChC3G,EAAQ,IAAIgb,KAAK5T,IAEbkI,EAAK/H,QAAQ0T,qBACf7T,EAAOsT,GAIP1a,EADwB,iBAAfkZ,EAAIlB,OACL5Q,EAEA8R,EAAIlB,OAAS5Q,GAKvB8R,EAAIlB,OAAO1I,EAAK/H,QAAQwS,eAC1Bb,EAAIlB,OAAO1I,EAAK/H,QAAQQ,UAAY/H,EAEpCkZ,EAAIlB,OAAShY,IAIO,mBAAbmT,EAAyB,CAElC,IAAI+H,EAAYC,EAAAA,cAAiB,GAkBjC,OAjBAD,EAAUE,GAAG,UAAWvY,EAAEgW,WAC1BqC,EAAUE,GAAG,WAAYvY,EAAEwX,YAC3Ba,EAAUE,GAAG,QAASvY,EAAE4X,SACxBS,EAAUE,GAAG,OAAQvY,EAAE+X,aACvBjD,EAAI0D,KAAKH,GACNE,GAAG,QAAS,SAAU9G,GACrBnB,EAASmB,KAEV8G,GAAG,MAAO,WACT,IAAIE,EACJ,IACEA,EAAIC,IACJ,MAAOpb,GACP,OAAOgT,EAAShT,GAElBgT,EAAS,KAAMmI,KAMrB,OAFAzY,EAAE2Y,MAAM7D,GAAK8D,QAENF,IAEP,SAAAA,IAEE,IAAK,IAAI7Z,KAAKkX,EAEZ,IADA,IAAI8C,EAAM9C,EAAKlX,GACN+E,EAAI,EAAGA,EAAIiV,EAAI/B,MAAM3X,OAAQyE,IACpCuQ,EAAAA,OAAS0E,EAAI/B,MAAMlT,GAAGK,IAAK4U,EAAI5U,KAInC,GAAI0C,EAAKyO,SAAU,CACjB,IAAIvX,EAAO8I,EAAKyO,SAASM,KACzB,GAAI7X,GAAQA,EAAK8X,MAAO,CACtB,IAAImD,EAAOjb,EAAK8X,MAAMC,WAAa/X,EAAK8X,MAAMC,UAAUmD,OACpDrX,EAAS7D,EAAK8X,MAAME,aAAehY,EAAK8X,MAAME,YAAYkD,OAC1DjD,EAASjY,EAAK8X,MAAMG,QAAUjY,EAAK8X,MAAMG,OAAOiD,OAEpDD,EAAOA,GAAQjb,EAAK8X,MAAMC,UAC1BlU,EAASA,GAAU7D,EAAK8X,MAAME,YAC9BC,EAASA,GAAUjY,EAAK8X,MAAMG,OAE9B,IAAI7J,EAAa,IAAI5F,MAAMyS,EAAO,KAAOpX,GAAUoU,EAAS,KAAOA,EAAS,KAG5E,MADA7J,EAAMtF,KAAOA,EACPsF,EAER,OAAOtF,EAAKyO,SAEd,OAAOzO,IAUXuJ,GAAK7K,UAAUiS,iBAAmB,SAAUhW,EAAO0X,GACjD,IAAK1X,IAAU0X,EACb,OAAO,KAGT,IAAIC,EAAM,KAEV,GAAIra,KAAK2H,YAAYiE,QAAS,CAC5B,IAAI/B,EAAS7J,KAAK2H,YAAYiE,QAAQlJ,GAClCmH,KAC0B,IAAxBuQ,EAAMnV,QAAQ,OAChBmV,EAAQA,EAAMjV,UAAUiV,EAAMnV,QAAQ,KAAO,EAAGmV,EAAM7Z,SAKxD8Z,EAAMxQ,EAAO4B,aAAa2O,IAAUvQ,EAAOD,MAAMwQ,IAAUvQ,EAAO6B,SAAS0O,IAI/E,OAAOC,GAWT/I,GAAK7K,UAAU6T,oBAAsB,SAAUpV,EAAMqV,EAAQC,EAAU9X,EAAO8I,GAE5E,GAAI+O,GAAUA,EAAOE,KACnB,OAAOF,EAAOE,KAEhB,IAAIC,EAAO,GACXA,EAAKxV,GAAQqV,EACb,IAAII,EAAmBnP,EAAOxL,KAAK0Y,iBAAiBhW,EAAO8I,GAAQ,KACnE,OAAOxL,KAAK4a,YAAYF,EAAM,KAAMF,EAAU9X,GAAO,EAAM,KAAMiY,IAWnErJ,GAAK7K,UAAUoU,eAAiB,SAAU3V,EAAMqV,EAAQC,EAAU9X,EAAOoY,GACvE,IAAI/U,EAAQ,GACRgV,EAAO/a,KAAK2H,YAUhB,IAAK,IAAI3B,KAPTwU,EAAWA,GAAYhY,EAAWuY,EAAK7U,MAAOxD,GAE9CA,EAAQA,GAASqY,EAAK7U,MAAMsU,GAC5BA,EAAWA,IAAajY,EAAa,GAAMiY,EAAW,IAEtDzU,EAAMvF,KAAK,CAAC,IAAKga,EAAUtV,EAAM,KAAKqJ,KAAK,KAE3BgM,EACd,GAAKA,EAAOpN,eAAenH,IAVZ,WAaXA,EAAoB,CACtB,IAAIzH,EAAQgc,EAAOvU,GACfgV,GAAeF,EAAU,GAAKN,GAAYxU,EAC1CwR,EAAa,GACjB,GAAqB,iBAAVjZ,GAAsBA,EAAM4O,eAAenN,KAAK8F,QAAQwS,eAAgB,CACjF,IAAIzS,EAAQtH,EAAMyB,KAAK8F,QAAQwS,eAC/B,IAAK,IAAIrY,KAAK4F,EACZ2R,EAAWhX,KAAK,IAAMP,EAAI,KAAY4F,EAAM5F,GAAK,KAGrD8F,EAAMvF,KAAK,CAAC,IAAKwa,GAAavL,OAAO+H,GAAY/H,OAAO,KAAKlB,KAAK,KAClExI,EAAMvF,KAAuB,iBAAVjC,EAAsByB,KAAK4a,YAAYrc,EAAOyH,EAAKwU,EAAU9X,GAAS0C,EAAU7G,IACnGwH,EAAMvF,KAAK,CAAC,KAAMwa,EAAa,KAAKzM,KAAK,KAI7C,OADAxI,EAAMvF,KAAK,CAAC,KAAMga,EAAUtV,EAAM,KAAKqJ,KAAK,KACrCxI,EAAMwI,KAAK,KAYpB+C,GAAK7K,UAAUwU,mBAAqB,SAAUjN,GAC5C,OAAqD,EAA9ChO,KAAK8F,QAAQa,kBAAkB1B,QAAQ+I,IAGhDsD,GAAK7K,UAAUyU,0BAA4B,SAAUlN,GACnD,IAAIhB,EAAYgG,GAAiBhF,GACjC,OAAOhO,KAAKib,mBAAmBjO,GAAa,GAAKA,GAkBnDsE,GAAK7K,UAAUmU,YAAc,SAAUvV,EAAKH,EAAMsV,EAAU9X,EAAOyY,EAASC,EAAWC,EAAcC,GACnG,IAAIzN,EAAO7N,KACP6J,EAAS7J,KAAK2H,YAAYiE,QAAQlJ,GAElC6Y,EAAiBf,EAAWA,EAAS9Z,OAAS8F,eACpB,IAAnB+U,IAETf,EAAWA,EAASgB,SAGtBD,EAAiBvI,GAAiBuI,GAC9Bvb,KAAKib,mBAAmBM,KAC1BA,EAAiB,IAGnB,IAAIE,GAAc5R,EACd6R,EAAY7R,GAAyC,cAA/BA,EAAO8R,oBAC7B5V,EAAQ,GACR6V,GAAmBpB,GAAYkB,IAAclB,IAAajY,EAE1DsZ,EAAc,GACdnZ,GAASyY,IACPtN,EAAK/H,QAAQiP,qBAAuBlH,EAAK/H,QAAQiP,oBAAoB+G,gBACvEjO,EAAK/H,QAAQiP,oBAAoB+G,gBAAgBvQ,QAAQ,SAAUwQ,GACjEF,GAAe,IAAME,EAAU7W,KAAO,KAAO6W,EAAUxd,MAAQ,OAG7Dqd,IAAoB5b,KAAKib,mBAAmBT,KAE9CqB,GAAe,UAAYrB,EAAW,KAAO9X,EAAQ,MAGnDgZ,GAAaD,KAAYI,GAAe,WAAanZ,EAAQ,OAIhE4Y,EAIHA,EAAU1Z,eAHV0Z,EAAY,IAAIha,GACN0a,iBAAiBxB,EAAU9X,IAMnC0Y,GAAevN,EAAK/H,QAAQiP,qBAAuBlH,EAAK/H,QAAQiP,oBAAoB+G,kBACtFD,EAAcT,GAGhB,IAQIpW,EAAG/E,EARH+N,EAAK,GAUT,GARIH,EAAK/H,QAAQiP,qBAAuBoG,EACtCnN,EAAKH,EAAK/H,QAAQiP,oBAAoB/H,UAC7B4O,IAAoBF,GAAaP,GAAWM,KAAgBzb,KAAKib,mBAAmBT,KAC7FxM,EAAKwM,GAKHnG,MAAMC,QAAQjP,GAChB,IAAKL,EAAI,EAAG/E,EAAIoF,EAAI9E,OAAQyE,EAAI/E,EAAG+E,IAAK,CACtC,IAAIiX,EAAO5W,EAAIL,GACXkX,EAAYrO,EAAKsO,kBAAkBF,EAAMX,GAC3Cc,EAAuBb,GAAkBvN,EAEvC/O,EAAO4O,EAAK+M,YAAYqB,EAAM/W,EAAMsV,EAAU9X,GAAO,EAAO,KAAM2Y,EAAcC,GAEhFe,EAAkB,CAAC,IAAKvJ,GAAYsJ,GAAuBlX,EAAMgX,EAAWL,GAEnE,KAAT5c,GAAe4O,EAAK/H,QAAQkP,aAE9BqH,EAAgB7b,KAAK,OACrBuF,EAAMvF,KAAK6b,EAAgB9N,KAAK,OAEhC8N,EAAgB7b,KAAK,MACjBqN,EAAK/H,QAAQ6O,wBAAgC,IAAN3P,IACzCe,EAAMvF,KAAK6b,EAAgB9N,KAAK,KAElCxI,EAAMvF,KAAKvB,IACP4O,EAAK/H,QAAQ6O,wBAA0B3P,IAAM/E,EAAI,IACnD8F,EAAMvF,KAAK,CAAC,KAAMsS,GAAYsJ,GAAuBlX,EAAM,KAAKqJ,KAAK,WAItE,GAAmB,iBAARlJ,GAChB,IAAKH,KAAQG,EACX,GAAKA,EAAI8H,eAAejI,IAEpBA,IAAS2I,EAAK/H,QAAQwS,cAA1B,CAIA,GAAIpT,IAAS2I,EAAK/H,QAAQY,OAExB,OADA4U,EAAUgB,aACHjX,EAAIH,GAGb,GAAIA,IAAS2I,EAAK/H,QAAQQ,SAExB,OADAgV,EAAUgB,aACHlX,EAAUC,EAAIH,IAGvB,IAAIsC,EAAQnC,EAAIH,GAChB,QAAqB,IAAVsC,EAAX,CAIA,IAAI+U,EAAO1O,EAAKsO,kBAAkB3U,EAAO8T,GAErC/c,EAAQ,GACRie,EAAkB,GAClBC,GAAuB,EAEvBC,EAAkB,oBAAoBrW,KAAKnB,GAS/C,GARIwX,GACFF,EAAkBE,EAAgB,GAAK,IACvCxX,EAAOwX,EAAgB,IACF,MAAZxX,EAAK,KACduX,GAAuB,EACvBvX,EAAOA,EAAKI,OAAO,IAGjB6V,EACF5c,EAAQsP,EAAK+M,YAAYpT,EAAOtC,EAAMsV,EAAU9X,GAAO,EAAO,KAAM2Y,EAAcC,QAGlF,GAAIzN,EAAKlG,YAAYiE,QACnB,GAAI/B,EAAQ,CACV,IAAI8S,EAAoB9O,EAAK+O,sBAAsBvB,EAAcnW,GAEjE,GAAIyX,IACAA,EAAkB/N,QAAuD,IAA7C+N,EAAkB/N,MAAM3J,QAAQ,SAC5D0X,EAAkB9L,MAAQ8L,EAAkB/U,OAAQ,CAKtD,IAAIiV,EAAqB,GACrBC,EAAY,GACZC,OAAU,EACVC,EAAmB,GAEnBC,EAAeN,EAAkB9L,MAAQ8L,EAAkB/U,MAC/D,GAAIqV,EAAc,CAEhBH,GADAG,EAAenY,EAAWmY,IACD/X,KACrB+X,EAAatc,SAAW4B,GAE1Bwa,EAAaJ,EAAkBpW,iBAC/BsW,EAAgBvB,EAAU4B,kBAAkBH,GACxC/c,KAAKib,mBAAmB4B,KAC1BA,EAAgBrC,KAGlBqC,EAAgBI,EAAatc,OACzBX,KAAKib,mBAAmB4B,KAC1BA,EAAgBrC,GAElBuC,EAAalT,EAAO3D,MAAM2W,IAAkBhP,EAAKlG,YAAYzB,MAAM2W,IAGrE,IAAIM,GAAc,EAEdR,EAAkB/U,OAAS+U,EAAkBzP,kBAAoB1G,YAEjE2W,EAD8B,gBAA5BR,EAAkBS,OAEiB,cAA5BT,EAAkBS,OAGkB,cAA/BvT,EAAO8R,qBAGrBwB,IACFN,EAAgB,IAGdE,GAAcF,GACZvB,EAAUU,iBAAiBa,EAAeE,KAE5ClB,GADAmB,EAAmB,UAAYH,EAAgB,KAAOE,EAAa,KAMzE,IAAIM,OAAyB,EAC7B,GAAIV,EAAkB/N,MAAO,CAC3B,IAAI0O,EAAYxY,EAAW6X,EAAkB/N,OACzC2O,EAAaD,EAAU3c,OACvB6X,EAAU3O,EAAO3D,MAAMqX,IAAe1P,EAAKlG,YAAYzB,MAAMqX,GAEjD,sCADhBR,EAAavE,IACyC+E,IAAehb,GAEnE+Y,EAAU3Z,aAAa4b,EAAY/E,GAErC6E,EACExP,EAAK2P,eAAeF,EAAUpY,KAAMsT,IAAYmE,OAElDU,EACExP,EAAK6K,iBAAiBqE,EAAYD,IAAcH,EAGhDA,EAAkBc,gBAAkBzd,KAAK8F,QAAQqO,uBACnD0I,EAAgBrC,EAChBuC,EAAara,GAGX1C,KAAK8F,QAAQqO,uBAEf4I,EADAF,EAAgB,IAIlB7O,EAAK6O,EAEDxI,MAAMC,QAAQ9M,GAEhBqV,EAAgB,CACdrB,QAASqB,EACTnc,OAAQsN,GAIVgP,EAAmB,KAGrBze,EAAQsP,EAAK+M,YAAYpT,EAAOtC,EAAM2X,EAAeE,GACnD,EAAOC,EAAkBK,EAA2B/B,QACjD,GAAIjW,EAAIwI,EAAK/H,QAAQwS,gBAAkBjT,EAAIwI,EAAK/H,QAAQwS,eAAeoF,SAAU,CAEnD7P,EAAK+O,sBACtCvX,EAAIwI,EAAK/H,QAAQwS,eAAeoF,SAASlS,KACzCnG,EAAIwI,EAAK/H,QAAQwS,eAAeoF,SAASxX,OAE3CsW,EAAkBnX,EAAIwI,EAAK/H,QAAQwS,eAAeoF,SAAS/c,OAC3D2a,EAAU3Z,aAAa0D,EAAIwI,EAAK/H,QAAQwS,eAAeoF,SAAS/c,OAC9D0E,EAAIwI,EAAK/H,QAAQwS,eAAeoF,SAASxX,OAC3C3H,EAAQsP,EAAK+M,YAAYpT,EAAOtC,EAAMG,EAAIwI,EAAK/H,QAAQwS,eAAeoF,SAAS/c,OAC7E0E,EAAIwI,EAAK/H,QAAQwS,eAAeoF,SAASxX,OAAO,EAAO,KAAM,KAAMoV,QAEjEjH,MAAMC,QAAQ9M,KAChBtC,EAAOsX,EAAkBtX,GAG3B3G,EAAQsP,EAAK+M,YAAYpT,EAAOtC,EAAMsV,EAAU9X,GAAO,EAAO,KAAM,KAAM4Y,QAG5E/c,EAAQsP,EAAK+M,YAAYpT,EAAOtC,EAAMsV,EAAU9X,GAAO,EAAO,KAAM,KAAM4Y,GAKhFtN,EAAKgF,GAAiBhF,GAClB4N,IAAoBF,GAAaP,IAAYtN,EAAK/H,QAAQiP,oBAC5D/G,EAAKwM,EACIxa,KAAKib,mBAAmBjN,KACjCA,EAAK,IAGP,IAAIgH,GAAezW,GAASsP,EAAK/H,QAAQkP,YACpCX,MAAMC,QAAQ9M,IAEjBzB,EAAMvF,KAAK,CAAC,IAAKic,EAAuB,GAAK3J,GAAY0J,GAAmBxO,GAAK9I,EAAMqX,EAAMV,EAChF,OAAVrU,EAAiB,kBAAoB,GACtCwN,EAAc,MAAQ,KACtBzG,KAAK,KAGJyG,IACHjP,EAAMvF,KAAKjC,GACN8V,MAAMC,QAAQ9M,IAEjBzB,EAAMvF,KAAK,CAAC,KAAMic,EAAuB,GAAK3J,GAAY0J,GAAmBxO,GAAK9I,EAAM,KAAKqJ,KAAK,aAI/FlJ,IAAQmB,WACjBT,EAAMvF,KAAMqN,EAAK/H,QAAiB,UAAIV,EAAUC,GAAOA,GAGzD,OADAiW,EAAUgB,aACHvW,EAAMwI,KAAK,KAGpB+C,GAAK7K,UAAU0V,kBAAoB,SAAU3U,EAAO8T,GAClD,IAAIiB,EAAO,GAEG,OAAV/U,IACFA,EAAQ,IAGV,IAAImW,EAAUnW,EAAMxH,KAAK8F,QAAQwS,eACjC,GAAIqF,GAAWA,EAAQD,SAAU,CAC/B,IAAInF,EAAUoF,EAAQD,SAElB/c,EAAS4X,EAAQ5X,QAAU4X,EAAQvL,UAElCrM,EAGH2a,EAAUU,iBAAiBrb,EAAQ4X,EAAQrS,OAF3CvF,EAAS2a,EAAU4B,kBAAkB3E,EAAQrS,OAI/CqS,EAAQ5X,OAASA,EAInB,GAAIgd,EACF,IAAK,IAAIC,KAAWD,EAElB,GAAgB,aAAZC,EAOFrB,GAAQ,IAAMqB,EAAU,KAAOxY,EAAUuY,EAAQC,IAAY,QAP/D,CACE,IAAIC,EAAYF,EAAQC,GACxBrB,GAAQ,cAAgBsB,EAAUld,OAAS,IAAMkd,EAAUrS,KAAO,IAClE+Q,GAAQ,UAAYsB,EAAUld,OAAS,KAAOkd,EAAU3X,MAAQ,IAStE,OAAOqW,GASTjL,GAAK7K,UAAU+W,eAAiB,SAAUtY,EAAMxC,GAC9C,IAAK1C,KAAK2H,YAAYiE,UAAY1G,IAASxC,EACzC,OAAO,KAGT,IAAImH,EAAS7J,KAAK2H,YAAYiE,QAAQlJ,GACtC,OAAKmH,GAAWA,EAAO4B,aAIhB5B,EAAO4B,aAAavG,GAHlB,MAMXoM,GAAK7K,UAAUmW,sBAAwB,SAAUjC,EAAkBmC,EAAWgB,GAC5E,IAAKnD,IAAqBmC,EACxB,OAAO,KAOT,GAJKgB,IACHA,EAAY,IAG6B,GAAvCA,EAAU7Y,QAAQ0V,GAEpB,OAAO,KAEPmD,EAAYA,EAAUrO,OAAO,CAACkL,IAGhC,IAEEnT,EAFEuW,EAAQ,KACV/Y,EAAI,EAIN,GAAIqP,MAAMC,QAAQqG,EAAiBhM,eAAiBgM,EAAiBhM,aAAapO,OAAQ,CACxF,IAAIqJ,EAAQ+Q,EAAiBhM,aAE7B,IAAK3J,EAAI,EAAGA,EAAI4E,EAAMrJ,OAAQyE,IAAK,CACjC,IAAIgZ,EAAUpU,EAAM5E,GAEpB,GAAIgZ,EAAQpW,QAAUkV,EAAW,CAC/BiB,EAAQC,EACR,QAKN,IAWIjB,EAXAxG,EAASoE,EACb,GAAIpE,EAAO3O,QAAUkV,GAA6B,YAAhBvG,EAAOrR,KACvC,OAAOqR,EAET,GAAIA,EAAO1F,MACH/L,EAAWyR,EAAO1F,MAChB3L,OAAS4X,EACf,OAAOvG,EAOX,GAAIA,EAAO3H,OAA8B,IAArBkP,EAAUvd,OAAc,CAC1C,IAAI0d,EAAWnZ,EAAWyR,EAAO3H,OAE/BmO,EADEkB,EAAStd,SAAW4B,EACToY,EAAiBpU,iBAEjBvG,KAAK2H,YAAYzB,MAAM+X,EAAStd,QAE/C,IAAI8X,EAAUzY,KAAKwd,eAAeS,EAAS/Y,KAAM6X,GACjD,GAAItE,EACF,OAAOzY,KAAK4c,sBAAsBnE,EAASqE,EAAWgB,GAI1D,GAAIvH,EAAOtQ,SACT,IAAKjB,EAAI,GAAUwC,EAAQ+O,EAAOtQ,SAASjB,OACzC+Y,EAAQ/d,KAAK4c,sBAAsBpV,EAAOsV,EAAWgB,IADR9Y,IAM7C,GAAIwC,EAAMyI,MAAO,CACf,IAAIiO,EAAYpZ,EAAW0C,EAAMyI,OAC7BkO,EAAiBD,EAAUvd,SAAW4B,EAAa,GAAK2b,EAAUvd,OACtEoc,EAAavV,EAAMtB,MAAMgY,EAAUvd,SAAWX,KAAK2H,YAAYzB,MAAMgY,EAAUvd,QAE/E,IAAIyd,EAAYpe,KAAKwd,eAAeU,EAAUhZ,KAAM6X,GAEpD,GAAIqB,IACFL,EAAQ/d,KAAK4c,sBAAsBwB,EAAWtB,EAAWgB,IAE9C,CACTC,EAAMN,eAAiBU,EACvBJ,EAAMnP,MAAQuP,EAAiB,IAAMrB,EACrC,OAQV,OAAKiB,GAASxH,EAAO3O,QAAUkV,EAIxBiB,EAHExH,GAMXjF,GAAK7K,UAAU4X,OAAS,SAAUnI,GAChC,IAAIrI,EAAO7N,KACToB,EAAIiV,EAAAA,QAAW,GACfpP,EAAQ,GACRc,EAAO,KACP6B,EAAQ,KACRC,EAAS,KACT/D,EAAU+H,EAAK/H,QA8CjB,OA5CA1E,EAAEgW,UAAY,SAAUC,GACtB,IAIInS,EAJAH,EAASsS,EAAKnS,KACdW,EAAQwR,EAAKG,WAEbC,EAAMxQ,EAAMA,EAAM1G,OAAS,GAE/B,GAAIkX,EACF,IACEA,EAAIzQ,aAAaC,EAAOlC,EAAQc,EAAOC,GACvC,MAAOpH,GACP,GAAImP,EAAK/H,QAAQwY,OACf,MAAM5f,EAENuI,EAAMzG,KAAK,IAAIoF,EAAQb,EAAQc,EAAOC,SAK1C,GAAa,iBADbZ,EAAOJ,EAAWC,GAAQG,MAExB6C,EAAO,IAAI2B,GAAmB3E,EAAQc,EAAOC,GAC7CmB,EAAMzG,KAAKuH,OACN,CAAA,GAAa,WAAT7C,EAST,MAAM,IAAIuC,MAAM,8CAPhBM,EAAO,IAAI2B,GAAmB,cAAe,GAAI,IACjDE,EAAQ,IAAIR,EAAa,QAAS,GAAI,IACtCS,EAAS,IAAIV,EAAcpE,EAAQc,EAAOC,GAC1C8D,EAAMrC,SAASsC,GACf9B,EAAKR,SAASqC,GACd3C,EAAMzG,KAAKqJ,KAOjBzI,EAAEwX,WAAa,SAAU1T,GACvB,IAAIuS,EAAMxQ,EAAMA,EAAM1G,OAAS,GAC/BoM,EAAAA,GAAO8K,EAAK,wBAA0BvS,GAEtCuS,EAAIrQ,WAAWH,EAAO/B,IAGxB9D,EAAE2Y,MAAM7D,GAAK8D,QAENjS,GAGTuJ,GAAK7K,UAAUsL,SAAW,SAAUmE,GAClClW,KAAK2H,YAAc3H,KAAKqe,OAAOnI,GAC/BlW,KAAK2H,YAAYmJ,aAAe,CAC9BlH,MAAO,IAET5J,KAAKkW,IAAMA,GAGb5E,GAAK7K,UAAUuL,cAAgB,SAAUxF,KAMzC8E,GAAK7K,UAAUkM,UAAY,WACzB,IAAIzM,EAAQlG,KAAK2H,YAAYzB,MACzBqY,EAAM,GACV,IAAK,IAAIC,KAAStY,EAChB,GAAc,KAAVsY,GAAgBA,IAAUjc,EAA9B,CAGA,IAAIyL,EAAK9H,EAAMsY,GACf,OAAQxQ,GACN,IAAK,iCACL,IAAK,mCACL,IAAK,wCACL,IAAK,0CACL,IAAK,4CACL,IAAK,mCACH,UAECA,EAAG/I,QAAQ,iCAGX+I,EAAG/I,QAAQ,wBAGX+I,EAAG/I,QAAQ,4BAGhBsZ,GAAO,UAAYC,EAAQ,KAAOxQ,EAAK,KAEzC,OAAOuQ,GC1tETzK,GAAkBrN,UAAUgY,WAAa,SAASC,GAChDA,EAAQC,cAAgB,SAAW,IAAIzc,EAAAA,OAAQlC,KAAKiU,UAAY,IAAMjU,KAAKkU,WAAc,IAAI/R,SAAS,WAGxG2R,GAAkBrN,UAAUwP,MAAQ,WAClC,MAAO,IAGTnC,GAAkBrN,UAAUmY,WAAa,SAAS9Y,GAChD8G,EAAAA,MAAQ9G,EAAS9F,KAAKgU,WCVxB,IAAI6K,GAAqB,CAAC,iBAAkB,gBAE5C,SAAAC,GAA2B/K,EAAU/R,EAAU8D,GAC7CA,EAAUA,GAAW,GACrB9F,KAAKiU,UAAYF,EACjB/T,KAAKkU,UAAYlS,EAEM,iBAAZ8D,GACT9F,KAAK+e,cAAgBjZ,GAAoB,eACzCA,EAAU,IAEV9F,KAAK+e,cAAgBjZ,EAAQkZ,aAAelZ,EAAQkZ,aAAe,gBAGb,IAApDH,GAAmB5Z,QAAQjF,KAAK+e,iBAClC/e,KAAK+e,cAAgB,gBAGvB/e,KAAKif,eAAgBnZ,EAAQoZ,cAAgD,kBAAzBpZ,EAAQoZ,gBAA+BpZ,EAAQoZ,aAE3E,MAApBpZ,EAAQqZ,WACVnf,KAAKof,YAActZ,EAAQqZ,UAE7Bnf,KAAKqf,kBAAmBvZ,EAAQwZ,iBAAsD,kBAA5BxZ,EAAQwZ,mBAAkCxZ,EAAQwZ,gBACvF,MAAjBxZ,EAAQyZ,QACVvf,KAAKwf,OAAS1Z,EAAQyZ,OAEM,MAA1BzZ,EAAQ2Z,iBACVzf,KAAK0f,kBAAoB5Z,EAAQ2Z,gBChCrC,SAAAE,GAA+BC,EAAO5L,GACrChU,KAAK6f,OAASD,EACd5f,KAAKgU,SAAW,GAChBpH,EAAAA,MAAQ5M,KAAKgU,SAAUA,GCHxB,SAAA8L,GAA6B/L,EAAU/R,EAAU+d,EAAQC,GAC/B,iBAAbjM,GACT/T,KAAKgU,SAAWD,EAChB/T,KAAKgU,SAASiM,MAAO,GAErBjgB,KAAKgU,SAAW,CACdiM,MAAM,EACNlM,SAAUA,EACV/R,SAAUA,EACV+d,OAAQA,EACRC,YAAaA,GF0BnBlB,GAAWrY,UAAUwP,MAAQ,WAE3B,SAAAiK,EAAiBC,GACf,SAAAC,EAAangB,GACX,OAAOA,EAAI,GAAK,IAAMA,EAAIA,EAE5B,OAAOkgB,EAAEE,iBAAmB,IACxBD,EAAID,EAAEG,cAAgB,GAAK,IAC3BF,EAAID,EAAEI,cAAgB,IACtBH,EAAID,EAAEK,eAAiB,IACvBJ,EAAID,EAAEM,iBAAmB,IACzBL,EAAID,EAAEO,iBAAmB,IAE/B,IAWI1e,EAAUF,EAXV6e,EAAM,IAAIpH,KACVxX,EAAUme,EAAQS,GAClBC,EAAe,GACf5gB,KAAKif,gBAEP2B,EAAe,oCAAqC7e,EAAQ,kBAC1CA,EAAQ,8BAFZme,EAAS,IAAI3G,KAAKoH,EAAIE,UAAS,MAGnB,kCAsB5B,OAjBI7gB,KAAKof,WAAoC,iBAAvBpf,KAAK+e,iBAKzBjd,EAAQM,EAAOC,UAAUC,EAAKP,EAAU+e,KAAKC,SAAU,MAE9B,iBAAvB/gB,KAAK+e,eACP/c,EAAW,yHAA6HhC,KAAKkU,UAAY,mBACrJpS,IACFE,GAAY,6HAAiIF,EAAQ,kBAGvJE,EAAW,2HAA+HH,EAAeC,EAAOC,EAAS/B,KAAKkU,WAAa,6IACxDpS,EAAQ,gBAGtI,mBAAqB9B,KAAKwf,OAAS,eAAkBxf,KAAKwf,OAAS,KAAQ,KAC/Exf,KAAK0f,gBAAkB,2BAA+B,IACvD,iMACAkB,EACA,4IAAiJ7e,EAAU,oBACvI/B,KAAKiU,UAAY,mBACrCjS,GACChC,KAAKqf,iBAAmB,gBAAkBtd,EAAU,iBAAmB,IACxE,yCChFJ4d,GAAelZ,UAAUgY,WAAa,SAASC,GAC9CA,EAAQC,cAAgB,UAAY3e,KAAK6f,QAG1CF,GAAelZ,UAAUwP,MAAQ,WAChC,MAAO,IAGR0J,GAAelZ,UAAUmY,WAAa,SAAS9Y,GAC7C8G,EAAAA,MAAQ9G,EAAS9F,KAAKgU,WCAxB8L,GAAarZ,UAAUgY,WAAa,SAAUC,GAC5CA,EAAQsC,WAAa,cAGvBlB,GAAarZ,UAAUwP,MAAQ,WAC7B,MAAO,IAGT6J,GAAarZ,UAAUmY,WAAa,SAAU9Y,GAC5C8G,EAAAA,MAAQ9G,EAAS9F,KAAKgU,WC7BxB,IAQaiN,GAAW,CACtBnN,kBAAiBA,GACjB6L,eAAcA,GACdb,WAAUA,GAEVgB,aAAYA,ICERoB,GAAqB,eAEdC,GAAS,SAASxN,EAAMyN,EAAUtb,GAE7CA,EAAUA,GAAW,GACrB9F,KAAK2T,KAAOA,EACZ3T,KAAKmG,mBAAmBL,GACxB9F,KAAKqhB,oBAAoBD,GACzBphB,KAAKqT,WAAavN,EAAgC,WAE9CA,EAAQwb,uBACcxb,EAAQwb,uBAMpCH,GAAO1a,UAAU8a,cAAgB,SAAS9F,EAAYvW,EAAM8H,EAAW9G,GAOrE,OANKlG,KAAKwhB,cACRxhB,KAAKwhB,YAAc,IAEK,iBAAf/F,IACTA,EAAazb,KAAK2T,KAAKiH,YAAYa,EAAYvW,EAAM8H,EAAW9G,GAAO,IAElElG,KAAKwhB,YAAYhhB,KAAKib,GAAc,GAG7C0F,GAAO1a,UAAUgb,iBAAmB,SAASC,EAAOjG,EAAYvW,EAAM8H,EAAW9G,GAC1ElG,KAAKwhB,cACRxhB,KAAKwhB,YAAc,IAEK,iBAAf/F,IACTA,EAAazb,KAAK2T,KAAKiH,YAAYa,EAAYvW,EAAM8H,EAAW9G,GAAO,IAEzElG,KAAKwhB,YAAYE,GAASjG,GAG5B0F,GAAO1a,UAAUkb,eAAiB,WAChC,OAAO3hB,KAAKwhB,aAGdL,GAAO1a,UAAUmb,iBAAmB,WAClC5hB,KAAKwhB,YAAc,MAGrBL,GAAO1a,UAAUob,cAAgB,SAAS3c,EAAM3G,GACzCyB,KAAK8hB,cACR9hB,KAAK8hB,YAAc,IAErB9hB,KAAK8hB,YAAY5c,GAAQ3G,GAG3B4iB,GAAO1a,UAAUsb,eAAiB,WAChC,OAAO/hB,KAAK8hB,aAGdX,GAAO1a,UAAUub,iBAAmB,WAClChiB,KAAK8hB,YAAc,IAIrBX,GAAO1a,UAAUwb,iBAAmB,SAASC,EAAehd,EAAM8H,EAAW9G,GAI3E,GAHKlG,KAAKmiB,iBACRniB,KAAKmiB,eAAiB,IAEK,iBAAlBD,EAA4B,CACrC,IAAIE,EAAc,GAClBvb,OAAOwb,oBAAoBH,GAAe3W,QAAQ,SAAS+W,EAAMC,EAAKC,GACpEJ,GAAe,IAAME,EAAO,KAAOJ,EAAcI,GAAQ,MAE3DJ,EAAgBE,EAEiB,MAA/BF,EAAc5c,OAAO,EAAG,KAAY4c,EAAgB,IAAMA,GAC9DliB,KAAKmiB,eAAe3hB,KAAK0hB,IAG3Bf,GAAO1a,UAAUgc,kBAAoB,WACnC,OAAOziB,KAAKmiB,gBAGdhB,GAAO1a,UAAUic,oBAAsB,WACrC1iB,KAAKmiB,eAAiB,MAGxBhB,GAAO1a,UAAUkc,YAAc,SAASvB,GACtCphB,KAAKohB,SAAWA,EAChBphB,KAAKqhB,oBAAoBD,IAG3BD,GAAO1a,UAAUmc,SAAW,WACZ5iB,KAAK2T,KAAKhM,YAAYiC,MACpC,OAAO5J,KAAK2T,KAAKoC,oBAGnBoL,GAAO1a,UAAUoc,YAAc,SAAS5B,GACtCjhB,KAAKihB,SAAWA,GAGlBE,GAAO1a,UAAUqc,cAAgB,SAASC,GACxC/iB,KAAK+iB,WAAaA,GAGpB5B,GAAO1a,UAAU4a,oBAAsB,SAASD,GAC9C,IACE5U,EADkBxM,KAAK2T,KAAKhM,YACL6E,SACzB,IAAK,IAAMyE,KAAQzE,EACjBxM,KAAKiR,GAAQjR,KAAKgjB,eAAexW,EAASyE,GAAOmQ,IAIrDD,GAAO1a,UAAUN,mBAAqB,SAASL,GAC7C9F,KAAKijB,cAAgBnd,EAAQod,OAC7BljB,KAAKmjB,eAAiBrd,EAAQqd,eAC9BnjB,KAAK2T,KAAK7N,QAAQwS,cAAgBxS,EAAQwS,eAAiB,aAC3DtY,KAAK2T,KAAK7N,QAAQsd,YAActd,EAAQsd,aAAe,OACvDpjB,KAAK2T,KAAK7N,QAAQ0T,qBAAuB1T,EAAQ0T,mBAC9C1T,EAAQa,oBAAsBH,WAC5BV,EAAQa,kBAAkB4N,WAAa/N,YACE,IAAvCV,EAAQa,kBAAkB4N,UACxBzO,EAAQa,kBAAkB7F,aAAe0F,YAC1CxG,KAAK2T,KAAK7N,QAAQa,kBAAoBb,EAAQa,kBAAkB7F,YAKrEgF,EAAQiP,sBAAwBvO,YACjCxG,KAAK2T,KAAK7N,QAAQiP,oBAAsBjP,EAAQiP,qBAElD/U,KAAK2T,KAAK7N,QAAQ+O,qBAAuB/O,EAAQ+O,oBAGnDsM,GAAO1a,UAAUuc,eAAiB,SAAStY,EAAS0W,GAClD,IAAMhV,EAAQ1B,EAAQ0B,MACpBiO,EAAM,GACR,IAAK,IAAMjJ,KAAQhF,EACjBiO,EAAIjJ,GAAQpR,KAAKqjB,YAAYjX,EAAMgF,GAAOgQ,GAAsBhV,EAAMgF,GAAMjF,UAE9E,OAAOkO,GAGT8G,GAAO1a,UAAU4c,YAAc,SAAS1Y,EAAMyW,GAC5C,IAAMjV,EAAWiV,EAEfnV,EADUtB,EAAKC,QACGqB,QAClBoO,EAAM,GACR,IAAK,IAAMhJ,KAAQpF,EAAS,CAC1BoO,EAAIhJ,GAAQrR,KAAKsjB,cAAcrX,EAAQoF,GAAOlF,GAE9CnM,KADmBA,KAAKmjB,eAAiB9R,EAAK9L,QAAQ2b,GAAoB,KAAO7P,GAC9DgJ,EAAIhJ,GAEzB,OAAOgJ,GAGT8G,GAAO1a,UAAU6c,cAAgB,SAASvU,EAAQ5C,GAChD,IAAM0B,EAAO7N,KAEb,OAAO,SAAS0a,EAAM5U,EAASyd,GAC7B,OAAO1V,EAAK2V,QAAQzU,EAAQ2L,EAAMvO,EAAUrG,EAASyd,KAIzDpC,GAAO1a,UAAU+c,QAAU,SAASzU,EAAQ2L,EAAMvO,EAAUrG,EAASyd,GACnE,IAAI1V,EAAO7N,KACTkF,EAAO6J,EAAOnH,MACdoD,EAAQ+D,EAAO/D,MACfC,EAAS8D,EAAO9D,OAChBc,EAAQgD,EAAOhD,MACfgP,EAAO/a,KAAK2T,KAAKhM,YACjByb,EAAcpjB,KAAK2T,KAAK7N,QAAQsd,YAChCpV,EAAK+M,EAAKxU,iBACVkd,EAAW,GACX3Y,EAAU,GACVoL,EAAM,KAENlK,EAAa,KACbwS,EAAQhc,EAAWuY,EAAK7U,MAAO8H,GAC/B0Q,EAAe,CACbgF,eAAgB,2BAElBC,EAAY,SAAWP,EAAc,+CAsBvC,IAAK,IAAMQ,KApBP5jB,KAAK2T,KAAK7N,QAAQ+O,qBACpB6J,EAAQ,gBAAkB,sCAC1BiF,EAAY,SAAWP,EAAc,8CAIrCpX,EADEhM,KAAK+iB,WACM/iB,KAAK+iB,WACThU,EAAO/C,aAAexF,WAAmC,OAAtBuI,EAAO/C,WACtC+C,EAAO/C,YAELgC,EAAG6V,YAAY,OAAS7V,EAAGzN,OAAS,EAAKyN,EAAK,IAAMA,GAAM9I,EAGtElF,KAAK2T,KAAK7N,QAAQ+O,qBACrB6J,EAAQqE,WAAa,IAAM/W,EAAa,KAG1ClG,EAAUA,GAAW,GAGA9F,KAAK8hB,YAAgBpD,EAAQkF,GAAU5jB,KAAK8hB,YAAY8B,GAC7E,IAAK,IAAMrH,KAAQgH,EAAgB7E,EAAQnC,GAAQgH,EAAahH,GAG5D1O,EAAKoT,UAAYpT,EAAKoT,SAASxC,YACjC5Q,EAAKoT,SAASxC,WAAWC,GACvB7Q,EAAKoT,UAAYpT,EAAKoT,SAASrC,YACjC/Q,EAAKoT,SAASrC,WAAW9Y,GAEZ,QAAViG,IAAuBf,EAAMjF,OAAsB,YAAbiF,EAAM9F,MAA+B,OAATwV,GAKrEoJ,EAAAA,IAAW/X,GAAmB,aAAVA,EAAsB,oDAE1CjB,EAAU+C,EAAK8F,KAAK2G,oBAAoBtP,EAAMpD,MAAO8S,EAAM1P,EAAMoD,cAAepD,EAAMkC,gBAAkBlC,EAAM4D,OAAS5D,EAAMqD,eAN7HyV,EAAAA,IAAW/X,GAAmB,QAAVA,EAAiB,yDACrCjB,EAAU+C,EAAK8F,KAAKkH,eAAe3V,EAAMwV,EAAM8D,EAAOxQ,EAAiB,YAAbhD,EAAM9F,MAC1C,YAArB6J,EAAOlD,YAA6B4X,EAAW,oEAMlDvN,EAAM,0CACEkN,EAAc,aACpBO,EAAY,0DAEZF,EACAzjB,KAAK2T,KAAKjB,gBAAkB,KAC1B7E,EAAK2T,aAAe3T,EAAKoT,SAEvB,IAAMmC,EAAc,YACnBvV,EAAK2T,YAAc3T,EAAK2T,YAAYjT,KAAK,MAAQ,KACjDV,EAAKoT,WAAapT,EAAKoT,SAASnT,YAAcD,EAAKoT,SAAShL,QAAU,IACvE,KAAOmN,EAAc,WAGrB,IAEJ,IAAMA,EAAc,SACnBvV,EAAKsU,eAAiBtU,EAAKsU,eAAe5T,KAAK,KAAO,KACtDV,EAAKoT,UAAYpT,EAAKoT,SAASnT,YAAc,WAAa,IAC3D,IACAhD,EACA,KAAOsY,EAAc,WACdA,EAAc,aAEpBvV,EAAKoT,UAAYpT,EAAKoT,SAASnT,cAChCoI,EAAMrI,EAAKoT,SAASnT,YAAYoI,EAAKkN,IAGpCtd,GAAWA,EAAQgI,cACpBoI,EAAMpQ,EAAQgI,YAAYoI,IAG5BrI,EAAKkW,YAAcjZ,EACnB+C,EAAKmW,YAAc9N,EACnBrI,EAAKoW,aAAe9X,EAERrG,EAAQoe,YAAcC,IAAlC,IAKMC,EAAe,SAASnlB,GAC5B,IACE,OAAOolB,KAAKC,MAAMrlB,GAEpB,MAAM4T,GACJ,OAAOrM,YAMX,OAFA4G,QAAQgG,IAAI,OAAQjH,GAEA0B,EAAe,WAAE0W,KAAKpY,EAAU+J,EAAK,CACvDwI,QAASA,EACTnL,aAAc,OAAQiR,QAAS,aAAc5K,KAC7CtJ,EAAAA,IAAI,SAACmU,GAKH,OAJA5W,EAAK6W,aAAeD,EAASxlB,KAC7B4O,EAAK8W,oBAAsBF,GAAYA,EAAS/F,QAOpD,SAAmBzf,EAAMwlB,GACvB,IAAIpf,EACJ,IACEA,EAAMwI,EAAK8F,KAAKwC,YAAYlX,GAC5B,MAAOoO,GAGP,IAAIpC,IAAWA,EAAO0D,aAAc,CAGlC,IAAMiW,EAAOC,EAAAA,SAAW5lB,GAAQA,EAAOmlB,EAAanlB,GACpD,GAAI2lB,EACF,MAAO,CAAE/R,IAAK,KAAM4R,SAAQA,EAAEK,aAAcF,EAAMhB,OAAQpd,UAAW0P,IAAGA,GAM5E,MAHA7I,EAAMoX,SAAWA,EACjBpX,EAAMpO,KAAOA,EAEPoO,EAER,OAGF,SAAgBhI,EAAKyf,EAAcL,GACjC,IAAI7lB,EAAS,KAEb,IAAKqM,EAEH,MAAO,CAAE4H,IAAK,KAAM4R,SAAU,KAAMK,aAAYA,EAAElB,OAAQve,EAAIoR,OAAQP,IAAGA,GAI3E,IAAK7Q,EAAI0f,OAAS1f,EAAIyR,KACpB,MAAQ,CAAEjE,IAAK,KAAMxN,IAAGA,EAAEyf,aAAYA,EAAElB,OAAQve,EAAIoR,OAAQP,IAAGA,GAGjE,GAAwB,iBAAb7Q,EAAIyR,KAAoB,CACjC,IAAMzJ,EAAa,IAAI5F,MAAM,yBAG7B,OAFA4F,EAAMoX,SAAWA,EACjBpX,EAAMpO,KAAO6lB,EACN,CAAEjS,IAAKxF,EAAOhI,IAAGA,EAAEyf,aAAYA,EAAElB,OAAQpd,UAAW0P,IAAGA,IAGhEtX,EAASyG,EAAIyR,KAAK7L,EAAOrD,UAKvBhJ,EAASyG,EAAIyR,KAAK7L,EAAOrD,MAAMrC,QAAQ,4BAA6B,MAEjE3G,GACH,CAAC,WAAY,MAAO,UAAU2M,QAAQ,SAAUyZ,GAC9C,GAAI3f,EAAIyR,KAAK3J,eAAejI,EAAO8f,GACjC,OAAOpmB,EAASyG,EAAIyR,KAAK5R,EAAO8f,KAKtC,MAAO,CAAEnS,IAAK,KAAMjU,OAAMA,EAAEkmB,aAAYA,EAAElB,OAAQve,EAAIoR,OAAQP,IAAGA,GAtC1D4D,CAAOzU,EAAKpG,EAAMwlB,GAxBhBQ,CAAUR,EAASxlB,KAAMwlB,OAkEtCtD,GAAO1a,UAAUpG,KAAO,SAAU0O,EAAgB9P,EAAW6G,EAAeyd,GAC1E,OAAKvjB,KAAK+O,GAIQ/O,KAAK+O,GAAS1O,KAAKL,KAAMf,EAAM6G,EAASyd,GAHjD2B,EAAAA,WAAW,UAAUnW,EAAM,eCrWtC,IAAAoW,GAAAnlB,KASMolB,GAAQ,GAERC,GAAe,SAAOC,EAAKxf,kEAE/B,OADAsH,QAAQgG,IAAI,qBAAsBkS,GAC9BF,GAAME,IACRlY,QAAQgG,IAAI,iBAAkBkS,GAC9B,CAAA,EAAOF,GAAME,KAEb,CAAA,EAAOC,GAAeD,EAAKxf,SAa/B,SAAA0f,GAAmCF,EAAKxf,EAASsb,iGAOlC,YANU,IAAZtb,IACTA,EAAU,IAEZsH,QAAQgG,IAAI,eAAgBtN,GAC5Bsb,EAAWtb,EAAQsb,UAAYA,EAElB,CAAA,GAhBOkE,EAgBYA,EAhBPxf,EAgBYA,GAfR,IAAzBA,EAAQ2f,aACHF,GAAeD,EAAKxf,GAEpBuf,GAAaC,EAAKxf,YAc3B,OAFM6N,EAAOD,EAAAlU,OAEb,CAAA,EADe,IAAI2hB,GAAOxN,EAAMyN,EAAUtb,IAjB5C,IAAsBwf,EAAKxf,MC1B3B,IAAA4f,GAAA,WAwBE,SAAAA,EAAoBC,GAAA3lB,KAAA2lB,KAAAA,SAEpBD,EAAAjf,UAAA+e,aAAA,SAAaI,EAAiB9f,EAAmBsb,GAE/C,YAF4B,IAAAtb,IAAAA,EAAA,IAC5BA,EAAQuN,WAAarT,KAAK2lB,KACnBH,GAAaI,EAAS9f,EAASsb,wBATzCyE,EAAAA,WAAUnL,KAAA,CAAC,CACVoL,WAAY,oDAlBLC,EAAAA,2IAFT,GCAAC,GAAA,oDAGCC,EAAAA,SAAQvL,KAAA,CAAC,CACRwL,QAAS,CACPC,EAAAA,kBAEFC,QAAS,SAPX","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","'use strict';\n\nexport class NamespaceScope {\n  parent: any;\n  namespaces: any;\n  constructor(parent: any) {\n    if (!(this instanceof NamespaceScope)) {\n      return new NamespaceScope(parent);\n    }\n    this.parent = parent;\n    this.namespaces = {};  \n  }\n\n  getNamespaceURI = function(prefix, localOnly) {\n    switch (prefix) {\n      case 'xml':\n        return 'http://www.w3.org/XML/1998/namespace';\n      case 'xmlns':\n        return 'http://www.w3.org/2000/xmlns/';\n      default:\n        var nsUri = this.namespaces[prefix];\n        /*jshint -W116 */\n        if (nsUri != null) {\n          return nsUri.uri;\n        } else if (!localOnly && this.parent) {\n          return this.parent.getNamespaceURI(prefix);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  getNamespaceMapping = function(prefix) {\n    switch (prefix) {\n      case 'xml':\n        return {\n          uri: 'http://www.w3.org/XML/1998/namespace',\n          prefix: 'xml',\n          declared: true\n        };\n      case 'xmlns':\n        return {\n          uri: 'http://www.w3.org/2000/xmlns/',\n          prefix: 'xmlns',\n          declared: true\n        };\n      default:\n        var mapping = this.namespaces[prefix];\n        /*jshint -W116 */\n        if (mapping != null) {\n          return mapping;\n        } else if (this.parent) {\n          return this.parent.getNamespaceMapping(prefix);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  getPrefix = function(nsUri, localOnly) {\n    switch (nsUri) {\n      case 'http://www.w3.org/XML/1998/namespace':\n        return 'xml';\n      case 'http://www.w3.org/2000/xmlns/':\n        return 'xmlns';\n      default:\n        for (var p in this.namespaces) {\n          if (this.namespaces[p].uri === nsUri) {\n            return p;\n          }\n        }\n        if (!localOnly && this.parent) {\n          return this.parent.getPrefix(nsUri);\n        } else {\n          return null;\n        }\n    }\n  }\n}\n\nexport class NamespaceContext {\n  scopes: any[];\n  prefixCount: number; \n\n  constructor() {\n    if (!(this instanceof NamespaceContext)) {\n      return new NamespaceContext();\n    }\n    this.scopes = [];\n    this.pushContext();\n    this.prefixCount = 0;\n  }\n\n  addNamespace = function(prefix, nsUri, localOnly) {\n    if (this.getNamespaceURI(prefix, localOnly) === nsUri) {\n      return false;\n    }\n    if (this.currentScope) {\n      this.currentScope.namespaces[prefix] = {\n        uri: nsUri,\n        prefix: prefix,\n        declared: false\n      };\n      return true;\n    }\n    return false;\n  }\n\n  pushContext = function() {\n    var scope = new NamespaceScope(this.currentScope);\n    this.scopes.push(scope);\n    this.currentScope = scope;\n    return scope;\n  }\n\n  popContext = function() {\n    var scope = this.scopes.pop();\n    if (scope) {\n      this.currentScope = scope.parent;\n    } else {\n      this.currentScope = null;\n    }\n    return scope;\n  }\n\n  getNamespaceURI = function(prefix, localOnly) {\n    return this.currentScope && this.currentScope.getNamespaceURI(prefix, localOnly);\n  }\n\n  getPrefix = function(nsUri, localOnly) {\n    return this.currentScope && this.currentScope.getPrefix(nsUri, localOnly);\n  }\n  \n  registerNamespace = function(nsUri) {\n    var prefix = this.getPrefix(nsUri);\n    if (prefix) {\n      // If the namespace has already mapped to a prefix\n      return prefix;\n    } else {\n      // Try to generate a unique namespace\n      while (true) {\n        prefix = 'ns' + (++this.prefixCount);\n        if (!this.getNamespaceURI(prefix)) {\n          // The prefix is not used\n          break;\n        }\n      }\n    }\n    this.addNamespace(prefix, nsUri, true);\n    return prefix;\n  }\n\n  declareNamespace = function(prefix, nsUri) {\n    if (this.currentScope) {\n      var mapping = this.currentScope.getNamespaceMapping(prefix);\n      if (mapping && mapping.uri === nsUri && mapping.declared) {\n        return false;\n      }\n      this.currentScope.namespaces[prefix] = {\n        uri: nsUri,\n        prefix: prefix,\n        declared: true\n      };\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Scope for XML namespaces\n * @param [parent] Parent scope\n * \n */\n// export function NamespaceScope(parent) {\n//   if (!(this instanceof NamespaceScope)) {\n//     return NamespaceScope(parent);\n//   }\n//   this.parent = parent;\n//   this.namespaces = {};\n// }\n\n// /**\n//  * Namespace context that manages hierarchical scopes\n//  *  {NamespaceContext}\n//  */\n// export function NamespaceContext() {\n//   if (!(this instanceof NamespaceContext)) {\n//     return NamespaceContext();\n//   }\n//   this.scopes = [];\n//   this.pushContext();\n//   this.prefixCount = 0;\n// }\n\n// /**\n//  * Look up the namespace URI by prefix\n//  * @param  prefix Namespace prefix\n//  * @param  [localOnly] Search current scope only\n//  *   Namespace URI\n//  */\n// NamespaceScope.prototype.getNamespaceURI = function(prefix, localOnly) {\n//   switch (prefix) {\n//     case 'xml':\n//       return 'http://www.w3.org/XML/1998/namespace';\n//     case 'xmlns':\n//       return 'http://www.w3.org/2000/xmlns/';\n//     default:\n//       var nsUri = this.namespaces[prefix];\n//       /*jshint -W116 */\n//       if (nsUri != null) {\n//         return nsUri.uri;\n//       } else if (!localOnly && this.parent) {\n//         return this.parent.getNamespaceURI(prefix);\n//       } else {\n//         return null;\n//       }\n//   }\n// };\n\n// NamespaceScope.prototype.getNamespaceMapping = function(prefix) {\n//   switch (prefix) {\n//     case 'xml':\n//       return {\n//         uri: 'http://www.w3.org/XML/1998/namespace',\n//         prefix: 'xml',\n//         declared: true\n//       };\n//     case 'xmlns':\n//       return {\n//         uri: 'http://www.w3.org/2000/xmlns/',\n//         prefix: 'xmlns',\n//         declared: true\n//       };\n//     default:\n//       var mapping = this.namespaces[prefix];\n//       /*jshint -W116 */\n//       if (mapping != null) {\n//         return mapping;\n//       } else if (this.parent) {\n//         return this.parent.getNamespaceMapping(prefix);\n//       } else {\n//         return null;\n//       }\n//   }\n// };\n\n// /**\n//  * Look up the namespace prefix by URI\n//  * @param  nsUri Namespace URI\n//  * @param  [localOnly] Search current scope only\n//  *   Namespace prefix\n//  */\n// NamespaceScope.prototype.getPrefix = function(nsUri, localOnly) {\n//   switch (nsUri) {\n//     case 'http://www.w3.org/XML/1998/namespace':\n//       return 'xml';\n//     case 'http://www.w3.org/2000/xmlns/':\n//       return 'xmlns';\n//     default:\n//       for (var p in this.namespaces) {\n//         if (this.namespaces[p].uri === nsUri) {\n//           return p;\n//         }\n//       }\n//       if (!localOnly && this.parent) {\n//         return this.parent.getPrefix(nsUri);\n//       } else {\n//         return null;\n//       }\n//   }\n// };\n\n// /**\n//  * Add a prefix/URI namespace mapping\n//  * @param  prefix Namespace prefix\n//  * @param  nsUri Namespace URI\n//  * @param  [localOnly] Search current scope only\n//  *  {boolean} true if the mapping is added or false if the mapping\n//  * already exists\n//  */\n// NamespaceContext.prototype.addNamespace = function(prefix, nsUri, localOnly) {\n//   if (this.getNamespaceURI(prefix, localOnly) === nsUri) {\n//     return false;\n//   }\n//   if (this.currentScope) {\n//     this.currentScope.namespaces[prefix] = {\n//       uri: nsUri,\n//       prefix: prefix,\n//       declared: false\n//     };\n//     return true;\n//   }\n//   return false;\n// };\n\n// /**\n//  * Push a scope into the context\n//  *  The current scope\n//  */\n// NamespaceContext.prototype.pushContext = function() {\n//   var scope = NamespaceScope(this.currentScope);\n//   this.scopes.push(scope);\n//   this.currentScope = scope;\n//   return scope;\n// };\n\n// /**\n//  * Pop a scope out of the context\n//  *   The removed scope\n//  */\n// NamespaceContext.prototype.popContext = function() {\n//   var scope = this.scopes.pop();\n//   if (scope) {\n//     this.currentScope = scope.parent;\n//   } else {\n//     this.currentScope = null;\n//   }\n//   return scope;\n// };\n\n// /**\n//  * Look up the namespace URI by prefix\n//  * @param  prefix Namespace prefix\n//  * @param  [localOnly] Search current scope only\n//  *   Namespace URI\n//  */\n// NamespaceContext.prototype.getNamespaceURI = function(prefix, localOnly) {\n//   return this.currentScope && this.currentScope.getNamespaceURI(prefix, localOnly);\n// };\n\n// /**\n//  * Look up the namespace prefix by URI\n//  * @param  nsURI Namespace URI\n//  * @param  [localOnly] Search current scope only\n//  *   Namespace prefix\n//  */\n// NamespaceContext.prototype.getPrefix = function(nsUri, localOnly) {\n//   return this.currentScope && this.currentScope.getPrefix(nsUri, localOnly);\n// };\n\n// /**\n//  * Register a namespace\n//  * @param  nsUri Namespace URI\n//  *   The matching or generated namespace prefix\n//  */\n// NamespaceContext.prototype.registerNamespace = function(nsUri) {\n//   var prefix = this.getPrefix(nsUri);\n//   if (prefix) {\n//     // If the namespace has already mapped to a prefix\n//     return prefix;\n//   } else {\n//     // Try to generate a unique namespace\n//     while (true) {\n//       prefix = 'ns' + (++this.prefixCount);\n//       if (!this.getNamespaceURI(prefix)) {\n//         // The prefix is not used\n//         break;\n//       }\n//     }\n//   }\n//   this.addNamespace(prefix, nsUri, true);\n//   return prefix;\n// };\n\n// /**\n//  * Declare a namespace prefix/uri mapping\n//  * @param  prefix Namespace prefix\n//  * @param  nsUri Namespace URI\n//  *   true if the declaration is created\n//  */\n// NamespaceContext.prototype.declareNamespace = function(prefix, nsUri) {\n//   if (this.currentScope) {\n//     var mapping = this.currentScope.getNamespaceMapping(prefix);\n//     if (mapping && mapping.uri === nsUri && mapping.declared) {\n//       return false;\n//     }\n//     this.currentScope.namespaces[prefix] = {\n//       uri: nsUri,\n//       prefix: prefix,\n//       declared: true\n//     };\n//     return true;\n//   }\n//   return false;\n// };\n","import sha1 from 'crypto-js/sha1';\nimport Base64 from 'crypto-js/enc-base64';\nimport { Buffer } from 'buffer';\n\nexport const passwordDigest = function passwordDigest(nonce, created, password) {\n  const rawNonce = new Buffer(nonce || '', 'base64').toString('binary');\n  return Base64.stringify(sha1(rawNonce + created + password, ''));\n};\n\nexport const TNS_PREFIX = '__tns__'; // Prefix for targetNamespace\n\n/**\n * Find a key from an object based on the value\n * @param  Namespace prefix/uri mapping\n * @param  nsURI value\n * @returns  The matching key\n */\nexport const findPrefix = function(xmlnsMapping, nsURI) {\n  for (const n in xmlnsMapping) {\n    if (n === TNS_PREFIX) { continue; }\n    if (xmlnsMapping[n] === nsURI) {\n      return n;\n    }\n  }\n};\n","/*\n * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>\n * MIT Licensed\n *\n */\n/*jshint proto:true*/\n\n\"use strict\";\n\nimport * as sax from 'sax';\nimport { HttpClient } from '@angular/common/http';\nimport { NamespaceContext } Â from './nscontext';\n\nimport * as url from 'url';\nimport { ok as assert } from 'assert';\n// import stripBom from 'strip-bom';\n\nconst stripBom = (x: string): string => {\n  // Catches EFBBBF (UTF-8 BOM) because the buffer-to-string\n  // conversion translates it to FEFF (UTF-16 BOM)\n  if (x.charCodeAt(0) === 0xFEFF) {\n    return x.slice(1);\n  }\n\n  return x;\n}\n\nimport * as _ from 'lodash';\nimport * as utils from './utils';\n\n\nlet TNS_PREFIX = utils.TNS_PREFIX;\nlet findPrefix = utils.findPrefix;\n\nlet Primitives = {\n  string: 1,\n  boolean: 1,\n  decimal: 1,\n  float: 1,\n  double: 1,\n  anyType: 1,\n  byte: 1,\n  int: 1,\n  long: 1,\n  short: 1,\n  negativeInteger: 1,\n  nonNegativeInteger: 1,\n  positiveInteger: 1,\n  nonPositiveInteger: 1,\n  unsignedByte: 1,\n  unsignedInt: 1,\n  unsignedLong: 1,\n  unsignedShort: 1,\n  duration: 0,\n  dateTime: 0,\n  time: 0,\n  date: 0,\n  gYearMonth: 0,\n  gYear: 0,\n  gMonthDay: 0,\n  gDay: 0,\n  gMonth: 0,\n  hexBinary: 0,\n  base64Binary: 0,\n  anyURI: 0,\n  QName: 0,\n  NOTATION: 0\n};\n\nfunction splitQName(nsName) {\n  let i = typeof nsName === 'string' ? nsName.indexOf(':') : -1;\n  return i < 0 ? { prefix: TNS_PREFIX, name: nsName } :\n    { prefix: nsName.substring(0, i), name: nsName.substring(i + 1) };\n}\n\nfunction xmlEscape(obj) {\n  if (typeof (obj) === 'string') {\n    if (obj.substr(0, 9) === '<![CDATA[' && obj.substr(-3) === \"]]>\") {\n      return obj;\n    }\n    return obj\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;');\n  }\n\n  return obj;\n}\n\nlet trimLeft = /^[\\s\\xA0]+/;\nlet trimRight = /[\\s\\xA0]+$/;\n\nfunction trim(text) {\n  return text.replace(trimLeft, '').replace(trimRight, '');\n}\n\nfunction deepMerge(destination, source) {\n  return _.mergeWith(destination || {}, source, function (a, b) {\n    return _.isArray(a) ? a.concat(b) : undefined;\n  });\n}\n\nlet Element: any = function (nsName, attrs, options) {\n  let parts = splitQName(nsName);\n\n  this.nsName = nsName;\n  this.prefix = parts.prefix;\n  this.name = parts.name;\n  this.children = [];\n  this.xmlns = {};\n\n  this._initializeOptions(options);\n\n  for (let key in attrs) {\n    let match = /^xmlns:?(.*)$/.exec(key);\n    if (match) {\n      this.xmlns[match[1] ? match[1] : TNS_PREFIX] = attrs[key];\n    }\n    else {\n      if (key === 'value') {\n        this[this.valueKey] = attrs[key];\n      } else {\n        this['$' + key] = attrs[key];\n      }\n    }\n  }\n  if (this.$targetNamespace !== undefined) {\n    // Add targetNamespace to the mapping\n    this.xmlns[TNS_PREFIX] = this.$targetNamespace;\n  }\n};\n\nElement.prototype._initializeOptions = function (options) {\n  if (options) {\n    this.valueKey = options.valueKey || '$value';\n    this.xmlKey = options.xmlKey || '$xml';\n    this.ignoredNamespaces = options.ignoredNamespaces || [];\n  } else {\n    this.valueKey = '$value';\n    this.xmlKey = '$xml';\n    this.ignoredNamespaces = [];\n  }\n};\n\nElement.prototype.deleteFixedAttrs = function () {\n  this.children && this.children.length === 0 && delete this.children;\n  this.xmlns && Object.keys(this.xmlns).length === 0 && delete this.xmlns;\n  delete this.nsName;\n  delete this.prefix;\n  delete this.name;\n};\n\nElement.prototype.allowedChildren = [];\n\nElement.prototype.startElement = function (stack, nsName, attrs, options) {\n  if (!this.allowedChildren) {\n    return;\n  }\n\n  let ChildClass = this.allowedChildren[splitQName(nsName).name],\n    element = null;\n\n  if (ChildClass) {\n    stack.push(new ChildClass(nsName, attrs, options));\n  }\n  else {\n    this.unexpected(nsName);\n  }\n\n};\n\nElement.prototype.endElement = function (stack, nsName) {\n  if (this.nsName === nsName) {\n    if (stack.length < 2)\n      return;\n    let parent = stack[stack.length - 2];\n    if (this !== stack[0]) {\n      _.defaultsDeep(stack[0].xmlns, this.xmlns);\n      // delete this.xmlns;\n      parent.children.push(this);\n      parent.addChild(this);\n    }\n    stack.pop();\n  }\n};\n\nElement.prototype.addChild = function (child) {\n  return;\n};\n\nElement.prototype.unexpected = function (name) {\n  throw new Error('Found unexpected element (' + name + ') inside ' + this.nsName);\n};\n\nElement.prototype.description = function (definitions) {\n  return this.$name || this.name;\n};\n\nElement.prototype.init = function () {\n};\n\nElement.createSubClass = function () {\n  let root = this;\n  let subElement = function () {\n    root.apply(this, arguments);\n    this.init();\n  };\n  // inherits(subElement, root);\n  subElement.prototype.__proto__ = root.prototype;\n  return subElement;\n};\n\n\nlet ElementElement = Element.createSubClass();\nlet AnyElement = Element.createSubClass();\nlet InputElement = Element.createSubClass();\nlet OutputElement = Element.createSubClass();\nlet SimpleTypeElement = Element.createSubClass();\nlet RestrictionElement = Element.createSubClass();\nlet ExtensionElement = Element.createSubClass();\nlet ChoiceElement = Element.createSubClass();\nlet EnumerationElement = Element.createSubClass();\nlet ComplexTypeElement = Element.createSubClass();\nlet ComplexContentElement = Element.createSubClass();\nlet SimpleContentElement = Element.createSubClass();\nlet SequenceElement = Element.createSubClass();\nlet AllElement = Element.createSubClass();\nlet MessageElement = Element.createSubClass();\nlet DocumentationElement = Element.createSubClass();\n\nlet SchemaElement = Element.createSubClass();\nlet TypesElement = Element.createSubClass();\nlet OperationElement = Element.createSubClass();\nlet PortTypeElement = Element.createSubClass();\nlet BindingElement = Element.createSubClass();\nlet PortElement = Element.createSubClass();\nlet ServiceElement = Element.createSubClass();\nlet DefinitionsElement = Element.createSubClass();\n\nlet ElementTypeMap = {\n  types: [TypesElement, 'schema documentation'],\n  schema: [SchemaElement, 'element complexType simpleType include import'],\n  element: [ElementElement, 'annotation complexType'],\n  any: [AnyElement, ''],\n  simpleType: [SimpleTypeElement, 'restriction'],\n  restriction: [RestrictionElement, 'enumeration all choice sequence'],\n  extension: [ExtensionElement, 'all sequence choice'],\n  choice: [ChoiceElement, 'element sequence choice any'],\n  // group: [GroupElement, 'element group'],\n  enumeration: [EnumerationElement, ''],\n  complexType: [ComplexTypeElement, 'annotation sequence all complexContent simpleContent choice'],\n  complexContent: [ComplexContentElement, 'extension'],\n  simpleContent: [SimpleContentElement, 'extension'],\n  sequence: [SequenceElement, 'element sequence choice any'],\n  all: [AllElement, 'element choice'],\n\n  service: [ServiceElement, 'port documentation'],\n  port: [PortElement, 'address documentation'],\n  binding: [BindingElement, '_binding SecuritySpec operation documentation'],\n  portType: [PortTypeElement, 'operation documentation'],\n  message: [MessageElement, 'part documentation'],\n  operation: [OperationElement, 'documentation input output fault _operation'],\n  input: [InputElement, 'body SecuritySpecRef documentation header'],\n  output: [OutputElement, 'body SecuritySpecRef documentation header'],\n  fault: [Element, '_fault documentation'],\n  definitions: [DefinitionsElement, 'types message portType binding service import documentation'],\n  documentation: [DocumentationElement, '']\n};\n\nfunction mapElementTypes(types) {\n  let rtn = {};\n  types = types.split(' ');\n  types.forEach(function (type) {\n    rtn[type.replace(/^_/, '')] = (ElementTypeMap[type] || [Element])[0];\n  });\n  return rtn;\n}\n\nfor (let n in ElementTypeMap) {\n  let v = ElementTypeMap[n];\n  v[0].prototype.allowedChildren = mapElementTypes(v[1]);\n}\n\nMessageElement.prototype.init = function () {\n  this.element = null;\n  this.parts = null;\n};\n\nSchemaElement.prototype.init = function () {\n  this.complexTypes = {};\n  this.types = {};\n  this.elements = {};\n  this.includes = [];\n};\n\nTypesElement.prototype.init = function () {\n  this.schemas = {};\n};\n\nOperationElement.prototype.init = function () {\n  this.input = null;\n  this.output = null;\n  this.inputSoap = null;\n  this.outputSoap = null;\n  this.style = '';\n  this.soapAction = '';\n};\n\nPortTypeElement.prototype.init = function () {\n  this.methods = {};\n};\n\nBindingElement.prototype.init = function () {\n  this.transport = '';\n  this.style = '';\n  this.methods = {};\n};\n\nPortElement.prototype.init = function () {\n  this.location = null;\n};\n\nServiceElement.prototype.init = function () {\n  this.ports = {};\n};\n\nDefinitionsElement.prototype.init = function () {\n  if (this.name !== 'definitions') this.unexpected(this.nsName);\n  this.messages = {};\n  this.portTypes = {};\n  this.bindings = {};\n  this.services = {};\n  this.schemas = {};\n};\n\nDocumentationElement.prototype.init = function () {\n};\n\nSchemaElement.prototype.merge = function (source) {\n  assert(source instanceof SchemaElement);\n  if (this.$targetNamespace === source.$targetNamespace) {\n    _.merge(this.complexTypes, source.complexTypes);\n    _.merge(this.types, source.types);\n    _.merge(this.elements, source.elements);\n    _.merge(this.xmlns, source.xmlns);\n  }\n  return this;\n};\n\n\nSchemaElement.prototype.addChild = function (child) {\n  if (child.$name in Primitives)\n    return;\n  if (child.name === 'include' || child.name === 'import') {\n    let location = child.$schemaLocation || child.$location;\n    if (location) {\n      this.includes.push({\n        namespace: child.$namespace || child.$targetNamespace || this.$targetNamespace,\n        location: location\n      });\n    }\n  }\n  else if (child.name === 'complexType') {\n    this.complexTypes[child.$name] = child;\n  }\n  else if (child.name === 'element') {\n    this.elements[child.$name] = child;\n  }\n  else if (child.$name) {\n    this.types[child.$name] = child;\n  }\n  this.children.pop();\n  // child.deleteFixedAttrs();\n};\n//fix#325\nTypesElement.prototype.addChild = function (child) {\n  assert(child instanceof SchemaElement);\n\n  let targetNamespace = child.$targetNamespace;\n\n  if (!this.schemas.hasOwnProperty(targetNamespace)) {\n    this.schemas[targetNamespace] = child;\n  } else {\n    console.error('Target-Namespace \"' + targetNamespace + '\" already in use by another Schema!');\n  }\n};\n\nInputElement.prototype.addChild = function (child) {\n  if (child.name === 'body') {\n    this.use = child.$use;\n    if (this.use === 'encoded') {\n      this.encodingStyle = child.$encodingStyle;\n    }\n    this.children.pop();\n  }\n};\n\nOutputElement.prototype.addChild = function (child) {\n  if (child.name === 'body') {\n    this.use = child.$use;\n    if (this.use === 'encoded') {\n      this.encodingStyle = child.$encodingStyle;\n    }\n    this.children.pop();\n  }\n};\n\nOperationElement.prototype.addChild = function (child) {\n  if (child.name === 'operation') {\n    this.soapAction = child.$soapAction || '';\n    this.style = child.$style || '';\n    this.children.pop();\n  }\n};\n\nBindingElement.prototype.addChild = function (child) {\n  if (child.name === 'binding') {\n    this.transport = child.$transport;\n    this.style = child.$style;\n    this.children.pop();\n  }\n};\n\nPortElement.prototype.addChild = function (child) {\n  if (child.name === 'address' && typeof (child.$location) !== 'undefined') {\n    this.location = child.$location;\n  }\n};\n\nDefinitionsElement.prototype.addChild = function (child) {\n  let self = this;\n  if (child instanceof TypesElement) {\n    // Merge types.schemas into definitions.schemas\n    _.merge(self.schemas, child.schemas);\n  }\n  else if (child instanceof MessageElement) {\n    self.messages[child.$name] = child;\n  }\n  else if (child.name === 'import') {\n    self.schemas[child.$namespace] = new SchemaElement(child.$namespace, {});\n    self.schemas[child.$namespace].addChild(child);\n  }\n  else if (child instanceof PortTypeElement) {\n    self.portTypes[child.$name] = child;\n  }\n  else if (child instanceof BindingElement) {\n    if (child.transport === 'http://schemas.xmlsoap.org/soap/http' ||\n      child.transport === 'http://www.w3.org/2003/05/soap/bindings/HTTP/')\n      self.bindings[child.$name] = child;\n  }\n  else if (child instanceof ServiceElement) {\n    self.services[child.$name] = child;\n  }\n  else if (child instanceof DocumentationElement) {\n  }\n  this.children.pop();\n};\n\nMessageElement.prototype.postProcess = function (definitions) {\n  let part = null;\n  let child = undefined;\n  let children = this.children || [];\n  let ns = undefined;\n  let nsName = undefined;\n  let i = undefined;\n  let type = undefined;\n\n  for (i in children) {\n    if ((child = children[i]).name === 'part') {\n      part = child;\n      break;\n    }\n  }\n\n  if (!part) {\n    return;\n  }\n\n  if (part.$element) {\n    let lookupTypes = [],\n      elementChildren;\n\n    delete this.parts;\n\n    nsName = splitQName(part.$element);\n    ns = nsName.prefix;\n    let schema = definitions.schemas[definitions.xmlns[ns]];\n    this.element = schema.elements[nsName.name];\n    if (!this.element) {\n      // debug(nsName.name + \" is not present in wsdl and cannot be processed correctly.\");\n      return;\n    }\n    this.element.targetNSAlias = ns;\n    this.element.targetNamespace = definitions.xmlns[ns];\n\n    // set the optional $lookupType to be used within `client#_invoke()` when\n    // calling `wsdl#objectToDocumentXML()\n    this.element.$lookupType = part.$element;\n\n    elementChildren = this.element.children;\n\n    // get all nested lookup types (only complex types are followed)\n    if (elementChildren.length > 0) {\n      for (i = 0; i < elementChildren.length; i++) {\n        lookupTypes.push(this._getNestedLookupTypeString(elementChildren[i]));\n      }\n    }\n\n    // if nested lookup types where found, prepare them for furter usage\n    if (lookupTypes.length > 0) {\n      lookupTypes = lookupTypes.\n        join('_').\n        split('_').\n        filter(function removeEmptyLookupTypes(type) {\n          return type !== '^';\n        });\n\n      let schemaXmlns = definitions.schemas[this.element.targetNamespace].xmlns;\n\n      for (i = 0; i < lookupTypes.length; i++) {\n        lookupTypes[i] = this._createLookupTypeObject(lookupTypes[i], schemaXmlns);\n      }\n    }\n\n    this.element.$lookupTypes = lookupTypes;\n\n    if (this.element.$type) {\n      type = splitQName(this.element.$type);\n      let typeNs = schema.xmlns && schema.xmlns[type.prefix] || definitions.xmlns[type.prefix];\n\n      if (typeNs) {\n        if (type.name in Primitives) {\n          // this.element = this.element.$type;\n        }\n        else {\n          // first check local mapping of ns alias to namespace\n          schema = definitions.schemas[typeNs];\n          let ctype = schema.complexTypes[type.name] || schema.types[type.name] || schema.elements[type.name];\n\n\n          if (ctype) {\n            this.parts = ctype.description(definitions, schema.xmlns);\n          }\n        }\n      }\n    }\n    else {\n      let method = this.element.description(definitions, schema.xmlns);\n      this.parts = method[nsName.name];\n    }\n\n\n    this.children.splice(0, 1);\n  } else {\n    // rpc encoding\n    this.parts = {};\n    delete this.element;\n    for (i = 0; part = this.children[i]; i++) {\n      if (part.name === 'documentation') {\n        // <wsdl:documentation can be present under <wsdl:message>\n        continue;\n      }\n      assert(part.name === 'part', 'Expected part element');\n      nsName = splitQName(part.$type);\n      ns = definitions.xmlns[nsName.prefix];\n      type = nsName.name;\n      let schemaDefinition = definitions.schemas[ns];\n      if (typeof schemaDefinition !== 'undefined') {\n        this.parts[part.$name] = definitions.schemas[ns].types[type] || definitions.schemas[ns].complexTypes[type];\n      } else {\n        this.parts[part.$name] = part.$type;\n      }\n\n      if (typeof this.parts[part.$name] === 'object') {\n        this.parts[part.$name].prefix = nsName.prefix;\n        this.parts[part.$name].xmlns = ns;\n      }\n\n      this.children.splice(i--, 1);\n    }\n  }\n  this.deleteFixedAttrs();\n};\n\n/**\n * Takes a given namespaced String(for example: 'alias:property') and creates a lookupType\n * object for further use in as first (lookup) `parameterTypeObj` within the `objectToXML`\n * method and provides an entry point for the already existing code in `findChildSchemaObject`.\n *\n * @method _createLookupTypeObject\n * @param {String}            nsString          The NS String (for example \"alias:type\").\n * @param {Object}            xmlns       The fully parsed `wsdl` definitions object (including all schemas).\n * @returns {Object}\n * @private\n */\nMessageElement.prototype._createLookupTypeObject = function (nsString, xmlns) {\n  let splittedNSString = splitQName(nsString),\n    nsAlias = splittedNSString.prefix,\n    splittedName = splittedNSString.name.split('#'),\n    type = splittedName[0],\n    name = splittedName[1],\n    lookupTypeObj: any = {};\n\n  lookupTypeObj.$namespace = xmlns[nsAlias];\n  lookupTypeObj.$type = nsAlias + ':' + type;\n  lookupTypeObj.$name = name;\n\n  return lookupTypeObj;\n};\n\n/**\n * Iterates through the element and every nested child to find any defined `$type`\n * property and returns it in a underscore ('_') separated String (using '^' as default\n * value if no `$type` property was found).\n *\n * @method _getNestedLookupTypeString\n * @param {Object}            element         The element which (probably) contains nested `$type` values.\n * @returns {String}\n * @private\n */\nMessageElement.prototype._getNestedLookupTypeString = function (element) {\n  let resolvedType = '^',\n    excluded = this.ignoredNamespaces.concat('xs'); // do not process $type values wich start with\n\n  if (element.hasOwnProperty('$type') && typeof element.$type === 'string') {\n    if (excluded.indexOf(element.$type.split(':')[0]) === -1) {\n      resolvedType += ('_' + element.$type + '#' + element.$name);\n    }\n  }\n\n  if (element.children.length > 0) {\n    let self = this;\n\n    element.children.forEach(function (child) {\n      let resolvedChildType = self._getNestedLookupTypeString(child).replace(/\\^_/, '');\n\n      if (resolvedChildType && typeof resolvedChildType === 'string') {\n        resolvedType += ('_' + resolvedChildType);\n      }\n    });\n  }\n\n  return resolvedType;\n};\n\nOperationElement.prototype.postProcess = function (definitions, tag) {\n  let children = this.children;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child.name !== 'input' && child.name !== 'output')\n      continue;\n    if (tag === 'binding') {\n      this[child.name] = child;\n      children.splice(i--, 1);\n      continue;\n    }\n    let messageName = splitQName(child.$message).name;\n    let message = definitions.messages[messageName];\n    message.postProcess(definitions);\n    if (message.element) {\n      definitions.messages[message.element.$name] = message;\n      this[child.name] = message.element;\n    }\n    else {\n      this[child.name] = message;\n    }\n    children.splice(i--, 1);\n  }\n  this.deleteFixedAttrs();\n};\n\nPortTypeElement.prototype.postProcess = function (definitions) {\n  let children = this.children;\n  if (typeof children === 'undefined')\n    return;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child.name !== 'operation')\n      continue;\n    child.postProcess(definitions, 'portType');\n    this.methods[child.$name] = child;\n    children.splice(i--, 1);\n  }\n  delete this.$name;\n  this.deleteFixedAttrs();\n};\n\nBindingElement.prototype.postProcess = function (definitions) {\n  let type = splitQName(this.$type).name,\n    portType = definitions.portTypes[type],\n    style = this.style,\n    children = this.children;\n  if (portType) {\n    portType.postProcess(definitions);\n    this.methods = portType.methods;\n\n    for (let i = 0, child; child = children[i]; i++) {\n      if (child.name !== 'operation')\n        continue;\n      child.postProcess(definitions, 'binding');\n      children.splice(i--, 1);\n      child.style || (child.style = style);\n      let method = this.methods[child.$name];\n\n      if (method) {\n        method.style = child.style;\n        method.soapAction = child.soapAction;\n        method.inputSoap = child.input || null;\n        method.outputSoap = child.output || null;\n        method.inputSoap && method.inputSoap.deleteFixedAttrs();\n        method.outputSoap && method.outputSoap.deleteFixedAttrs();\n      }\n    }\n  }\n  delete this.$name;\n  delete this.$type;\n  this.deleteFixedAttrs();\n};\n\nServiceElement.prototype.postProcess = function (definitions) {\n  let children = this.children,\n    bindings = definitions.bindings;\n  if (children && children.length > 0) {\n    for (let i = 0, child; child = children[i]; i++) {\n      if (child.name !== 'port')\n        continue;\n      let bindingName = splitQName(child.$binding).name;\n      let binding = bindings[bindingName];\n      if (binding) {\n        binding.postProcess(definitions);\n        this.ports[child.$name] = {\n          location: child.location,\n          binding: binding\n        };\n        children.splice(i--, 1);\n      }\n    }\n  }\n  delete this.$name;\n  this.deleteFixedAttrs();\n};\n\n\nSimpleTypeElement.prototype.description = function (definitions) {\n  let children = this.children;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof RestrictionElement)\n      return this.$name + \"|\" + child.description();\n  }\n  return {};\n};\n\nRestrictionElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children;\n  let desc;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof SequenceElement ||\n      child instanceof ChoiceElement) {\n      desc = child.description(definitions, xmlns);\n      break;\n    }\n  }\n  if (desc && this.$base) {\n    let type = splitQName(this.$base),\n      typeName = type.name,\n      ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix],\n      schema = definitions.schemas[ns],\n      typeElement = schema && (schema.complexTypes[typeName] || schema.types[typeName] || schema.elements[typeName]);\n\n    desc.getBase = function () {\n      return typeElement.description(definitions, schema.xmlns);\n    };\n    return desc;\n  }\n\n  // then simple element\n  let base = this.$base ? this.$base + \"|\" : \"\";\n  return base + this.children.map(function (child) {\n    return child.description();\n  }).join(\",\");\n};\n\nExtensionElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children;\n  let desc = {};\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof SequenceElement ||\n      child instanceof ChoiceElement) {\n      desc = child.description(definitions, xmlns);\n    }\n  }\n  if (this.$base) {\n    let type = splitQName(this.$base),\n      typeName = type.name,\n      ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix],\n      schema = definitions.schemas[ns];\n\n    if (typeName in Primitives) {\n      return this.$base;\n    }\n    else {\n      let typeElement = schema && (schema.complexTypes[typeName] ||\n        schema.types[typeName] || schema.elements[typeName]);\n\n      if (typeElement) {\n        let base = typeElement.description(definitions, schema.xmlns);\n        desc = _.defaultsDeep(base, desc);\n      }\n    }\n  }\n  return desc;\n};\n\nEnumerationElement.prototype.description = function () {\n  return this[this.valueKey];\n};\n\nComplexTypeElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children || [];\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof ChoiceElement ||\n      child instanceof SequenceElement ||\n      child instanceof AllElement ||\n      child instanceof SimpleContentElement ||\n      child instanceof ComplexContentElement) {\n\n      return child.description(definitions, xmlns);\n    }\n  }\n  return {};\n};\n\nComplexContentElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof ExtensionElement) {\n      return child.description(definitions, xmlns);\n    }\n  }\n  return {};\n};\n\nSimpleContentElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof ExtensionElement) {\n      return child.description(definitions, xmlns);\n    }\n  }\n  return {};\n};\n\nElementElement.prototype.description = function (definitions, xmlns) {\n  let element = {},\n    name = this.$name;\n  let isMany = !this.$maxOccurs ? false : (isNaN(this.$maxOccurs) ? (this.$maxOccurs === 'unbounded') : (this.$maxOccurs > 1));\n  if (this.$minOccurs !== this.$maxOccurs && isMany) {\n    name += '[]';\n  }\n\n  if (xmlns && xmlns[TNS_PREFIX]) {\n    this.$targetNamespace = xmlns[TNS_PREFIX];\n  }\n  let type = this.$type || this.$ref;\n  if (type) {\n    type = splitQName(type);\n    let typeName = type.name,\n      ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix],\n      schema = definitions.schemas[ns],\n      typeElement = schema && (this.$type ? schema.complexTypes[typeName] || schema.types[typeName] : schema.elements[typeName]);\n\n    if (ns && definitions.schemas[ns]) {\n      xmlns = definitions.schemas[ns].xmlns;\n    }\n\n    if (typeElement && !(typeName in Primitives)) {\n\n      if (!(typeName in definitions.descriptions.types)) {\n\n        let elem: any = {};\n        definitions.descriptions.types[typeName] = elem;\n        let description = typeElement.description(definitions, xmlns);\n        if (typeof description === 'string') {\n          elem = description;\n        }\n        else {\n          Object.keys(description).forEach(function (key) {\n            elem[key] = description[key];\n          });\n        }\n\n        if (this.$ref) {\n          element = elem;\n        }\n        else {\n          element[name] = elem;\n        }\n\n        if (typeof elem === 'object') {\n          elem.targetNSAlias = type.prefix;\n          elem.targetNamespace = ns;\n        }\n\n        definitions.descriptions.types[typeName] = elem;\n      }\n      else {\n        if (this.$ref) {\n          element = definitions.descriptions.types[typeName];\n        }\n        else {\n          element[name] = definitions.descriptions.types[typeName];\n        }\n      }\n\n    }\n    else {\n      element[name] = this.$type;\n    }\n  }\n  else {\n    let children = this.children;\n    element[name] = {};\n    for (let i = 0, child; child = children[i]; i++) {\n      if (child instanceof ComplexTypeElement) {\n        element[name] = child.description(definitions, xmlns);\n      }\n    }\n  }\n  return element;\n};\n\nAllElement.prototype.description =\n  SequenceElement.prototype.description = function (definitions, xmlns) {\n    let children = this.children;\n    let sequence = {};\n    for (let i = 0, child; child = children[i]; i++) {\n      if (child instanceof AnyElement) {\n        continue;\n      }\n      let description = child.description(definitions, xmlns);\n      for (let key in description) {\n        sequence[key] = description[key];\n      }\n    }\n    return sequence;\n  };\n\nChoiceElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children;\n  let choice = {};\n  for (let i = 0, child; child = children[i]; i++) {\n    let description = child.description(definitions, xmlns);\n    for (let key in description) {\n      choice[key] = description[key];\n    }\n  }\n  return choice;\n};\n\nMessageElement.prototype.description = function (definitions) {\n  if (this.element) {\n    return this.element && this.element.description(definitions);\n  }\n  let desc = {};\n  desc[this.$name] = this.parts;\n  return desc;\n};\n\nPortTypeElement.prototype.description = function (definitions) {\n  let methods = {};\n  for (let name in this.methods) {\n    let method = this.methods[name];\n    methods[name] = method.description(definitions);\n  }\n  return methods;\n};\n\nOperationElement.prototype.description = function (definitions) {\n  let inputDesc = this.input ? this.input.description(definitions) : null;\n  let outputDesc = this.output ? this.output.description(definitions) : null;\n  return {\n    input: inputDesc && inputDesc[Object.keys(inputDesc)[0]],\n    output: outputDesc && outputDesc[Object.keys(outputDesc)[0]]\n  };\n};\n\nBindingElement.prototype.description = function (definitions) {\n  let methods = {};\n  for (let name in this.methods) {\n    let method = this.methods[name];\n    methods[name] = method.description(definitions);\n  }\n  return methods;\n};\n\nServiceElement.prototype.description = function (definitions) {\n  let ports = {};\n  for (let name in this.ports) {\n    let port = this.ports[name];\n    ports[name] = port.binding.description(definitions);\n  }\n  return ports;\n};\n\nexport let WSDL = function (definition, uri, options) {\n  let self = this,\n    fromFunc;\n\n  this.uri = uri;\n  this.callback = function () {\n  };\n  this._includesWsdl = [];\n\n  // initialize WSDL cache\n  this.WSDL_CACHE = (options || {}).WSDL_CACHE || {};\n\n  this._initializeOptions(options);\n\n  if (typeof definition === 'string') {\n    definition = stripBom(definition);\n    fromFunc = this._fromXML;\n  }\n  else if (typeof definition === 'object') {\n    fromFunc = this._fromServices;\n  }\n  else {\n    throw new Error('WSDL letructor takes either an XML string or service definition');\n  }\n\n  Promise.resolve(true).then(() => {\n    try {\n      fromFunc.call(self, definition);\n    } catch (e) {\n      return self.callback(e.message);\n    }\n\n    self.processIncludes().then(() => {\n      self.definitions.deleteFixedAttrs();\n      let services = self.services = self.definitions.services;\n      if (services) {\n        for (const name in services) {\n          services[name].postProcess(self.definitions);\n        }\n      }\n      let complexTypes = self.definitions.complexTypes;\n      if (complexTypes) {\n        for (const name in complexTypes) {\n          complexTypes[name].deleteFixedAttrs();\n        }\n      }\n\n      // for document style, for every binding, prepare input message element name to (methodName, output message element name) mapping\n      let bindings = self.definitions.bindings;\n      for (let bindingName in bindings) {\n        let binding = bindings[bindingName];\n        if (typeof binding.style === 'undefined') {\n          binding.style = 'document';\n        }\n        if (binding.style !== 'document')\n          continue;\n        let methods = binding.methods;\n        let topEls = binding.topElements = {};\n        for (let methodName in methods) {\n          if (methods[methodName].input) {\n            let inputName = methods[methodName].input.$name;\n            let outputName = \"\";\n            if (methods[methodName].output)\n              outputName = methods[methodName].output.$name;\n            topEls[inputName] = { \"methodName\": methodName, \"outputName\": outputName };\n          }\n        }\n      }\n\n      // prepare soap envelope xmlns definition string\n      self.xmlnsInEnvelope = self._xmlnsMap();\n      self.callback(null, self);\n    }).catch(err => self.callback(err));\n\n  });\n\n  // process.nextTick(function() {\n  //   try {\n  //     fromFunc.call(self, definition);\n  //   } catch (e) {\n  //     return self.callback(e.message);\n  //   }\n\n  //   self.processIncludes(function(err) {\n  //     let name;\n  //     if (err) {\n  //       return self.callback(err);\n  //     }\n\n  //     self.definitions.deleteFixedAttrs();\n  //     let services = self.services = self.definitions.services;\n  //     if (services) {\n  //       for (name in services) {\n  //         services[name].postProcess(self.definitions);\n  //       }\n  //     }\n  //     let complexTypes = self.definitions.complexTypes;\n  //     if (complexTypes) {\n  //       for (name in complexTypes) {\n  //         complexTypes[name].deleteFixedAttrs();\n  //       }\n  //     }\n\n  //     // for document style, for every binding, prepare input message element name to (methodName, output message element name) mapping\n  //     let bindings = self.definitions.bindings;\n  //     for (let bindingName in bindings) {\n  //       let binding = bindings[bindingName];\n  //       if (typeof binding.style === 'undefined') {\n  //         binding.style = 'document';\n  //       }\n  //       if (binding.style !== 'document')\n  //         continue;\n  //       let methods = binding.methods;\n  //       let topEls = binding.topElements = {};\n  //       for (let methodName in methods) {\n  //         if (methods[methodName].input) {\n  //           let inputName = methods[methodName].input.$name;\n  //           let outputName=\"\";\n  //           if(methods[methodName].output )\n  //             outputName = methods[methodName].output.$name;\n  //           topEls[inputName] = {\"methodName\": methodName, \"outputName\": outputName};\n  //         }\n  //       }\n  //     }\n\n  //     // prepare soap envelope xmlns definition string\n  //     self.xmlnsInEnvelope = self._xmlnsMap();\n\n  //     self.callback(err, self);\n  //   });\n\n  // });\n};\n\nWSDL.prototype.ignoredNamespaces = ['tns', 'targetNamespace', 'typedNamespace'];\n\nWSDL.prototype.ignoreBaseNameSpaces = false;\n\nWSDL.prototype.valueKey = '$value';\nWSDL.prototype.xmlKey = '$xml';\n\nWSDL.prototype._initializeOptions = function (options) {\n  this._originalIgnoredNamespaces = (options || {}).ignoredNamespaces;\n  this.options = {};\n\n  let ignoredNamespaces = options ? options.ignoredNamespaces : null;\n\n  if (ignoredNamespaces &&\n    (Array.isArray(ignoredNamespaces.namespaces) || typeof ignoredNamespaces.namespaces === 'string')) {\n    if (ignoredNamespaces.override) {\n      this.options.ignoredNamespaces = ignoredNamespaces.namespaces;\n    } else {\n      this.options.ignoredNamespaces = this.ignoredNamespaces.concat(ignoredNamespaces.namespaces);\n    }\n  } else {\n    this.options.ignoredNamespaces = this.ignoredNamespaces;\n  }\n\n  this.options.valueKey = options.valueKey || this.valueKey;\n  this.options.xmlKey = options.xmlKey || this.xmlKey;\n  if (options.escapeXML !== undefined) {\n    this.options.escapeXML = options.escapeXML;\n  } else {\n    this.options.escapeXML = true;\n  }\n  if (options.returnFault !== undefined) {\n    this.options.returnFault = options.returnFault;\n  } else {\n    this.options.returnFault = false;\n  }\n  this.options.handleNilAsNull = !!options.handleNilAsNull;\n\n  if (options.namespaceArrayElements !== undefined) {\n    this.options.namespaceArrayElements = options.namespaceArrayElements;\n  } else {\n    this.options.namespaceArrayElements = true;\n  }\n\n  // Allow any request headers to keep passing through\n  this.options.wsdl_headers = options.wsdl_headers;\n  this.options.wsdl_options = options.wsdl_options;\n  if (options.httpClient) {\n    this.options.httpClient = options.httpClient;\n  }\n\n  // The supplied request-object should be passed through\n  if (options.request) {\n    this.options.request = options.request;\n  }\n\n  let ignoreBaseNameSpaces = options ? options.ignoreBaseNameSpaces : null;\n  if (ignoreBaseNameSpaces !== null && typeof ignoreBaseNameSpaces !== 'undefined') {\n    this.options.ignoreBaseNameSpaces = ignoreBaseNameSpaces;\n  } else {\n    this.options.ignoreBaseNameSpaces = this.ignoreBaseNameSpaces;\n  }\n\n  // Works only in client\n  this.options.forceSoap12Headers = options.forceSoap12Headers;\n  this.options.customDeserializer = options.customDeserializer;\n\n  if (options.overrideRootElement !== undefined) {\n    this.options.overrideRootElement = options.overrideRootElement;\n  }\n\n  this.options.useEmptyTag = !!options.useEmptyTag;\n};\n\nWSDL.prototype.onReady = function (callback) {\n  if (callback)\n    this.callback = callback;\n};\n\nWSDL.prototype._processNextInclude = async function (includes) {\n  let self = this,\n    include = includes.shift(),\n    options;\n\n  if (!include)\n    return; // callback();\n\n  let includePath;\n  if (!/^https?:/.test(self.uri) && !/^https?:/.test(include.location)) {\n    // includePath = path.resolve(path.dirname(self.uri), include.location);\n  } else {\n    includePath = url.resolve(self.uri || '', include.location);\n  }\n\n  options = _.assign({}, this.options);\n  // follow supplied ignoredNamespaces option\n  options.ignoredNamespaces = this._originalIgnoredNamespaces || this.options.ignoredNamespaces;\n  options.WSDL_CACHE = this.WSDL_CACHE;\n\n  const wsdl = await open_wsdl_recursive(includePath, options)\n  self._includesWsdl.push(wsdl);\n\n  if (wsdl.definitions instanceof DefinitionsElement) {\n    _.mergeWith(self.definitions, wsdl.definitions, function (a, b) {\n      return (a instanceof SchemaElement) ? a.merge(b) : undefined;\n    });\n  } else {\n    self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace] = deepMerge(self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace], wsdl.definitions);\n  }\n\n  return self._processNextInclude(includes);\n\n  // open_wsdl_recursive(includePath, options, function(err, wsdl) {\n  //   if (err) {\n  //     return callback(err);\n  //   }\n\n  //   self._includesWsdl.push(wsdl);\n\n  //   if (wsdl.definitions instanceof DefinitionsElement) {\n  //     _.mergeWith(self.definitions, wsdl.definitions, function(a,b) {\n  //       return (a instanceof SchemaElement) ? a.merge(b) : undefined;\n  //     });\n  //   } else {\n  //     self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace] = deepMerge(self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace], wsdl.definitions);\n  //   }\n  //   self._processNextInclude(includes, function(err) {\n  //     callback(err);\n  //   });\n  // });\n};\n\nWSDL.prototype.processIncludes = async function () {\n  let schemas = this.definitions.schemas,\n    includes = [];\n\n  for (let ns in schemas) {\n    let schema = schemas[ns];\n    includes = includes.concat(schema.includes || []);\n  }\n\n  return this._processNextInclude(includes);\n};\n\nWSDL.prototype.describeServices = function () {\n  let services = {};\n  for (let name in this.services) {\n    let service = this.services[name];\n    services[name] = service.description(this.definitions);\n  }\n  return services;\n};\n\nWSDL.prototype.toXML = function () {\n  return this.xml || '';\n};\n\nWSDL.prototype.xmlToObject = function (xml, callback) {\n  let self = this;\n  let p = typeof callback === 'function' ? {} : sax.parser(true);\n  let objectName = null;\n  let root: any = {};\n  let schema = {\n    Envelope: {\n      Header: {\n        Security: {\n          UsernameToken: {\n            Username: 'string',\n            Password: 'string'\n          }\n        }\n      },\n      Body: {\n        Fault: {\n          faultcode: 'string',\n          faultstring: 'string',\n          detail: 'string'\n        }\n      }\n    }\n  };\n  let stack: any[] = [{ name: null, object: root, schema: schema }];\n  let xmlns: any = {};\n\n  let refs = {}, id; // {id:{hrefs:[],obj:}, ...}\n\n  p.onopentag = function (node) {\n    let nsName = node.name;\n    let attrs: any = node.attributes;\n    let name = splitQName(nsName).name,\n      attributeName,\n      top = stack[stack.length - 1],\n      topSchema = top.schema,\n      elementAttributes = {},\n      hasNonXmlnsAttribute = false,\n      hasNilAttribute = false,\n      obj = {};\n    let originalName = name;\n\n    if (!objectName && top.name === 'Body' && name !== 'Fault') {\n      let message = self.definitions.messages[name];\n      // Support RPC/literal messages where response body contains one element named\n      // after the operation + 'Response'. See http://www.w3.org/TR/wsdl#_names\n      if (!message) {\n        try {\n          // Determine if this is request or response\n          let isInput = false;\n          let isOutput = false;\n          if ((/Response$/).test(name)) {\n            isOutput = true;\n            name = name.replace(/Response$/, '');\n          } else if ((/Request$/).test(name)) {\n            isInput = true;\n            name = name.replace(/Request$/, '');\n          } else if ((/Solicit$/).test(name)) {\n            isInput = true;\n            name = name.replace(/Solicit$/, '');\n          }\n          // Look up the appropriate message as given in the portType's operations\n          let portTypes = self.definitions.portTypes;\n          let portTypeNames = Object.keys(portTypes);\n          // Currently this supports only one portType definition.\n          let portType = portTypes[portTypeNames[0]];\n          if (isInput) {\n            name = portType.methods[name].input.$name;\n          } else {\n            name = portType.methods[name].output.$name;\n          }\n          message = self.definitions.messages[name];\n          // 'cache' this alias to speed future lookups\n          self.definitions.messages[originalName] = self.definitions.messages[name];\n        } catch (e) {\n          if (self.options.returnFault) {\n            p.onerror(e);\n          }\n        }\n      }\n\n      topSchema = message.description(self.definitions);\n      objectName = originalName;\n    }\n\n    if (attrs.href) {\n      id = attrs.href.substr(1);\n      if (!refs[id]) {\n        refs[id] = { hrefs: [], obj: null };\n      }\n      refs[id].hrefs.push({ par: top.object, key: name, obj: obj });\n    }\n    if (id = attrs.id) {\n      if (!refs[id]) {\n        refs[id] = { hrefs: [], obj: null };\n      }\n    }\n\n    //Handle element attributes\n    for (attributeName in attrs) {\n      if (/^xmlns:|^xmlns$/.test(attributeName)) {\n        xmlns[splitQName(attributeName).name] = attrs[attributeName];\n        continue;\n      }\n      hasNonXmlnsAttribute = true;\n      elementAttributes[attributeName] = attrs[attributeName];\n    }\n\n    for (attributeName in elementAttributes) {\n      let res = splitQName(attributeName);\n      if (res.name === 'nil' && xmlns[res.prefix] === 'http://www.w3.org/2001/XMLSchema-instance' && elementAttributes[attributeName] &&\n        (elementAttributes[attributeName].toLowerCase() === 'true' || elementAttributes[attributeName] === '1')\n      ) {\n        hasNilAttribute = true;\n        break;\n      }\n    }\n\n    if (hasNonXmlnsAttribute) {\n      obj[self.options.attributesKey] = elementAttributes;\n    }\n\n    // Pick up the schema for the type specified in element's xsi:type attribute.\n    let xsiTypeSchema;\n    let xsiType = elementAttributes['xsi:type'];\n    if (xsiType) {\n      let type = splitQName(xsiType);\n      let typeURI;\n      if (type.prefix === TNS_PREFIX) {\n        // In case of xsi:type = \"MyType\"\n        typeURI = xmlns[type.prefix] || xmlns.xmlns;\n      } else {\n        typeURI = xmlns[type.prefix];\n      }\n      let typeDef = self.findSchemaObject(typeURI, type.name);\n      if (typeDef) {\n        xsiTypeSchema = typeDef.description(self.definitions);\n      }\n    }\n\n    if (topSchema && topSchema[name + '[]']) {\n      name = name + '[]';\n    }\n    stack.push({\n      name: originalName,\n      object: obj,\n      schema: (xsiTypeSchema || (topSchema && topSchema[name])),\n      id: attrs.id,\n      nil: hasNilAttribute\n    });\n  };\n\n  p.onclosetag = function (nsName) {\n    let cur: any = stack.pop(),\n      obj = cur.object,\n      top = stack[stack.length - 1],\n      topObject = top.object,\n      topSchema = top.schema,\n      name = splitQName(nsName).name;\n\n    if (typeof cur.schema === 'string' && (cur.schema === 'string' || (<string>cur.schema).split(':')[1] === 'string')) {\n      if (typeof obj === 'object' && Object.keys(obj).length === 0) obj = cur.object = '';\n    }\n\n    if (cur.nil === true) {\n      if (self.options.handleNilAsNull) {\n        obj = null;\n      } else {\n        return;\n      }\n    }\n\n    if (_.isPlainObject(obj) && !Object.keys(obj).length) {\n      obj = null;\n    }\n\n    if (topSchema && topSchema[name + '[]']) {\n      if (!topObject[name]) {\n        topObject[name] = [];\n      }\n      topObject[name].push(obj);\n    } else if (name in topObject) {\n      if (!Array.isArray(topObject[name])) {\n        topObject[name] = [topObject[name]];\n      }\n      topObject[name].push(obj);\n    } else {\n      topObject[name] = obj;\n    }\n\n    if (cur.id) {\n      refs[cur.id].obj = obj;\n    }\n  };\n\n  p.oncdata = function (text) {\n    let originalText = text;\n    text = trim(text);\n    if (!text.length) {\n      return;\n    }\n\n    if (/<\\?xml[\\s\\S]+\\?>/.test(text)) {\n      let top = stack[stack.length - 1];\n      let value = self.xmlToObject(text);\n      if (top.object[self.options.attributesKey]) {\n        top.object[self.options.valueKey] = value;\n      } else {\n        top.object = value;\n      }\n    } else {\n      p.ontext(originalText);\n    }\n  };\n\n  p.onerror = function (e) {\n    p.resume();\n    throw {\n      Fault: {\n        faultcode: 500,\n        faultstring: 'Invalid XML',\n        detail: new Error(e).message,\n        statusCode: 500\n      }\n    };\n  };\n\n  p.ontext = function (text) {\n    let originalText = text;\n    text = trim(text);\n    if (!text.length) {\n      return;\n    }\n\n    let top = stack[stack.length - 1];\n    let name = splitQName(top.schema).name,\n      value;\n    if (self.options && self.options.customDeserializer && self.options.customDeserializer[name]) {\n      value = self.options.customDeserializer[name](text, top);\n    }\n    else {\n      if (name === 'int' || name === 'integer') {\n        value = parseInt(text, 10);\n      } else if (name === 'bool' || name === 'boolean') {\n        value = text.toLowerCase() === 'true' || text === '1';\n      } else if (name === 'dateTime' || name === 'date') {\n        value = new Date(text);\n      } else {\n        if (self.options.preserveWhitespace) {\n          text = originalText;\n        }\n        // handle string or other types\n        if (typeof top.object !== 'string') {\n          value = text;\n        } else {\n          value = top.object + text;\n        }\n      }\n    }\n\n    if (top.object[self.options.attributesKey]) {\n      top.object[self.options.valueKey] = value;\n    } else {\n      top.object = value;\n    }\n  };\n\n  if (typeof callback === 'function') {\n    // we be streaming\n    let saxStream = sax.createStream(true);\n    saxStream.on('opentag', p.onopentag);\n    saxStream.on('closetag', p.onclosetag);\n    saxStream.on('cdata', p.oncdata);\n    saxStream.on('text', p.ontext);\n    xml.pipe(saxStream)\n      .on('error', function (err) {\n        callback(err);\n      })\n      .on('end', function () {\n        let r;\n        try {\n          r = finish();\n        } catch (e) {\n          return callback(e);\n        }\n        callback(null, r);\n      });\n    return;\n  }\n  p.write(xml).close();\n\n  return finish();\n\n  function finish() {\n    // MultiRef support: merge objects instead of replacing\n    for (let n in refs) {\n      let ref = refs[n];\n      for (let i = 0; i < ref.hrefs.length; i++) {\n        _.assign(ref.hrefs[i].obj, ref.obj);\n      }\n    }\n\n    if (root.Envelope) {\n      let body = root.Envelope.Body;\n      if (body && body.Fault) {\n        let code = body.Fault.faultcode && body.Fault.faultcode.$value;\n        let string = body.Fault.faultstring && body.Fault.faultstring.$value;\n        let detail = body.Fault.detail && body.Fault.detail.$value;\n\n        code = code || body.Fault.faultcode;\n        string = string || body.Fault.faultstring;\n        detail = detail || body.Fault.detail;\n\n        let error: any = new Error(code + ': ' + string + (detail ? ': ' + detail : ''));\n\n        error.root = root;\n        throw error;\n      }\n      return root.Envelope;\n    }\n    return root;\n  }\n};\n\n/**\n * Look up a XSD type or element by namespace URI and name\n * @param {String} nsURI Namespace URI\n * @param {String} qname Local or qualified name\n * @returns {*} The XSD type/element definition\n */\nWSDL.prototype.findSchemaObject = function (nsURI, qname) {\n  if (!nsURI || !qname) {\n    return null;\n  }\n\n  let def = null;\n\n  if (this.definitions.schemas) {\n    let schema = this.definitions.schemas[nsURI];\n    if (schema) {\n      if (qname.indexOf(':') !== -1) {\n        qname = qname.substring(qname.indexOf(':') + 1, qname.length);\n      }\n\n      // if the client passed an input element which has a `$lookupType` property instead of `$type`\n      // the `def` is found in `schema.elements`.\n      def = schema.complexTypes[qname] || schema.types[qname] || schema.elements[qname];\n    }\n  }\n\n  return def;\n};\n\n/**\n * Create document style xml string from the parameters\n * @param {String} name\n * @param {*} params\n * @param {String} nsPrefix\n * @param {String} nsURI\n * @param {String} type\n */\nWSDL.prototype.objectToDocumentXML = function (name, params, nsPrefix, nsURI, type) {\n  //If user supplies XML already, just use that.  XML Declaration should not be present.\n  if (params && params._xml) {\n    return params._xml;\n  }\n  let args = {};\n  args[name] = params;\n  let parameterTypeObj = type ? this.findSchemaObject(nsURI, type) : null;\n  return this.objectToXML(args, null, nsPrefix, nsURI, true, null, parameterTypeObj);\n};\n\n/**\n * Create RPC style xml string from the parameters\n * @param {String} name\n * @param {*} params\n * @param {String} nsPrefix\n * @param {String} nsURI\n * @returns {string}\n */\nWSDL.prototype.objectToRpcXML = function (name, params, nsPrefix, nsURI, isParts) {\n  let parts = [];\n  let defs = this.definitions;\n  let nsAttrName = '_xmlns';\n\n  nsPrefix = nsPrefix || findPrefix(defs.xmlns, nsURI);\n\n  nsURI = nsURI || defs.xmlns[nsPrefix];\n  nsPrefix = nsPrefix === TNS_PREFIX ? '' : (nsPrefix + ':');\n\n  parts.push(['<', nsPrefix, name, '>'].join(''));\n\n  for (let key in params) {\n    if (!params.hasOwnProperty(key)) {\n      continue;\n    }\n    if (key !== nsAttrName) {\n      let value = params[key];\n      let prefixedKey = (isParts ? '' : nsPrefix) + key;\n      let attributes = [];\n      if (typeof value === 'object' && value.hasOwnProperty(this.options.attributesKey)) {\n        let attrs = value[this.options.attributesKey];\n        for (let n in attrs) {\n          attributes.push(' ' + n + '=' + '\"' + attrs[n] + '\"');\n        }\n      }\n      parts.push(['<', prefixedKey].concat(attributes).concat('>').join(''));\n      parts.push((typeof value === 'object') ? this.objectToXML(value, key, nsPrefix, nsURI) : xmlEscape(value));\n      parts.push(['</', prefixedKey, '>'].join(''));\n    }\n  }\n  parts.push(['</', nsPrefix, name, '>'].join(''));\n  return parts.join('');\n};\n\n\nfunction appendColon(ns) {\n  return (ns && ns.charAt(ns.length - 1) !== ':') ? ns + ':' : ns;\n}\n\nfunction noColonNameSpace(ns) {\n  return (ns && ns.charAt(ns.length - 1) === ':') ? ns.substring(0, ns.length - 1) : ns;\n}\n\nWSDL.prototype.isIgnoredNameSpace = function (ns) {\n  return this.options.ignoredNamespaces.indexOf(ns) > -1;\n};\n\nWSDL.prototype.filterOutIgnoredNameSpace = function (ns) {\n  let namespace = noColonNameSpace(ns);\n  return this.isIgnoredNameSpace(namespace) ? '' : namespace;\n};\n\n\n\n/**\n * Convert an object to XML.  This is a recursive method as it calls itself.\n *\n * @param {Object} obj the object to convert.\n * @param {String} name the name of the element (if the object being traversed is\n * an element).\n * @param {String} nsPrefix the namespace prefix of the object I.E. xsd.\n * @param {String} nsURI the full namespace of the object I.E. http://w3.org/schema.\n * @param {Boolean} isFirst whether or not this is the first item being traversed.\n * @param {?} xmlnsAttr\n * @param {?} parameterTypeObject\n * @param {NamespaceContext} nsContext Namespace context\n */\nWSDL.prototype.objectToXML = function (obj, name, nsPrefix, nsURI, isFirst, xmlnsAttr, schemaObject, nsContext) {\n  let self = this;\n  let schema = this.definitions.schemas[nsURI];\n\n  let parentNsPrefix = nsPrefix ? nsPrefix.parent : undefined;\n  if (typeof parentNsPrefix !== 'undefined') {\n    //we got the parentNsPrefix for our array. setting the namespace-letiable back to the current namespace string\n    nsPrefix = nsPrefix.current;\n  }\n\n  parentNsPrefix = noColonNameSpace(parentNsPrefix);\n  if (this.isIgnoredNameSpace(parentNsPrefix)) {\n    parentNsPrefix = '';\n  }\n\n  let soapHeader = !schema;\n  let qualified = schema && schema.$elementFormDefault === 'qualified';\n  let parts = [];\n  let prefixNamespace = (nsPrefix || qualified) && nsPrefix !== TNS_PREFIX;\n\n  let xmlnsAttrib = '';\n  if (nsURI && isFirst) {\n    if (self.options.overrideRootElement && self.options.overrideRootElement.xmlnsAttributes) {\n      self.options.overrideRootElement.xmlnsAttributes.forEach(function (attribute) {\n        xmlnsAttrib += ' ' + attribute.name + '=\"' + attribute.value + '\"';\n      });\n    } else {\n      if (prefixNamespace && !this.isIgnoredNameSpace(nsPrefix)) {\n        // resolve the prefix namespace\n        xmlnsAttrib += ' xmlns:' + nsPrefix + '=\"' + nsURI + '\"';\n      }\n      // only add default namespace if the schema elementFormDefault is qualified\n      if (qualified || soapHeader) xmlnsAttrib += ' xmlns=\"' + nsURI + '\"';\n    }\n  }\n\n  if (!nsContext) {\n    nsContext = new NamespaceContext();\n    nsContext.declareNamespace(nsPrefix, nsURI);\n  } else {\n    nsContext.pushContext();\n  }\n\n  // explicitly use xmlns attribute if available\n  if (xmlnsAttr && !(self.options.overrideRootElement && self.options.overrideRootElement.xmlnsAttributes)) {\n    xmlnsAttrib = xmlnsAttr;\n  }\n\n  let ns = '';\n\n  if (self.options.overrideRootElement && isFirst) {\n    ns = self.options.overrideRootElement.namespace;\n  } else if (prefixNamespace && (qualified || isFirst || soapHeader) && !this.isIgnoredNameSpace(nsPrefix)) {\n    ns = nsPrefix;\n  }\n\n  let i, n;\n  // start building out XML string.\n  if (Array.isArray(obj)) {\n    for (i = 0, n = obj.length; i < n; i++) {\n      let item = obj[i];\n      let arrayAttr = self.processAttributes(item, nsContext),\n        correctOuterNsPrefix = parentNsPrefix || ns; //using the parent namespace prefix if given\n\n      let body = self.objectToXML(item, name, nsPrefix, nsURI, false, null, schemaObject, nsContext);\n\n      let openingTagParts = ['<', appendColon(correctOuterNsPrefix), name, arrayAttr, xmlnsAttrib];\n\n      if (body === '' && self.options.useEmptyTag) {\n        // Use empty (self-closing) tags if no contents\n        openingTagParts.push(' />');\n        parts.push(openingTagParts.join(''));\n      } else {\n        openingTagParts.push('>');\n        if (self.options.namespaceArrayElements || i === 0) {\n          parts.push(openingTagParts.join(''));\n        }\n        parts.push(body);\n        if (self.options.namespaceArrayElements || i === n - 1) {\n          parts.push(['</', appendColon(correctOuterNsPrefix), name, '>'].join(''));\n        }\n      }\n    }\n  } else if (typeof obj === 'object') {\n    for (name in obj) {\n      if (!obj.hasOwnProperty(name)) continue;\n      //don't process attributes as element\n      if (name === self.options.attributesKey) {\n        continue;\n      }\n      //Its the value of a xml object. Return it directly.\n      if (name === self.options.xmlKey) {\n        nsContext.popContext();\n        return obj[name];\n      }\n      //Its the value of an item. Return it directly.\n      if (name === self.options.valueKey) {\n        nsContext.popContext();\n        return xmlEscape(obj[name]);\n      }\n\n      let child = obj[name];\n      if (typeof child === 'undefined') {\n        continue;\n      }\n\n      let attr = self.processAttributes(child, nsContext);\n\n      let value = '';\n      let nonSubNameSpace = '';\n      let emptyNonSubNameSpace = false;\n\n      let nameWithNsRegex = /^([^:]+):([^:]+)$/.exec(name);\n      if (nameWithNsRegex) {\n        nonSubNameSpace = nameWithNsRegex[1] + ':';\n        name = nameWithNsRegex[2];\n      } else if (name[0] === ':') {\n        emptyNonSubNameSpace = true;\n        name = name.substr(1);\n      }\n\n      if (isFirst) {\n        value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, schemaObject, nsContext);\n      } else {\n\n        if (self.definitions.schemas) {\n          if (schema) {\n            let childSchemaObject = self.findChildSchemaObject(schemaObject, name);\n            //find sub namespace if not a primitive\n            if (childSchemaObject &&\n              ((childSchemaObject.$type && (childSchemaObject.$type.indexOf('xsd:') === -1)) ||\n                childSchemaObject.$ref || childSchemaObject.$name)) {\n              /*if the base name space of the children is not in the ingoredSchemaNamspaces we use it.\n               This is because in some services the child nodes do not need the baseNameSpace.\n               */\n\n              let childNsPrefix: any = '';\n              let childName = '';\n              let childNsURI;\n              let childXmlnsAttrib = '';\n\n              let elementQName = childSchemaObject.$ref || childSchemaObject.$name;\n              if (elementQName) {\n                elementQName = splitQName(elementQName);\n                childName = elementQName.name;\n                if (elementQName.prefix === TNS_PREFIX) {\n                  // Local element\n                  childNsURI = childSchemaObject.$targetNamespace;\n                  childNsPrefix = nsContext.registerNamespace(childNsURI);\n                  if (this.isIgnoredNameSpace(childNsPrefix)) {\n                    childNsPrefix = nsPrefix;\n                  }\n                } else {\n                  childNsPrefix = elementQName.prefix;\n                  if (this.isIgnoredNameSpace(childNsPrefix)) {\n                    childNsPrefix = nsPrefix;\n                  }\n                  childNsURI = schema.xmlns[childNsPrefix] || self.definitions.xmlns[childNsPrefix];\n                }\n\n                let unqualified = false;\n                // Check qualification form for local elements\n                if (childSchemaObject.$name && childSchemaObject.targetNamespace === undefined) {\n                  if (childSchemaObject.$form === 'unqualified') {\n                    unqualified = true;\n                  } else if (childSchemaObject.$form === 'qualified') {\n                    unqualified = false;\n                  } else {\n                    unqualified = schema.$elementFormDefault !== 'qualified';\n                  }\n                }\n                if (unqualified) {\n                  childNsPrefix = '';\n                }\n\n                if (childNsURI && childNsPrefix) {\n                  if (nsContext.declareNamespace(childNsPrefix, childNsURI)) {\n                    childXmlnsAttrib = ' xmlns:' + childNsPrefix + '=\"' + childNsURI + '\"';\n                    xmlnsAttrib += childXmlnsAttrib;\n                  }\n                }\n              }\n\n              let resolvedChildSchemaObject;\n              if (childSchemaObject.$type) {\n                let typeQName = splitQName(childSchemaObject.$type);\n                let typePrefix = typeQName.prefix;\n                let typeURI = schema.xmlns[typePrefix] || self.definitions.xmlns[typePrefix];\n                childNsURI = typeURI;\n                if (typeURI !== 'http://www.w3.org/2001/XMLSchema' && typePrefix !== TNS_PREFIX) {\n                  // Add the prefix/namespace mapping, but not declare it\n                  nsContext.addNamespace(typePrefix, typeURI);\n                }\n                resolvedChildSchemaObject =\n                  self.findSchemaType(typeQName.name, typeURI) || childSchemaObject;\n              } else {\n                resolvedChildSchemaObject =\n                  self.findSchemaObject(childNsURI, childName) || childSchemaObject;\n              }\n\n              if (childSchemaObject.$baseNameSpace && this.options.ignoreBaseNameSpaces) {\n                childNsPrefix = nsPrefix;\n                childNsURI = nsURI;\n              }\n\n              if (this.options.ignoreBaseNameSpaces) {\n                childNsPrefix = '';\n                childNsURI = '';\n              }\n\n              ns = childNsPrefix;\n\n              if (Array.isArray(child)) {\n                //for arrays, we need to remember the current namespace\n                childNsPrefix = {\n                  current: childNsPrefix,\n                  parent: ns\n                };\n              } else {\n                //parent (array) already got the namespace\n                childXmlnsAttrib = null;\n              }\n\n              value = self.objectToXML(child, name, childNsPrefix, childNsURI,\n                false, childXmlnsAttrib, resolvedChildSchemaObject, nsContext);\n            } else if (obj[self.options.attributesKey] && obj[self.options.attributesKey].xsi_type) {\n              //if parent object has complex type defined and child not found in parent\n              let completeChildParamTypeObject = self.findChildSchemaObject(\n                obj[self.options.attributesKey].xsi_type.type,\n                obj[self.options.attributesKey].xsi_type.xmlns);\n\n              nonSubNameSpace = obj[self.options.attributesKey].xsi_type.prefix;\n              nsContext.addNamespace(obj[self.options.attributesKey].xsi_type.prefix,\n                obj[self.options.attributesKey].xsi_type.xmlns);\n              value = self.objectToXML(child, name, obj[self.options.attributesKey].xsi_type.prefix,\n                obj[self.options.attributesKey].xsi_type.xmlns, false, null, null, nsContext);\n            } else {\n              if (Array.isArray(child)) {\n                name = nonSubNameSpace + name;\n              }\n\n              value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, null, nsContext);\n            }\n          } else {\n            value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, null, nsContext);\n          }\n        }\n      }\n\n      ns = noColonNameSpace(ns);\n      if (prefixNamespace && !qualified && isFirst && !self.options.overrideRootElement) {\n        ns = nsPrefix;\n      } else if (this.isIgnoredNameSpace(ns)) {\n        ns = '';\n      }\n\n      let useEmptyTag = !value && self.options.useEmptyTag;\n      if (!Array.isArray(child)) {\n        // start tag\n        parts.push(['<', emptyNonSubNameSpace ? '' : appendColon(nonSubNameSpace || ns), name, attr, xmlnsAttrib,\n          (child === null ? ' xsi:nil=\"true\"' : ''),\n          useEmptyTag ? ' />' : '>'\n        ].join(''));\n      }\n\n      if (!useEmptyTag) {\n        parts.push(value);\n        if (!Array.isArray(child)) {\n          // end tag\n          parts.push(['</', emptyNonSubNameSpace ? '' : appendColon(nonSubNameSpace || ns), name, '>'].join(''));\n        }\n      }\n    }\n  } else if (obj !== undefined) {\n    parts.push((self.options.escapeXML) ? xmlEscape(obj) : obj);\n  }\n  nsContext.popContext();\n  return parts.join('');\n};\n\nWSDL.prototype.processAttributes = function (child, nsContext) {\n  let attr = '';\n\n  if (child === null) {\n    child = [];\n  }\n\n  let attrObj = child[this.options.attributesKey];\n  if (attrObj && attrObj.xsi_type) {\n    let xsiType = attrObj.xsi_type;\n\n    let prefix = xsiType.prefix || xsiType.namespace;\n    // Generate a new namespace for complex extension if one not provided\n    if (!prefix) {\n      prefix = nsContext.registerNamespace(xsiType.xmlns);\n    } else {\n      nsContext.declareNamespace(prefix, xsiType.xmlns);\n    }\n    xsiType.prefix = prefix;\n  }\n\n\n  if (attrObj) {\n    for (let attrKey in attrObj) {\n      //handle complex extension separately\n      if (attrKey === 'xsi_type') {\n        let attrValue = attrObj[attrKey];\n        attr += ' xsi:type=\"' + attrValue.prefix + ':' + attrValue.type + '\"';\n        attr += ' xmlns:' + attrValue.prefix + '=\"' + attrValue.xmlns + '\"';\n\n        continue;\n      } else {\n        attr += ' ' + attrKey + '=\"' + xmlEscape(attrObj[attrKey]) + '\"';\n      }\n    }\n  }\n\n  return attr;\n};\n\n/**\n * Look up a schema type definition\n * @param name\n * @param nsURI\n * @returns {*}\n */\nWSDL.prototype.findSchemaType = function (name, nsURI) {\n  if (!this.definitions.schemas || !name || !nsURI) {\n    return null;\n  }\n\n  let schema = this.definitions.schemas[nsURI];\n  if (!schema || !schema.complexTypes) {\n    return null;\n  }\n\n  return schema.complexTypes[name];\n};\n\nWSDL.prototype.findChildSchemaObject = function (parameterTypeObj, childName, backtrace) {\n  if (!parameterTypeObj || !childName) {\n    return null;\n  }\n\n  if (!backtrace) {\n    backtrace = [];\n  }\n\n  if (backtrace.indexOf(parameterTypeObj) >= 0) {\n    // We've recursed back to ourselves; break.\n    return null;\n  } else {\n    backtrace = backtrace.concat([parameterTypeObj]);\n  }\n\n  let found = null,\n    i = 0,\n    child,\n    ref;\n\n  if (Array.isArray(parameterTypeObj.$lookupTypes) && parameterTypeObj.$lookupTypes.length) {\n    let types = parameterTypeObj.$lookupTypes;\n\n    for (i = 0; i < types.length; i++) {\n      let typeObj = types[i];\n\n      if (typeObj.$name === childName) {\n        found = typeObj;\n        break;\n      }\n    }\n  }\n\n  let object = parameterTypeObj;\n  if (object.$name === childName && object.name === 'element') {\n    return object;\n  }\n  if (object.$ref) {\n    ref = splitQName(object.$ref);\n    if (ref.name === childName) {\n      return object;\n    }\n  }\n\n  let childNsURI;\n\n  // want to avoid unecessary recursion to improve performance\n  if (object.$type && backtrace.length === 1) {\n    let typeInfo = splitQName(object.$type);\n    if (typeInfo.prefix === TNS_PREFIX) {\n      childNsURI = parameterTypeObj.$targetNamespace;\n    } else {\n      childNsURI = this.definitions.xmlns[typeInfo.prefix];\n    }\n    let typeDef = this.findSchemaType(typeInfo.name, childNsURI);\n    if (typeDef) {\n      return this.findChildSchemaObject(typeDef, childName, backtrace);\n    }\n  }\n\n  if (object.children) {\n    for (i = 0, child; child = object.children[i]; i++) {\n      found = this.findChildSchemaObject(child, childName, backtrace);\n      if (found) {\n        break;\n      }\n\n      if (child.$base) {\n        let baseQName = splitQName(child.$base);\n        let childNameSpace = baseQName.prefix === TNS_PREFIX ? '' : baseQName.prefix;\n        childNsURI = child.xmlns[baseQName.prefix] || this.definitions.xmlns[baseQName.prefix];\n\n        let foundBase = this.findSchemaType(baseQName.name, childNsURI);\n\n        if (foundBase) {\n          found = this.findChildSchemaObject(foundBase, childName, backtrace);\n\n          if (found) {\n            found.$baseNameSpace = childNameSpace;\n            found.$type = childNameSpace + ':' + childName;\n            break;\n          }\n        }\n      }\n    }\n\n  }\n\n  if (!found && object.$name === childName) {\n    return object;\n  }\n\n  return found;\n};\n\nWSDL.prototype._parse = function (xml) {\n  let self = this,\n    p = sax.parser(true),\n    stack = [],\n    root = null,\n    types = null,\n    schema = null,\n    options = self.options;\n\n  p.onopentag = function (node) {\n    let nsName = node.name;\n    let attrs = node.attributes;\n\n    let top = stack[stack.length - 1];\n    let name;\n    if (top) {\n      try {\n        top.startElement(stack, nsName, attrs, options);\n      } catch (e) {\n        if (self.options.strict) {\n          throw e;\n        } else {\n          stack.push(new Element(nsName, attrs, options));\n        }\n      }\n    } else {\n      name = splitQName(nsName).name;\n      if (name === 'definitions') {\n        root = new DefinitionsElement(nsName, attrs, options);\n        stack.push(root);\n      } else if (name === 'schema') {\n        // Shim a structure in here to allow the proper objects to be created when merging back.\n        root = new DefinitionsElement('definitions', {}, {});\n        types = new TypesElement('types', {}, {});\n        schema = new SchemaElement(nsName, attrs, options);\n        types.addChild(schema);\n        root.addChild(types);\n        stack.push(schema);\n      } else {\n        throw new Error('Unexpected root element of WSDL or include');\n      }\n    }\n  };\n\n  p.onclosetag = function (name) {\n    let top = stack[stack.length - 1];\n    assert(top, 'Unmatched close tag: ' + name);\n\n    top.endElement(stack, name);\n  };\n\n  p.write(xml).close();\n\n  return root;\n};\n\nWSDL.prototype._fromXML = function (xml) {\n  this.definitions = this._parse(xml);\n  this.definitions.descriptions = {\n    types: {}\n  };\n  this.xml = xml;\n};\n\nWSDL.prototype._fromServices = function (services) {\n\n};\n\n\n\nWSDL.prototype._xmlnsMap = function () {\n  let xmlns = this.definitions.xmlns;\n  let str = '';\n  for (let alias in xmlns) {\n    if (alias === '' || alias === TNS_PREFIX) {\n      continue;\n    }\n    let ns = xmlns[alias];\n    switch (ns) {\n      case \"http://xml.apache.org/xml-soap\": // apachesoap\n      case \"http://schemas.xmlsoap.org/wsdl/\": // wsdl\n      case \"http://schemas.xmlsoap.org/wsdl/soap/\": // wsdlsoap\n      case \"http://schemas.xmlsoap.org/wsdl/soap12/\": // wsdlsoap12\n      case \"http://schemas.xmlsoap.org/soap/encoding/\": // soapenc\n      case \"http://www.w3.org/2001/XMLSchema\": // xsd\n        continue;\n    }\n    if (~ns.indexOf('http://schemas.xmlsoap.org/')) {\n      continue;\n    }\n    if (~ns.indexOf('http://www.w3.org/')) {\n      continue;\n    }\n    if (~ns.indexOf('http://xml.apache.org/')) {\n      continue;\n    }\n    str += ' xmlns:' + alias + '=\"' + ns + '\"';\n  }\n  return str;\n};\n\n/*\n * Have another function to load previous WSDLs as we\n * don't want this to be invoked externally (expect for tests)\n * This will attempt to fix circular dependencies with XSD files,\n * Given\n * - file.wsdl\n *   - xs:import namespace=\"A\" schemaLocation: A.xsd\n * - A.xsd\n *   - xs:import namespace=\"B\" schemaLocation: B.xsd\n * - B.xsd\n *   - xs:import namespace=\"A\" schemaLocation: A.xsd\n * file.wsdl will start loading, import A, then A will import B, which will then import A\n * Because A has already started to load previously it will be returned right away and\n * have an internal circular reference\n * B would then complete loading, then A, then file.wsdl\n * By the time file A starts processing its includes its definitions will be already loaded,\n * this is the only thing that B will depend on when \"opening\" A\n */\nfunction open_wsdl_recursive(uri, options): Promise<any> {\n  let fromCache,\n    WSDL_CACHE;\n\n  // if (typeof options === 'function') {\n  //   callback = options;\n  //   options = {};\n  // }\n\n  WSDL_CACHE = options.WSDL_CACHE;\n\n  if (fromCache = WSDL_CACHE[uri]) {\n    // return callback.call(fromCache, null, fromCache);\n    return fromCache;\n  }\n\n  return open_wsdl(uri, options);\n}\n\nexport async function open_wsdl(uri, options): Promise<any> {\n  // if (typeof options === 'function') {\n  //   callback = options;\n  //   options = {};\n  // }\n\n  // initialize cache when calling open_wsdl directly\n  let WSDL_CACHE = options.WSDL_CACHE || {};\n  let request_headers = options.wsdl_headers;\n  let request_options = options.wsdl_options;\n\n  // let wsdl;\n  // if (!/^https?:/.test(uri)) {\n  //   // debug('Reading file: %s', uri);\n  //   // fs.readFile(uri, 'utf8', function(err, definition) {\n  //   //   if (err) {\n  //   //     callback(err);\n  //   //   }\n  //   //   else {\n  //   //     wsdl = new WSDL(definition, uri, options);\n  //   //     WSDL_CACHE[ uri ] = wsdl;\n  //   //     wsdl.WSDL_CACHE = WSDL_CACHE;\n  //   //     wsdl.onReady(callback);\n  //   //   }\n  //   // });\n  // }\n  // else {\n  //   debug('Reading url: %s', uri);\n  //   let httpClient = options.httpClient || new HttpClient(options);\n  //   httpClient.request(uri, null /* options */, function(err, response, definition) {\n  //     if (err) {\n  //       callback(err);\n  //     } else if (response && response.statusCode === 200) {\n  //       wsdl = new WSDL(definition, uri, options);\n  //       WSDL_CACHE[ uri ] = wsdl;\n  //       wsdl.WSDL_CACHE = WSDL_CACHE;\n  //       wsdl.onReady(callback);\n  //     } else {\n  //       callback(new Error('Invalid WSDL URL: ' + uri + \"\\n\\n\\r Code: \" + response.statusCode + \"\\n\\n\\r Response Body: \" + response.body));\n  //     }\n  //   }, request_headers, request_options);\n  // }\n  // return wsdl;\n\n  console.log('Reading url: %s', uri);\n  const httpClient: HttpClient = options.httpClient;\n  const wsdlDef = await httpClient.get(uri, { responseType: 'text' }).toPromise();\n  const wsdlObj = await new Promise((resolve) => {\n    const wsdl = new WSDL(wsdlDef, uri, options);\n    WSDL_CACHE[uri] = wsdl;\n    wsdl.WSDL_CACHE = WSDL_CACHE;\n    wsdl.onReady(resolve(wsdl));\n  });\n  console.log(\"wsdl\", wsdlObj)\n  return wsdlObj;\n}\n","import * as _ from 'lodash';\nimport { Buffer } from 'buffer';\n\nexport function BasicAuthSecurity(username, password, defaults) {\n  this._username = username;\n  this._password = password;\n  this.defaults = {};\n  _.merge(this.defaults, defaults);\n}\n\nBasicAuthSecurity.prototype.addHeaders = function(headers) {\n  headers.Authorization = 'Basic ' + new Buffer((this._username + ':' + this._password) || '').toString('base64');\n};\n\nBasicAuthSecurity.prototype.toXML = function() {\n  return '';\n};\n\nBasicAuthSecurity.prototype.addOptions = function(options) {\n  _.merge(options, this.defaults);\n};\n","\"use strict\";\n\n// var crypto = require('crypto');\nimport sha1 from 'crypto-js/sha1';\nimport Base64 from 'crypto-js/enc-base64';\n\n// var passwordDigest = require('../utils').passwordDigest;\nimport { passwordDigest } from '../utils';\n\nvar validPasswordTypes = ['PasswordDigest', 'PasswordText'];\n\nexport function WSSecurity(username, password, options) {\n  options = options || {};\n  this._username = username;\n  this._password = password;\n  //must account for backward compatibility for passwordType String param as well as object options defaults: passwordType = 'PasswordText', hasTimeStamp = true   \n  if (typeof options === 'string') {\n    this._passwordType = options ? options : 'PasswordText';\n    options = {};\n  } else {\n    this._passwordType = options.passwordType ? options.passwordType : 'PasswordText';\n  }\n\n  if (validPasswordTypes.indexOf(this._passwordType) === -1) {\n    this._passwordType = 'PasswordText';\n  }\n\n  this._hasTimeStamp = options.hasTimeStamp || typeof options.hasTimeStamp === 'boolean' ? !!options.hasTimeStamp : true;\n  /*jshint eqnull:true */\n  if (options.hasNonce != null) {\n    this._hasNonce = !!options.hasNonce;\n  }\n  this._hasTokenCreated = options.hasTokenCreated || typeof options.hasTokenCreated === 'boolean' ? !!options.hasTokenCreated : true;\n  if (options.actor != null) {\n    this._actor = options.actor;\n  }\n  if (options.mustUnderstand != null) {\n    this._mustUnderstand = !!options.mustUnderstand;\n  }\n}\n\nWSSecurity.prototype.toXML = function() {\n  // avoid dependency on date formatting libraries\n  function getDate(d) {\n    function pad(n) {\n      return n < 10 ? '0' + n : n;\n    }\n    return d.getUTCFullYear() + '-'\n      + pad(d.getUTCMonth() + 1) + '-'\n      + pad(d.getUTCDate()) + 'T'\n      + pad(d.getUTCHours()) + ':'\n      + pad(d.getUTCMinutes()) + ':'\n      + pad(d.getUTCSeconds()) + 'Z';\n  }\n  var now = new Date();\n  var created = getDate(now);\n  var timeStampXml = '';\n  if (this._hasTimeStamp) {\n    var expires = getDate( new Date(now.getTime() + (1000 * 600)) );\n    timeStampXml = \"<wsu:Timestamp wsu:Id=\\\"Timestamp-\"+created+\"\\\">\" +\n      \"<wsu:Created>\"+created+\"</wsu:Created>\" +\n      \"<wsu:Expires>\"+expires+\"</wsu:Expires>\" +\n      \"</wsu:Timestamp>\";\n  }\n\n  var password, nonce;\n  if (this._hasNonce || this._passwordType !== 'PasswordText') {\n    // nonce = base64 ( sha1 ( created + random ) )\n    // var nHash = crypto.createHash('sha1');\n    // nHash.update(created + Math.random());\n    // nonce = nHash.digest('base64');\n    nonce = Base64.stringify(sha1(created + Math.random(), ''));\n  }\n  if (this._passwordType === 'PasswordText') {\n    password = \"<wsse:Password Type=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText\\\">\" + this._password + \"</wsse:Password>\";\n    if (nonce) {\n      password += \"<wsse:Nonce EncodingType=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\\\">\" + nonce + \"</wsse:Nonce>\";\n    }\n  } else {\n    password = \"<wsse:Password Type=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest\\\">\" + passwordDigest(nonce, created, this._password) + \"</wsse:Password>\" +\n      \"<wsse:Nonce EncodingType=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\\\">\" + nonce + \"</wsse:Nonce>\";\n  }\n\n  return \"<wsse:Security \" + (this._actor ? \"soap:actor=\\\"\" + this._actor + \"\\\" \" : \"\") +\n    (this._mustUnderstand ? \"soap:mustUnderstand=\\\"1\\\" \" : \"\") +\n    \"xmlns:wsse=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\\\" xmlns:wsu=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\\\">\" +\n    timeStampXml +\n    \"<wsse:UsernameToken xmlns:wsu=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\\\" wsu:Id=\\\"SecurityToken-\" + created + \"\\\">\" +\n    \"<wsse:Username>\" + this._username + \"</wsse:Username>\" +\n    password +\n    (this._hasTokenCreated ? \"<wsu:Created>\" + created + \"</wsu:Created>\" : \"\") +\n    \"</wsse:UsernameToken>\" +\n    \"</wsse:Security>\";\n};\n\n// module.exports = WSSecurity;\n","\"use strict\";\n\n// var _ = require('lodash');\nimport * as _ from 'lodash';\n\nexport function BearerSecurity(token, defaults) {\n\tthis._token = token;\n\tthis.defaults = {};\n\t_.merge(this.defaults, defaults);\n}\n\nBearerSecurity.prototype.addHeaders = function(headers) {\n\theaders.Authorization = \"Bearer \" + this._token;\n};\n\nBearerSecurity.prototype.toXML = function() {\n\treturn '';\n};\n\nBearerSecurity.prototype.addOptions = function(options) {\n  _.merge(options, this.defaults);\n};\n\n// module.exports = BearerSecurity;\n","\"use strict\";\n\n// var _ = require('lodash');\nimport * as _ from 'lodash';\n\nexport function NTLMSecurity(username, password, domain, workstation) {\n  if (typeof username === \"object\") {\n    this.defaults = username;\n    this.defaults.ntlm = true;\n  } else {\n    this.defaults = {\n      ntlm: true,\n      username: username,\n      password: password,\n      domain: domain,\n      workstation: workstation\n    };\n  }\n}\n\nNTLMSecurity.prototype.addHeaders = function (headers) {\n  headers.Connection = 'keep-alive';\n};\n\nNTLMSecurity.prototype.toXML = function () {\n  return '';\n};\n\nNTLMSecurity.prototype.addOptions = function (options) {\n  _.merge(options, this.defaults);\n};\n\n// module.exports = NTLMSecurity;\n","\"use strict\";\n\nimport {Â BasicAuthSecurity } from './BasicAuthSecurity';\nimport { WSSecurity } from './WSSecurity';\n// import { WSSecurityCert } from './WSSecurityCert';\nimport { BearerSecurity } from './BearerSecurity';\nimport { NTLMSecurity } from './NTLMSecurity';\n\nexport const security = { \n  BasicAuthSecurity,\n  BearerSecurity,\n  WSSecurity,\n  // WSSecurityCert,\n  NTLMSecurity,\n  // ClientSSLSecurity,\n  // ClientSSLSecurityPFX\n};","/*\n * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>\n * MIT Licensed\n */\n\nimport { HttpClient, HttpResponse }Â from '@angular/common/http';\nimport * as assert from 'assert';\n// import * as events from 'events';\n// import * as util from 'util';\nimport { findPrefix } from './utils';\nimport * as _ from 'lodash';\nimport uuid4 from 'uuid/v4';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst nonIdentifierChars = /[^a-z$_0-9]/i;\n\nexport const Client = function(wsdl, endpoint, options) {\n  // events.EventEmitter.call(this);\n  options = options || {};\n  this.wsdl = wsdl;\n  this._initializeOptions(options);\n  this._initializeServices(endpoint);\n  this.httpClient = options.httpClient as HttpClient;\n  const promiseOptions: any = { multiArgs: true };\n  if (options.overridePromiseSuffix) {\n    promiseOptions.suffix = options.overridePromiseSuffix;\n  }\n  Promise.all([this, promiseOptions]);\n};\n// util.inherits(Client, events.EventEmitter);\n\nClient.prototype.addSoapHeader = function(soapHeader, name, namespace, xmlns) {\n  if (!this.soapHeaders) {\n    this.soapHeaders = [];\n  }\n  if (typeof soapHeader === 'object') {\n    soapHeader = this.wsdl.objectToXML(soapHeader, name, namespace, xmlns, true);\n  }\n  return this.soapHeaders.push(soapHeader) - 1;\n};\n\nClient.prototype.changeSoapHeader = function(index, soapHeader, name, namespace, xmlns) {\n  if (!this.soapHeaders) {\n    this.soapHeaders = [];\n  }\n  if (typeof soapHeader === 'object') {\n    soapHeader = this.wsdl.objectToXML(soapHeader, name, namespace, xmlns, true);\n  }\n  this.soapHeaders[index] = soapHeader;\n};\n\nClient.prototype.getSoapHeaders = function() {\n  return this.soapHeaders;\n};\n\nClient.prototype.clearSoapHeaders = function() {\n  this.soapHeaders = null;\n};\n\nClient.prototype.addHttpHeader = function(name, value) {\n  if (!this.httpHeaders) {\n    this.httpHeaders = {};\n  }\n  this.httpHeaders[name] = value;\n};\n\nClient.prototype.getHttpHeaders = function() {\n  return this.httpHeaders;\n};\n\nClient.prototype.clearHttpHeaders = function() {\n  this.httpHeaders = {};\n};\n\n\nClient.prototype.addBodyAttribute = function(bodyAttribute, name, namespace, xmlns) {\n  if (!this.bodyAttributes) {\n    this.bodyAttributes = [];\n  }\n  if (typeof bodyAttribute === 'object') {\n    let composition = '';\n    Object.getOwnPropertyNames(bodyAttribute).forEach(function(prop, idx, array) {\n      composition += ' ' + prop + '=\"' + bodyAttribute[prop] + '\"';\n    });\n    bodyAttribute = composition;\n  }\n  if (bodyAttribute.substr(0, 1) !== ' ') bodyAttribute = ' ' + bodyAttribute;\n  this.bodyAttributes.push(bodyAttribute);\n};\n\nClient.prototype.getBodyAttributes = function() {\n  return this.bodyAttributes;\n};\n\nClient.prototype.clearBodyAttributes = function() {\n  this.bodyAttributes = null;\n};\n\nClient.prototype.setEndpoint = function(endpoint) {\n  this.endpoint = endpoint;\n  this._initializeServices(endpoint);\n};\n\nClient.prototype.describe = function() {\n  const types = this.wsdl.definitions.types;\n  return this.wsdl.describeServices();\n};\n\nClient.prototype.setSecurity = function(security) {\n  this.security = security;\n};\n\nClient.prototype.setSOAPAction = function(SOAPAction) {\n  this.SOAPAction = SOAPAction;\n};\n\nClient.prototype._initializeServices = function(endpoint) {\n  const definitions = this.wsdl.definitions,\n    services = definitions.services;\n  for (const name in services) {\n    this[name] = this._defineService(services[name], endpoint);\n  }\n};\n\nClient.prototype._initializeOptions = function(options) {\n  this.streamAllowed = options.stream;\n  this.normalizeNames = options.normalizeNames;\n  this.wsdl.options.attributesKey = options.attributesKey || 'attributes';\n  this.wsdl.options.envelopeKey = options.envelopeKey || 'soap';\n  this.wsdl.options.preserveWhitespace = !!options.preserveWhitespace;\n  if(options.ignoredNamespaces !== undefined) {\n    if(options.ignoredNamespaces.override !== undefined) {\n      if(options.ignoredNamespaces.override === true) {\n        if(options.ignoredNamespaces.namespaces !== undefined) {\n          this.wsdl.options.ignoredNamespaces = options.ignoredNamespaces.namespaces;\n        }\n      }\n    }\n  }\n  if(options.overrideRootElement !== undefined) {\n    this.wsdl.options.overrideRootElement = options.overrideRootElement;\n  }\n  this.wsdl.options.forceSoap12Headers = !!options.forceSoap12Headers;\n};\n\nClient.prototype._defineService = function(service, endpoint) {\n  const ports = service.ports,\n    def = {};\n  for (const name in ports) {\n    def[name] = this._definePort(ports[name], endpoint ? endpoint : ports[name].location);\n  }\n  return def;\n};\n\nClient.prototype._definePort = function(port, endpoint) {\n  const location = endpoint,\n    binding = port.binding,\n    methods = binding.methods,\n    def = {};\n  for (const name in methods) {\n    def[name] = this._defineMethod(methods[name], location);\n    const methodName = this.normalizeNames ? name.replace(nonIdentifierChars, '_') : name;\n    this[methodName] = def[name];\n  }\n  return def;\n};\n\nClient.prototype._defineMethod = function(method, location) {\n  const self = this;\n  let temp = null;\n  return function(args, options, extraHeaders): Observable<any> {\n    return self._invoke(method, args, location, options, extraHeaders);\n  };\n};\n\nClient.prototype._invoke = function(method, args, location, options, extraHeaders): Observable<any> {\n  let self = this,\n    name = method.$name,\n    input = method.input,\n    output = method.output,\n    style = method.style,\n    defs = this.wsdl.definitions,\n    envelopeKey = this.wsdl.options.envelopeKey,\n    ns = defs.$targetNamespace,\n    encoding = '',\n    message = '',\n    xml = null,\n    req = null,\n    soapAction = null,\n    alias = findPrefix(defs.xmlns, ns),\n    headers: any = {\n      \"Content-Type\": \"text/xml; charset=utf-8\"\n    },\n    xmlnsSoap = \"xmlns:\" + envelopeKey + \"=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"\";\n\n  if (this.wsdl.options.forceSoap12Headers) {\n    headers[\"Content-Type\"] = \"application/soap+xml; charset=utf-8\";\n    xmlnsSoap = \"xmlns:\" + envelopeKey + \"=\\\"http://www.w3.org/2003/05/soap-envelope\\\"\";\n  }\n\n  if (this.SOAPAction) {\n    soapAction = this.SOAPAction;\n  } else if (method.soapAction !== undefined && method.soapAction !== null) {\n    soapAction = method.soapAction;\n  } else {\n    soapAction = ((ns.lastIndexOf(\"/\") !== ns.length - 1) ? ns + \"/\" : ns) + name;\n  }\n\n  if (!this.wsdl.options.forceSoap12Headers) {\n    headers.SOAPAction = '\"' + soapAction + '\"';\n  }\n\n  options = options || {};\n\n  //Add extra headers\n  for (const header in this.httpHeaders ) { headers[header] = this.httpHeaders[header];  }\n  for (const attr in extraHeaders) { headers[attr] = extraHeaders[attr]; }\n\n  // Allow the security object to add headers\n  if (self.security && self.security.addHeaders)\n    self.security.addHeaders(headers);\n  if (self.security && self.security.addOptions)\n    self.security.addOptions(options);\n\n  if ((style === 'rpc')&& ( ( input.parts || input.name===\"element\" ) || args === null) ) {\n    assert.ok(!style || style === 'rpc', 'invalid message definition for document style binding');\n    message = self.wsdl.objectToRpcXML(name, args, alias, ns,(input.name!==\"element\" ));\n    (method.inputSoap === 'encoded') && (encoding = 'soap:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" ');\n  } else {\n    assert.ok(!style || style === 'document', 'invalid message definition for rpc style binding');\n    // pass `input.$lookupType` if `input.$type` could not be found\n    message = self.wsdl.objectToDocumentXML(input.$name, args, input.targetNSAlias, input.targetNamespace, (input.$type || input.$lookupType));\n  }\n  xml = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\" +\n    \"<\" + envelopeKey + \":Envelope \" +\n    xmlnsSoap + \" \" +\n    \"xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \" +\n    encoding +\n    this.wsdl.xmlnsInEnvelope + '>' +\n    ((self.soapHeaders || self.security) ?\n      (\n        \"<\" + envelopeKey + \":Header>\" +\n        (self.soapHeaders ? self.soapHeaders.join(\"\\n\") : \"\") +\n        (self.security && !self.security.postProcess ? self.security.toXML() : \"\") +\n        \"</\" + envelopeKey + \":Header>\"\n      )\n      :\n        ''\n      ) +\n    \"<\" + envelopeKey + \":Body\" +\n    (self.bodyAttributes ? self.bodyAttributes.join(' ') : '') +\n    (self.security && self.security.postProcess ? ' Id=\"_0\"' : '') +\n    \">\" +\n    message +\n    \"</\" + envelopeKey + \":Body>\" +\n    \"</\" + envelopeKey + \":Envelope>\";\n\n  if(self.security && self.security.postProcess){\n    xml = self.security.postProcess(xml, envelopeKey);\n  }\n\n  if(options && options.postProcess){\n    xml = options.postProcess(xml);\n  }\n\n  self.lastMessage = message;\n  self.lastRequest = xml;\n  self.lastEndpoint = location;\n\n  const eid = options.exchangeId || uuid4();\n\n  // self.emit('message', message, eid);\n  // self.emit('request', xml, eid);\n\n  const tryJSONparse = function(body) {\n    try {\n      return JSON.parse(body);\n    }\n    catch(err) {\n      return undefined;\n    }\n  };\n\n  console.log('url:', location)\n  \n  return (<HttpClient>self.httpClient).post(location, xml, {\n    headers: headers,\n    responseType: 'text', observe: 'response' }).pipe(\n    map((response: HttpResponse<any>) => {\n      self.lastResponse = response.body;\n      self.lastResponseHeaders = response && response.headers;\n      // self.lastElapsedTime = response && response.elapsedTime;\n      // self.emit('response', response.body, response, eid);\n      return parseSync(response.body, response)\n    })\n  );\n\n  function parseSync(body, response: HttpResponse<any>) {\n    let obj;\n    try {\n      obj = self.wsdl.xmlToObject(body);\n    } catch (error) {\n      //  When the output element cannot be looked up in the wsdl and the body is JSON\n      //  instead of sending the error, we pass the body in the response.\n      if(!output || !output.$lookupTypes) {\n        // debug('Response element is not present. Unable to convert response xml to json.');\n        //  If the response is JSON then return it as-is.\n        const json = _.isObject(body) ? body : tryJSONparse(body);\n        if (json) {\n          return { err: null, response, responseBody: json, header: undefined, xml };\n        }\n      }\n      error.response = response;\n      error.body = body;\n      // self.emit('soapError', error, eid);\n      throw error;\n    }\n    return finish(obj, body, response);\n  }\n\n  function finish(obj, responseBody, response) {\n    let result = null;\n\n    if (!output){\n      // one-way, no output expected\n      return { err: null, response: null, responseBody, header: obj.Header, xml };\n    }\n\n    // If it's not HTML and Soap Body is empty\n    if (!obj.html && !obj.Body) {\n      return  { err: null, obj, responseBody, header: obj.Header, xml }; \n    }\n\n    if( typeof obj.Body !== 'object' ) {\n      const error: any = new Error('Cannot parse response');\n      error.response = response;\n      error.body = responseBody;\n      return { err: error, obj, responseBody, header: undefined, xml }; \n    }\n\n    result = obj.Body[output.$name];\n    // RPC/literal response body may contain elements with added suffixes I.E.\n    // 'Response', or 'Output', or 'Out'\n    // This doesn't necessarily equal the ouput message name. See WSDL 1.1 Section 2.4.5\n    if(!result){\n      result = obj.Body[output.$name.replace(/(?:Out(?:put)?|Response)$/, '')];\n    }\n    if (!result) {\n      ['Response', 'Out', 'Output'].forEach(function (term) {\n        if (obj.Body.hasOwnProperty(name + term)) {\n          return result = obj.Body[name + term];\n        }\n      });\n    }\n    \n    return { err: null, result, responseBody, header: obj.Header, xml }; \n  }\n};\n\nClient.prototype.call = function (method: string, body: any, options?: any, extraHeaders?: any): Observable<any> {\n  if (!this[method]) {\n    return throwError(`Method ${method} not found`);\n  }\n\n  return (<Function>this[method]).call(this, body, options, extraHeaders);\n}\n","/*\n * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>\n * MIT Licensed\n */\n\nimport * as wsdl from './wsdl';\nimport { security } from './security';\nimport { Client } from './client';\nexport { Client } from './client';\nexport { security  } from './security';\n\nexport { passwordDigest } from './utils'\nexport const WSDL = wsdl.WSDL;\n\nconst cache = {}; // TODO some caching?\n\nconst getFromCache = async (url, options) => {\n  console.log('Getting from cache', url);\n  if (cache[url]) {\n    console.log('Found in cache', url);\n    return cache[url];\n  } else {\n    return wsdl.open_wsdl(url, options)\n  }\n};\n\nfunction _requestWSDL(url, options) {\n  if (options.disableCache === true) {\n    return wsdl.open_wsdl(url, options);\n  } else {\n    return getFromCache(url, options);\n  }\n\n}\n\nexport async function createClient(url, options, endpoint): Promise<any> {\n  if (typeof options === 'undefined') {\n    options = {};\n  }\n  console.log(\"createClient\", options)\n  endpoint = options.endpoint || endpoint;\n  \n  const wsdl = await _requestWSDL(url, options);\n  const client = new Client(wsdl, endpoint, options);\n  return client;\n}\n\nexport const BasicAuthSecurity = security.BasicAuthSecurity;\nexport const NTLMSecurity = security.NTLMSecurity;\nexport const WSSecurity = security.WSSecurity;\n// export const WSSecurityCert = security.WSSecurityCert;\nexport const BearerSecurity = security.BearerSecurity;\n// export const ClientSSLSecurity = security.ClientSSLSecurity;\n// export const ClientSSLSecurityPFX = security.ClientSSLSecurityPFX;\n","import { Injectable } from '@angular/core';\nimport { createClient } from './soap/soap';\nimport { HttpClient } from '@angular/common/http';\nimport { Client } from './soap/interfaces';\n\nexport {\n  Client,\n  WSDL,\n  ISoapMethod,\n  ISoapMethodResponse,\n  BasicAuthSecurity,\n  BearerSecurity,\n  // WSSecurityCert,\n  WSSecurity,\n  NTLMSecurity\n} from './soap/interfaces';\n\nexport { security } from './soap/security'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSoapService {\n\n  constructor(private http: HttpClient) { }\n\n  createClient(wsdlUrl: string, options: any = {}, endpoint?: string): Promise<Client> {\n    options.httpClient = this.http;\n    return createClient(wsdlUrl, options, endpoint) ;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    HttpClientModule\n  ],\n  exports: []\n})\nexport class NgxSoapModule { }\n"]}